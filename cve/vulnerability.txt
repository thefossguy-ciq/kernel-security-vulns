Official CVE definition of vulnerability:
	An instance of one or more weaknesses in a Product that can be
	exploited, causing a negative impact to confidentiality, integrity, or
	availability; a set of conditions or behaviors that allows the
	violation of an explicit or implicit security policy.

How this pertains to Linux and how we evaluate commits to match the above, with
some common situations:


Things that are vulnerabilities:
  - normal user permissions that cause a WARN/BUG or other type of kernel
    crash.
  - normal user-caused NULL dereferences (causes a denial of service, not an "exploit")
  - normal user-caused buffer overflows (even by 1 byte)
  - normal user-caused use-after-free
  - problem that can be triggered across the network
  - problem that can be triggered by accessing a "evil/buggy server"
  - problem that can cause loss of data (disk, network, in-memory, etc.),
    includes data-races that can cause corruption (i.e. lack of proper locking,
    data races, race conditions, etc.)


Things that likely are NOT vulnerabilities, but not always:
  - anything that requires root permissions to trigger.
  - small/normal kmalloc size failure fixes, NOT for GFP_ATOMIC.  Pretty much
    impossible to hit, so not an issue.
  - small memory leaks (i.e. when a device is removed), unless it is possible
    to automate and run as a normal user to end up using all of kernel memory.
    This includes fixes for error path cleanups which again, are almost
    impossible to trigger, unless they are not.
  - anything requiring the system to reboot/upgrade the kernel to trigger
  - mounting specially-crafted filesystem images that can cause problems
  - Evil hardware (i.e PCI devices that send malicious data).  Exception being
    malicious USB device descriptors, NOT malicious USB device protocols (i.e.
    RNDIS.)

