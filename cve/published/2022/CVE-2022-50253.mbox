From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-50253: bpf: make sure skb->len != 0 when redirecting to a tunneling device
Message-Id: <2025091550-CVE-2022-50253-1ed7@gregkh>
Content-Length: 4097
Lines: 92
X-Developer-Signature: v=1; a=openpgp-sha256; l=4190;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=uDngmafQWFDSD1cU8HoQXuDgnS55/rIP4buLT4QXDMk=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBknZPyy5i+vYbTbyx+l6xm3kTnAP/OcHxsjY8WFt8wto
 R6xhas6YlkYBJkYZMUUWb5s4zm6v+KQopeh7WmYOaxMIEMYuDgFYCIFXxgW7Gx0qdrrxFh3yUl7
 /b8rH35dEp32kmFBT8JJtTiVmulbdXpeBle8y+NL/fMGAA==
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

bpf: make sure skb->len != 0 when redirecting to a tunneling device

syzkaller managed to trigger another case where skb->len == 0
when we enter __dev_queue_xmit:

WARNING: CPU: 0 PID: 2470 at include/linux/skbuff.h:2576 skb_assert_len include/linux/skbuff.h:2576 [inline]
WARNING: CPU: 0 PID: 2470 at include/linux/skbuff.h:2576 __dev_queue_xmit+0x2069/0x35e0 net/core/dev.c:4295

Call Trace:
 dev_queue_xmit+0x17/0x20 net/core/dev.c:4406
 __bpf_tx_skb net/core/filter.c:2115 [inline]
 __bpf_redirect_no_mac net/core/filter.c:2140 [inline]
 __bpf_redirect+0x5fb/0xda0 net/core/filter.c:2163
 ____bpf_clone_redirect net/core/filter.c:2447 [inline]
 bpf_clone_redirect+0x247/0x390 net/core/filter.c:2419
 bpf_prog_48159a89cb4a9a16+0x59/0x5e
 bpf_dispatcher_nop_func include/linux/bpf.h:897 [inline]
 __bpf_prog_run include/linux/filter.h:596 [inline]
 bpf_prog_run include/linux/filter.h:603 [inline]
 bpf_test_run+0x46c/0x890 net/bpf/test_run.c:402
 bpf_prog_test_run_skb+0xbdc/0x14c0 net/bpf/test_run.c:1170
 bpf_prog_test_run+0x345/0x3c0 kernel/bpf/syscall.c:3648
 __sys_bpf+0x43a/0x6c0 kernel/bpf/syscall.c:5005
 __do_sys_bpf kernel/bpf/syscall.c:5091 [inline]
 __se_sys_bpf kernel/bpf/syscall.c:5089 [inline]
 __x64_sys_bpf+0x7c/0x90 kernel/bpf/syscall.c:5089
 do_syscall_64+0x54/0x70 arch/x86/entry/common.c:48
 entry_SYSCALL_64_after_hwframe+0x61/0xc6

The reproducer doesn't really reproduce outside of syzkaller
environment, so I'm taking a guess here. It looks like we
do generate correct ETH_HLEN-sized packet, but we redirect
the packet to the tunneling device. Before we do so, we
__skb_pull l2 header and arrive again at skb->len == 0.
Doesn't seem like we can do anything better than having
an explicit check after __skb_pull?

The Linux kernel CVE team has assigned CVE-2022-50253 to this issue.


Affected and fixed versions
===========================

	Fixed in 4.14.303 with commit ffbccc5fb0a67424e12f7f8da210c04c8063f797
	Fixed in 4.19.270 with commit e6a63203e5a90a39392fa1a7ffc60f5e9baf642a
	Fixed in 5.4.229 with commit 772431f30ca040cfbf31b791d468bac6a9ca74d3
	Fixed in 5.10.163 with commit 6d935a02658be82585ecb39aab339faa84496650
	Fixed in 5.15.86 with commit 5d3f4478d22b2cb1810f6fe0f797411e9d87b3e5
	Fixed in 6.0.16 with commit 1b65704b8c08ae92db29f720d3b298031131da53
	Fixed in 6.1.2 with commit f186303845a01cc7e991f9dc51d7e5a3cdc7aedb
	Fixed in 6.2 with commit 07ec7b502800ba9f7b8b15cb01dd6556bb41aaca

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-50253
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	net/core/filter.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/ffbccc5fb0a67424e12f7f8da210c04c8063f797
	https://git.kernel.org/stable/c/e6a63203e5a90a39392fa1a7ffc60f5e9baf642a
	https://git.kernel.org/stable/c/772431f30ca040cfbf31b791d468bac6a9ca74d3
	https://git.kernel.org/stable/c/6d935a02658be82585ecb39aab339faa84496650
	https://git.kernel.org/stable/c/5d3f4478d22b2cb1810f6fe0f797411e9d87b3e5
	https://git.kernel.org/stable/c/1b65704b8c08ae92db29f720d3b298031131da53
	https://git.kernel.org/stable/c/f186303845a01cc7e991f9dc51d7e5a3cdc7aedb
	https://git.kernel.org/stable/c/07ec7b502800ba9f7b8b15cb01dd6556bb41aaca
