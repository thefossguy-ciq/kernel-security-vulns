From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-50145: dmaengine: sf-pdma: Add multithread support for a DMA channel

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

dmaengine: sf-pdma: Add multithread support for a DMA channel

When we get a DMA channel and try to use it in multiple threads it
will cause oops and hanging the system.

% echo 64 > /sys/module/dmatest/parameters/threads_per_chan
% echo 10000 > /sys/module/dmatest/parameters/iterations
% echo 1 > /sys/module/dmatest/parameters/run
[   89.480664] Unable to handle kernel NULL pointer dereference at virtual
               address 00000000000000a0
[   89.488725] Oops [#1]
[   89.494708] CPU: 2 PID: 1008 Comm: dma0chan0-copy0 Not tainted
               5.17.0-rc5
[   89.509385] epc : vchan_find_desc+0x32/0x46
[   89.513553]  ra : sf_pdma_tx_status+0xca/0xd6

This happens because of data race. Each thread rewrite channels's
descriptor as soon as device_prep_dma_memcpy() is called. It leads to the
situation when the driver thinks that it uses right descriptor that
actually is freed or substituted for other one.

With current fixes a descriptor changes its value only when it has
been used. A new descriptor is acquired from vc->desc_issued queue that
is already filled with descriptors that are ready to be sent. Threads
have no direct access to DMA channel descriptor. Now it is just possible
to queue a descriptor for further processing.

The Linux kernel CVE team has assigned CVE-2022-50145 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.5 with commit 6973886ad58e6b4988813331abb76ae0b364a9c2 and fixed in 5.10.137 with commit b9b4992f897be9b0b9e3a3b956cab6b75ccc3f11
	Issue introduced in 5.5 with commit 6973886ad58e6b4988813331abb76ae0b364a9c2 and fixed in 5.15.61 with commit 5ab2782c944e324008ef5d658f2494a9f0e3c5ac
	Issue introduced in 5.5 with commit 6973886ad58e6b4988813331abb76ae0b364a9c2 and fixed in 5.18.18 with commit 4c7350b1dd8a192af844de32fc99b9e34c876fda
	Issue introduced in 5.5 with commit 6973886ad58e6b4988813331abb76ae0b364a9c2 and fixed in 5.19.2 with commit a93b3f1e11971a91b6441b6d47488f4492cc113f
	Issue introduced in 5.5 with commit 6973886ad58e6b4988813331abb76ae0b364a9c2 and fixed in 6.0 with commit b2cc5c465c2cb8ab697c3fd6583c614e3f6cfbcc

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-50145
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/dma/sf-pdma/sf-pdma.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/b9b4992f897be9b0b9e3a3b956cab6b75ccc3f11
	https://git.kernel.org/stable/c/5ab2782c944e324008ef5d658f2494a9f0e3c5ac
	https://git.kernel.org/stable/c/4c7350b1dd8a192af844de32fc99b9e34c876fda
	https://git.kernel.org/stable/c/a93b3f1e11971a91b6441b6d47488f4492cc113f
	https://git.kernel.org/stable/c/b2cc5c465c2cb8ab697c3fd6583c614e3f6cfbcc
