From bippy-1.1.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-49779: kprobes: Skip clearing aggrprobe's post_handler in kprobe-on-ftrace case

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

kprobes: Skip clearing aggrprobe's post_handler in kprobe-on-ftrace case

In __unregister_kprobe_top(), if the currently unregistered probe has
post_handler but other child probes of the aggrprobe do not have
post_handler, the post_handler of the aggrprobe is cleared. If this is
a ftrace-based probe, there is a problem. In later calls to
disarm_kprobe(), we will use kprobe_ftrace_ops because post_handler is
NULL. But we're armed with kprobe_ipmodify_ops. This triggers a WARN in
__disarm_kprobe_ftrace() and may even cause use-after-free:

  Failed to disarm kprobe-ftrace at kernel_clone+0x0/0x3c0 (error -2)
  WARNING: CPU: 5 PID: 137 at kernel/kprobes.c:1135 __disarm_kprobe_ftrace.isra.21+0xcf/0xe0
  Modules linked in: testKprobe_007(-)
  CPU: 5 PID: 137 Comm: rmmod Not tainted 6.1.0-rc4-dirty #18
  [...]
  Call Trace:
   <TASK>
   __disable_kprobe+0xcd/0xe0
   __unregister_kprobe_top+0x12/0x150
   ? mutex_lock+0xe/0x30
   unregister_kprobes.part.23+0x31/0xa0
   unregister_kprobe+0x32/0x40
   __x64_sys_delete_module+0x15e/0x260
   ? do_user_addr_fault+0x2cd/0x6b0
   do_syscall_64+0x3a/0x90
   entry_SYSCALL_64_after_hwframe+0x63/0xcd
   [...]

For the kprobe-on-ftrace case, we keep the post_handler setting to
identify this aggrprobe armed with kprobe_ipmodify_ops. This way we
can disarm it correctly.

The Linux kernel CVE team has assigned CVE-2022-49779 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.4 with commit 0bc11ed5ab60c135aa764a62c02cd5ea68289de4 and fixed in 5.4.225 with commit 7b0007b28dd970176f2e297c06ae63eea2447127
	Issue introduced in 5.4 with commit 0bc11ed5ab60c135aa764a62c02cd5ea68289de4 and fixed in 5.10.156 with commit 7d606ae1abcc3eab5408e42444d789dc7def51b8
	Issue introduced in 5.4 with commit 0bc11ed5ab60c135aa764a62c02cd5ea68289de4 and fixed in 5.15.80 with commit c49cc2c059b503e962c2f13a806c105f9b757df4
	Issue introduced in 5.4 with commit 0bc11ed5ab60c135aa764a62c02cd5ea68289de4 and fixed in 6.0.10 with commit 55788ebbe8b365b4375bd56b4ba7db79d393a370
	Issue introduced in 5.4 with commit 0bc11ed5ab60c135aa764a62c02cd5ea68289de4 and fixed in 6.1 with commit 5dd7caf0bdc5d0bae7cf9776b4d739fb09bd5ebb

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-49779
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	kernel/kprobes.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/7b0007b28dd970176f2e297c06ae63eea2447127
	https://git.kernel.org/stable/c/7d606ae1abcc3eab5408e42444d789dc7def51b8
	https://git.kernel.org/stable/c/c49cc2c059b503e962c2f13a806c105f9b757df4
	https://git.kernel.org/stable/c/55788ebbe8b365b4375bd56b4ba7db79d393a370
	https://git.kernel.org/stable/c/5dd7caf0bdc5d0bae7cf9776b4d739fb09bd5ebb
