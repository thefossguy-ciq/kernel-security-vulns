From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-50086: block: don't allow the same type rq_qos add more than once
Message-Id: <2025061858-CVE-2022-50086-6b94@gregkh>
Content-Length: 2948
Lines: 86
X-Developer-Signature: v=1; a=openpgp-sha256; l=3035;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=A/vQAocRgT58J6kJzcLpIgJyzw9g9mhJ6I5o5JDx2iI=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBlBc7J/vNUonRfIsv7n2WenWSMzP9XO1vm3UfPB96d6d
 41515R0dsSyMAgyMciKKbJ82cZzdH/FIUUvQ9vTMHNYmUCGMHBxCsBEpEwZFpyNrL+8rzflac6l
 VQtcm6dL7T7wjZVhwcHXVju3vXfbXOO/9Z/2a5c6/z87NwEA
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

block: don't allow the same type rq_qos add more than once

In our test of iocost, we encountered some list add/del corruptions of
inner_walk list in ioc_timer_fn.

The reason can be described as follows:

cpu 0					cpu 1
ioc_qos_write				ioc_qos_write

ioc = q_to_ioc(queue);
if (!ioc) {
        ioc = kzalloc();
					ioc = q_to_ioc(queue);
					if (!ioc) {
						ioc = kzalloc();
						...
						rq_qos_add(q, rqos);
					}
        ...
        rq_qos_add(q, rqos);
        ...
}

When the io.cost.qos file is written by two cpus concurrently, rq_qos may
be added to one disk twice. In that case, there will be two iocs enabled
and running on one disk. They own different iocgs on their active list. In
the ioc_timer_fn function, because of the iocgs from two iocs have the
same root iocg, the root iocg's walk_list may be overwritten by each other
and this leads to list add/del corruptions in building or destroying the
inner_walk list.

And so far, the blk-rq-qos framework works in case that one instance for
one type rq_qos per queue by default. This patch make this explicit and
also fix the crash above.

The Linux kernel CVE team has assigned CVE-2022-50086 to this issue.


Affected and fixed versions
===========================

	Fixed in 5.15.61 with commit 0b7f5d7a4d2a72ad9de04ab8ccba2a31904aa638
	Fixed in 5.18.18 with commit 08ef66e800a85afc6b54cb95841f6502627eee2e
	Fixed in 5.19.2 with commit 0c9bb1acd1d103a3070b2126870eb52761d606ce
	Fixed in 6.0 with commit 14a6e2eb7df5c7897c15b109cba29ab0c4a791b6

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-50086
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	block/blk-iocost.c
	block/blk-iolatency.c
	block/blk-rq-qos.h
	block/blk-wbt.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/0b7f5d7a4d2a72ad9de04ab8ccba2a31904aa638
	https://git.kernel.org/stable/c/08ef66e800a85afc6b54cb95841f6502627eee2e
	https://git.kernel.org/stable/c/0c9bb1acd1d103a3070b2126870eb52761d606ce
	https://git.kernel.org/stable/c/14a6e2eb7df5c7897c15b109cba29ab0c4a791b6
