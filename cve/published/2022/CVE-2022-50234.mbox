From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-50234: io_uring/af_unix: defer registered files gc to io_uring release
Message-Id: <2025091545-CVE-2022-50234-bd01@gregkh>
Content-Length: 3098
Lines: 64
X-Developer-Signature: v=1; a=openpgp-sha256; l=3163;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=U01j7jk7VM1IgukzJCBLKfCMAyz4JaRBBiZjZeTniQw=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBknZDzvyx4yTVLZXbAmtP7Z766dLI9mxrgx10QYih+2m
 jO5bIFcRywLgyATg6yYIsuXbTxH91ccUvQytD0NM4eVCWQIAxenAEzk4CeGBa29xz2YZ8qfUuIu
 PsgzvfngqnAFPoZ55oKHtWLdDdwnLm997yC3+s3fyeG2AA==
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

io_uring/af_unix: defer registered files gc to io_uring release

Instead of putting io_uring's registered files in unix_gc() we want it
to be done by io_uring itself. The trick here is to consider io_uring
registered files for cycle detection but not actually putting them down.
Because io_uring can't register other ring instances, this will remove
all refs to the ring file triggering the ->release path and clean up
with io_ring_ctx_free().

[axboe: add kerneldoc comment to skb, fold in skb leak fix]

The Linux kernel CVE team has assigned CVE-2022-50234 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.1 with commit 6b06314c47e141031be043539900d80d2c7ba10f and fixed in 5.4.220 with commit 04df9719df1865f6770af9bc7880874af0e594b2
	Issue introduced in 5.1 with commit 6b06314c47e141031be043539900d80d2c7ba10f and fixed in 5.10.150 with commit c378c479c5175833bb22ff71974cda47d7b05401
	Issue introduced in 5.1 with commit 6b06314c47e141031be043539900d80d2c7ba10f and fixed in 5.15.75 with commit 813d8fe5d30388f73a21d3a2bf46b0a1fd72498c
	Issue introduced in 5.1 with commit 6b06314c47e141031be043539900d80d2c7ba10f and fixed in 5.19.17 with commit b4293c01ee0d0ecdd3cb5801e13f62271144667a
	Issue introduced in 5.1 with commit 6b06314c47e141031be043539900d80d2c7ba10f and fixed in 6.0.3 with commit 75e94c7e8859e58aadc15a98cc9704edff47d4f2
	Issue introduced in 5.1 with commit 6b06314c47e141031be043539900d80d2c7ba10f and fixed in 6.1 with commit 0091bfc81741b8d3aeb3b7ab8636f911b2de6e80

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-50234
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	include/linux/skbuff.h
	io_uring/rsrc.c
	net/unix/garbage.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/04df9719df1865f6770af9bc7880874af0e594b2
	https://git.kernel.org/stable/c/c378c479c5175833bb22ff71974cda47d7b05401
	https://git.kernel.org/stable/c/813d8fe5d30388f73a21d3a2bf46b0a1fd72498c
	https://git.kernel.org/stable/c/b4293c01ee0d0ecdd3cb5801e13f62271144667a
	https://git.kernel.org/stable/c/75e94c7e8859e58aadc15a98cc9704edff47d4f2
	https://git.kernel.org/stable/c/0091bfc81741b8d3aeb3b7ab8636f911b2de6e80
