From bippy-1.1.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-49863: can: af_can: fix NULL pointer dereference in can_rx_register()

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

can: af_can: fix NULL pointer dereference in can_rx_register()

It causes NULL pointer dereference when testing as following:
(a) use syscall(__NR_socket, 0x10ul, 3ul, 0) to create netlink socket.
(b) use syscall(__NR_sendmsg, ...) to create bond link device and vxcan
    link device, and bind vxcan device to bond device (can also use
    ifenslave command to bind vxcan device to bond device).
(c) use syscall(__NR_socket, 0x1dul, 3ul, 1) to create CAN socket.
(d) use syscall(__NR_bind, ...) to bind the bond device to CAN socket.

The bond device invokes the can-raw protocol registration interface to
receive CAN packets. However, ml_priv is not allocated to the dev,
dev_rcv_lists is assigned to NULL in can_rx_register(). In this case,
it will occur the NULL pointer dereference issue.

The following is the stack information:
BUG: kernel NULL pointer dereference, address: 0000000000000008
PGD 122a4067 P4D 122a4067 PUD 1223c067 PMD 0
Oops: 0000 [#1] PREEMPT SMP
RIP: 0010:can_rx_register+0x12d/0x1e0
Call Trace:
<TASK>
raw_enable_filters+0x8d/0x120
raw_enable_allfilters+0x3b/0x130
raw_bind+0x118/0x4f0
__sys_bind+0x163/0x1a0
__x64_sys_bind+0x1e/0x30
do_syscall_64+0x35/0x80
entry_SYSCALL_64_after_hwframe+0x63/0xcd
</TASK>

The Linux kernel CVE team has assigned CVE-2022-49863 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.4.110 with commit 4ac1feff6ea6495cbfd336f4438a6c6d140544a6 and fixed in 5.4.225 with commit afab4655750fcb3fca359bc7d7214e3d634cdf9c
	Issue introduced in 5.10.28 with commit 1a5751d58b14195f763b8c1d9ef33fb8a93e95e7 and fixed in 5.10.155 with commit d68fa77ee3d03bad6fe84e89759ddf7005f9e9c6
	Issue introduced in 5.12 with commit 4e096a18867a5a989b510f6999d9c6b6622e8f7b and fixed in 5.15.79 with commit 261178a1c2623077d62e374a75c195e6c99a6f05
	Issue introduced in 5.12 with commit 4e096a18867a5a989b510f6999d9c6b6622e8f7b and fixed in 6.0.9 with commit a8055677b054bc2bb78beb1080fdc2dc5158c2fe
	Issue introduced in 5.12 with commit 4e096a18867a5a989b510f6999d9c6b6622e8f7b and fixed in 6.1 with commit 8aa59e355949442c408408c2d836e561794c40a1
	Issue introduced in 5.11.12 with commit 96340078d50a54f6a1252c62596bc44321c8bff9

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-49863
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	net/can/af_can.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/afab4655750fcb3fca359bc7d7214e3d634cdf9c
	https://git.kernel.org/stable/c/d68fa77ee3d03bad6fe84e89759ddf7005f9e9c6
	https://git.kernel.org/stable/c/261178a1c2623077d62e374a75c195e6c99a6f05
	https://git.kernel.org/stable/c/a8055677b054bc2bb78beb1080fdc2dc5158c2fe
	https://git.kernel.org/stable/c/8aa59e355949442c408408c2d836e561794c40a1
