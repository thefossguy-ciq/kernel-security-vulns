From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-50307: s390/cio: fix out-of-bounds access on cio_ignore free
Message-Id: <2025091559-CVE-2022-50307-3240@gregkh>
Content-Length: 2969
Lines: 69
X-Developer-Signature: v=1; a=openpgp-sha256; l=3039;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=Y4xMSBsvuf8fdD9yGaWu/k2mjgNUhpPoHtyZ/EKINQM=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBkn1JbrHtMRSneTkQzoUP9vbeirw2AyJfX4xTWPDyvvN
 T/osEa0I5aFQZCJQVZMkeXLNp6j+ysOKXoZ2p6GmcPKBDKEgYtTACbyJpthDveHWUyLlwW8eOP2
 tHeZEN+uLU9epzMsaNebOyXj4fHiFYsKNl/57WF9Xnn/ZQA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

s390/cio: fix out-of-bounds access on cio_ignore free

The channel-subsystem-driver scans for newly available devices whenever
device-IDs are removed from the cio_ignore list using a command such as:

  echo free >/proc/cio_ignore

Since an I/O device scan might interfer with running I/Os, commit
172da89ed0ea ("s390/cio: avoid excessive path-verification requests")
introduced an optimization to exclude online devices from the scan.

The newly added check for online devices incorrectly assumes that
an I/O-subchannel's drvdata points to a struct io_subchannel_private.
For devices that are bound to a non-default I/O subchannel driver, such
as the vfio_ccw driver, this results in an out-of-bounds read access
during each scan.

Fix this by changing the scan logic to rely on a driver-independent
online indication. For this we can use struct subchannel->config.ena,
which is the driver's requested subchannel-enabled state. Since I/Os
can only be started on enabled subchannels, this matches the intent
of the original optimization of not scanning devices where I/O might
be running.

The Linux kernel CVE team has assigned CVE-2022-50307 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.15 with commit 172da89ed0eaf9d9348f5decb86ad04c624b39d1 and fixed in 5.15.78 with commit 0e501fd0f38e42304bfa0d46a812d93f80294a87
	Issue introduced in 5.15 with commit 172da89ed0eaf9d9348f5decb86ad04c624b39d1 and fixed in 6.0.7 with commit 106ab66cf5467726ca5ead51623043d37c06820a
	Issue introduced in 5.15 with commit 172da89ed0eaf9d9348f5decb86ad04c624b39d1 and fixed in 6.1 with commit 1b6074112742f65ece71b0f299ca5a6a887d2db6

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-50307
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/s390/cio/css.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/0e501fd0f38e42304bfa0d46a812d93f80294a87
	https://git.kernel.org/stable/c/106ab66cf5467726ca5ead51623043d37c06820a
	https://git.kernel.org/stable/c/1b6074112742f65ece71b0f299ca5a6a887d2db6
