From bippy-1.1.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-49834: nilfs2: fix use-after-free bug of ns_writer on remount

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

nilfs2: fix use-after-free bug of ns_writer on remount

If a nilfs2 filesystem is downgraded to read-only due to metadata
corruption on disk and is remounted read/write, or if emergency read-only
remount is performed, detaching a log writer and synchronizing the
filesystem can be done at the same time.

In these cases, use-after-free of the log writer (hereinafter
nilfs->ns_writer) can happen as shown in the scenario below:

 Task1                               Task2
 --------------------------------    ------------------------------
 nilfs_construct_segment
   nilfs_segctor_sync
     init_wait
     init_waitqueue_entry
     add_wait_queue
     schedule
                                     nilfs_remount (R/W remount case)
				       nilfs_attach_log_writer
                                         nilfs_detach_log_writer
                                           nilfs_segctor_destroy
                                             kfree
     finish_wait
       _raw_spin_lock_irqsave
         __raw_spin_lock_irqsave
           do_raw_spin_lock
             debug_spin_lock_before  <-- use-after-free

While Task1 is sleeping, nilfs->ns_writer is freed by Task2.  After Task1
waked up, Task1 accesses nilfs->ns_writer which is already freed.  This
scenario diagram is based on the Shigeru Yoshida's post [1].

This patch fixes the issue by not detaching nilfs->ns_writer on remount so
that this UAF race doesn't happen.  Along with this change, this patch
also inserts a few necessary read-only checks with superblock instance
where only the ns_writer pointer was used to check if the filesystem is
read-only.

The Linux kernel CVE team has assigned CVE-2022-49834 to this issue.


Affected and fixed versions
===========================

	Fixed in 4.9.334 with commit b2fbf10040216ef5ee270773755fc2f5da65b749
	Fixed in 4.14.300 with commit 39a3ed68270b079c6b874d4e4727a512b9b4882c
	Fixed in 4.19.267 with commit b4736ab5542112fe0a40f140a0a0b072954f34da
	Fixed in 5.4.225 with commit 9b162e81045266a2d5b44df9dffdf05c54de9cca
	Fixed in 5.10.155 with commit 4feedde5486c07ea79787839153a71ca71329c7d
	Fixed in 5.15.79 with commit afbd1188382a75f6cfe22c0b68533f7f9664f182
	Fixed in 6.0.9 with commit b152300d5a1ba4258dacf9916bff20e6a8c7603b
	Fixed in 6.1 with commit 8cccf05fe857a18ee26e20d11a8455a73ffd4efd

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-49834
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	fs/nilfs2/segment.c
	fs/nilfs2/super.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/b2fbf10040216ef5ee270773755fc2f5da65b749
	https://git.kernel.org/stable/c/39a3ed68270b079c6b874d4e4727a512b9b4882c
	https://git.kernel.org/stable/c/b4736ab5542112fe0a40f140a0a0b072954f34da
	https://git.kernel.org/stable/c/9b162e81045266a2d5b44df9dffdf05c54de9cca
	https://git.kernel.org/stable/c/4feedde5486c07ea79787839153a71ca71329c7d
	https://git.kernel.org/stable/c/afbd1188382a75f6cfe22c0b68533f7f9664f182
	https://git.kernel.org/stable/c/b152300d5a1ba4258dacf9916bff20e6a8c7603b
	https://git.kernel.org/stable/c/8cccf05fe857a18ee26e20d11a8455a73ffd4efd
