From bippy-1.1.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-49913: btrfs: fix inode list leak during backref walking at find_parent_nodes()

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

btrfs: fix inode list leak during backref walking at find_parent_nodes()

During backref walking, at find_parent_nodes(), if we are dealing with a
data extent and we get an error while resolving the indirect backrefs, at
resolve_indirect_refs(), or in the while loop that iterates over the refs
in the direct refs rbtree, we end up leaking the inode lists attached to
the direct refs we have in the direct refs rbtree that were not yet added
to the refs ulist passed as argument to find_parent_nodes(). Since they
were not yet added to the refs ulist and prelim_release() does not free
the lists, on error the caller can only free the lists attached to the
refs that were added to the refs ulist, all the remaining refs get their
inode lists never freed, therefore leaking their memory.

Fix this by having prelim_release() always free any attached inode list
to each ref found in the rbtree, and have find_parent_nodes() set the
ref's inode list to NULL once it transfers ownership of the inode list
to a ref added to the refs ulist passed to find_parent_nodes().

The Linux kernel CVE team has assigned CVE-2022-49913 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 4.14 with commit 86d5f994425252d8a40e2184c94a2682ae8ecfbf and fixed in 5.4.224 with commit 6a6731a0df8c47ecc703bd7bb73459df767051e0
	Issue introduced in 4.14 with commit 86d5f994425252d8a40e2184c94a2682ae8ecfbf and fixed in 5.10.154 with commit 61e06128113711df0534c404fb6bb528eb7d2332
	Issue introduced in 4.14 with commit 86d5f994425252d8a40e2184c94a2682ae8ecfbf and fixed in 5.15.78 with commit 222a3d533027b9492d5b7f5ecdc01a90f57bb5a9
	Issue introduced in 4.14 with commit 86d5f994425252d8a40e2184c94a2682ae8ecfbf and fixed in 6.0.8 with commit 83ea8c5b54d452a5769e605e3c5c687e8ca06d89
	Issue introduced in 4.14 with commit 86d5f994425252d8a40e2184c94a2682ae8ecfbf and fixed in 6.1 with commit 92876eec382a0f19f33d09d2c939e9ca49038ae5

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-49913
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	fs/btrfs/backref.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/6a6731a0df8c47ecc703bd7bb73459df767051e0
	https://git.kernel.org/stable/c/61e06128113711df0534c404fb6bb528eb7d2332
	https://git.kernel.org/stable/c/222a3d533027b9492d5b7f5ecdc01a90f57bb5a9
	https://git.kernel.org/stable/c/83ea8c5b54d452a5769e605e3c5c687e8ca06d89
	https://git.kernel.org/stable/c/92876eec382a0f19f33d09d2c939e9ca49038ae5
