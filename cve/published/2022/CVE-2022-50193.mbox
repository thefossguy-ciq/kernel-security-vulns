From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-50193: erofs: wake up all waiters after z_erofs_lzma_head ready
Message-Id: <2025061837-CVE-2022-50193-84a0@gregkh>
Content-Length: 3243
Lines: 87
X-Developer-Signature: v=1; a=openpgp-sha256; l=3331;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=6sujjk2B/0l/8mG1jdGIDDNEE3SKU+JYmJc9XAwk/k4=;
 b=kA0DAAIRMUfUDdst+ykByyZiAGhSnJGjbzGoHfbG/xNsxuOOpcObUJhRQsXx8C1L0CAqrXBSF
 IhdBAARAgAdFiEE9LYMxb94wiFKMT3LMUfUDdst+ykFAmhSnJEACgkQMUfUDdst+ykImACgwkL5
 zHDM6TYZc8PgFeKJF53fGJcAn2sXW8WjmLnALFOJzZwaJluakc98
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

erofs: wake up all waiters after z_erofs_lzma_head ready

When the user mounts the erofs second times, the decompression thread
may hung. The problem happens due to a sequence of steps like the
following:

1) Task A called z_erofs_load_lzma_config which obtain all of the node
   from the z_erofs_lzma_head.

2) At this time, task B called the z_erofs_lzma_decompress and wanted to
   get a node. But the z_erofs_lzma_head was empty, the Task B had to
   sleep.

3) Task A release nodes and push nodes into the z_erofs_lzma_head. But
   task B was still sleeping.

One example report when the hung happens:
task:kworker/u3:1 state:D stack:14384 pid: 86 ppid: 2 flags:0x00004000
Workqueue: erofs_unzipd z_erofs_decompressqueue_work
Call Trace:
 <TASK>
 __schedule+0x281/0x760
 schedule+0x49/0xb0
 z_erofs_lzma_decompress+0x4bc/0x580
 ? cpu_core_flags+0x10/0x10
 z_erofs_decompress_pcluster+0x49b/0xba0
 ? __update_load_avg_se+0x2b0/0x330
 ? __update_load_avg_se+0x2b0/0x330
 ? update_load_avg+0x5f/0x690
 ? update_load_avg+0x5f/0x690
 ? set_next_entity+0xbd/0x110
 ? _raw_spin_unlock+0xd/0x20
 z_erofs_decompress_queue.isra.0+0x2e/0x50
 z_erofs_decompressqueue_work+0x30/0x60
 process_one_work+0x1d3/0x3a0
 worker_thread+0x45/0x3a0
 ? process_one_work+0x3a0/0x3a0
 kthread+0xe2/0x110
 ? kthread_complete_and_exit+0x20/0x20
 ret_from_fork+0x22/0x30
 </TASK>

The Linux kernel CVE team has assigned CVE-2022-50193 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.16 with commit 622ceaddb7649ca328832f50ba1400af778d75fa and fixed in 5.18.18 with commit 2478e36ec437a27f8a05bea9e4269a68c554e21f
	Issue introduced in 5.16 with commit 622ceaddb7649ca328832f50ba1400af778d75fa and fixed in 5.19.2 with commit 96aa2a6a89618d850ef082e4268007e840c28769
	Issue introduced in 5.16 with commit 622ceaddb7649ca328832f50ba1400af778d75fa and fixed in 6.0 with commit 2df7c4bd7c1d2bc5ece5e9ed19dbd386810c2a65

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-50193
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	fs/erofs/decompressor_lzma.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/2478e36ec437a27f8a05bea9e4269a68c554e21f
	https://git.kernel.org/stable/c/96aa2a6a89618d850ef082e4268007e840c28769
	https://git.kernel.org/stable/c/2df7c4bd7c1d2bc5ece5e9ed19dbd386810c2a65
