From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-50277: ext4: don't allow journal inode to have encrypt flag

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

ext4: don't allow journal inode to have encrypt flag

Mounting a filesystem whose journal inode has the encrypt flag causes a
NULL dereference in fscrypt_limit_io_blocks() when the 'inlinecrypt'
mount option is used.

The problem is that when jbd2_journal_init_inode() calls bmap(), it
eventually finds its way into ext4_iomap_begin(), which calls
fscrypt_limit_io_blocks().  fscrypt_limit_io_blocks() requires that if
the inode is encrypted, then its encryption key must already be set up.
That's not the case here, since the journal inode is never "opened" like
a normal file would be.  Hence the crash.

A reproducer is:

    mkfs.ext4 -F /dev/vdb
    debugfs -w /dev/vdb -R "set_inode_field <8> flags 0x80808"
    mount /dev/vdb /mnt -o inlinecrypt

To fix this, make ext4 consider journal inodes with the encrypt flag to
be invalid.  (Note, maybe other flags should be rejected on the journal
inode too.  For now, this is just the minimal fix for the above issue.)

I've marked this as fixing the commit that introduced the call to
fscrypt_limit_io_blocks(), since that's what made an actual crash start
being possible.  But this fix could be applied to any version of ext4
that supports the encrypt feature.

The Linux kernel CVE team has assigned CVE-2022-50277 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.18 with commit 38ea50daa7a447dbcd7031f37a39a1baa163b2ab and fixed in 6.0.18 with commit 1f7a6626f611aa06d7907aa45b484708dd5ac8bc
	Issue introduced in 5.18 with commit 38ea50daa7a447dbcd7031f37a39a1baa163b2ab and fixed in 6.1.4 with commit bcc5057e1781a3ee889225480d995c3b5cbde555
	Issue introduced in 5.18 with commit 38ea50daa7a447dbcd7031f37a39a1baa163b2ab and fixed in 6.2 with commit 105c78e12468413e426625831faa7db4284e1fec

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-50277
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	fs/ext4/super.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/1f7a6626f611aa06d7907aa45b484708dd5ac8bc
	https://git.kernel.org/stable/c/bcc5057e1781a3ee889225480d995c3b5cbde555
	https://git.kernel.org/stable/c/105c78e12468413e426625831faa7db4284e1fec
