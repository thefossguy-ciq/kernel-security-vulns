{
   "containers": {
      "cna": {
         "providerMetadata": {
            "orgId": "f4215fc3-5b6b-47ff-a258-f7189bd81038"
         },
         "descriptions": [
            {
               "lang": "en",
               "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nblk-mq: Fix kmemleak in blk_mq_init_allocated_queue\n\nThere is a kmemleak caused by modprobe null_blk.ko\n\nunreferenced object 0xffff8881acb1f000 (size 1024):\n  comm \"modprobe\", pid 836, jiffies 4294971190 (age 27.068s)\n  hex dump (first 32 bytes):\n    00 00 00 00 ad 4e ad de ff ff ff ff 00 00 00 00  .....N..........\n    ff ff ff ff ff ff ff ff 00 53 99 9e ff ff ff ff  .........S......\n  backtrace:\n    [<000000004a10c249>] kmalloc_node_trace+0x22/0x60\n    [<00000000648f7950>] blk_mq_alloc_and_init_hctx+0x289/0x350\n    [<00000000af06de0e>] blk_mq_realloc_hw_ctxs+0x2fe/0x3d0\n    [<00000000e00c1872>] blk_mq_init_allocated_queue+0x48c/0x1440\n    [<00000000d16b4e68>] __blk_mq_alloc_disk+0xc8/0x1c0\n    [<00000000d10c98c3>] 0xffffffffc450d69d\n    [<00000000b9299f48>] 0xffffffffc4538392\n    [<0000000061c39ed6>] do_one_initcall+0xd0/0x4f0\n    [<00000000b389383b>] do_init_module+0x1a4/0x680\n    [<0000000087cf3542>] load_module+0x6249/0x7110\n    [<00000000beba61b8>] __do_sys_finit_module+0x140/0x200\n    [<00000000fdcfff51>] do_syscall_64+0x35/0x80\n    [<000000003c0f1f71>] entry_SYSCALL_64_after_hwframe+0x46/0xb0\n\nThat is because q->ma_ops is set to NULL before blk_release_queue is\ncalled.\n\nblk_mq_init_queue_data\n  blk_mq_init_allocated_queue\n    blk_mq_realloc_hw_ctxs\n      for (i = 0; i < set->nr_hw_queues; i++) {\n        old_hctx = xa_load(&q->hctx_table, i);\n        if (!blk_mq_alloc_and_init_hctx(.., i, ..))\t\t[1]\n          if (!old_hctx)\n\t    break;\n\n      xa_for_each_start(&q->hctx_table, j, hctx, j)\n        blk_mq_exit_hctx(q, set, hctx, j); \t\t\t[2]\n\n    if (!q->nr_hw_queues)\t\t\t\t\t[3]\n      goto err_hctxs;\n\n  err_exit:\n      q->mq_ops = NULL;\t\t\t  \t\t\t[4]\n\n  blk_put_queue\n    blk_release_queue\n      if (queue_is_mq(q))\t\t\t\t\t[5]\n        blk_mq_release(q);\n\n[1]: blk_mq_alloc_and_init_hctx failed at i != 0.\n[2]: The hctxs allocated by [1] are moved to q->unused_hctx_list and\nwill be cleaned up in blk_mq_release.\n[3]: q->nr_hw_queues is 0.\n[4]: Set q->mq_ops to NULL.\n[5]: queue_is_mq returns false due to [4]. And blk_mq_release\nwill not be called. The hctxs in q->unused_hctx_list are leaked.\n\nTo fix it, call blk_release_queue in exception path."
            }
         ],
         "affected": [
            {
               "product": "Linux",
               "vendor": "Linux",
               "defaultStatus": "unaffected",
               "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
               "programFiles": [
                  "block/blk-mq.c"
               ],
               "versions": [
                  {
                     "version": "2f8f1336a48bd5186de3476da0a3e2ec06d0533a",
                     "lessThan": "2dc97e15a54b7bdf457848aa8c663c98a24e58a6",
                     "status": "affected",
                     "versionType": "git"
                  },
                  {
                     "version": "2f8f1336a48bd5186de3476da0a3e2ec06d0533a",
                     "lessThan": "943f45b9399ed8b2b5190cbc797995edaa97f58f",
                     "status": "affected",
                     "versionType": "git"
                  }
               ]
            },
            {
               "product": "Linux",
               "vendor": "Linux",
               "defaultStatus": "affected",
               "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
               "programFiles": [
                  "block/blk-mq.c"
               ],
               "versions": [
                  {
                     "version": "5.2",
                     "status": "affected"
                  },
                  {
                     "version": "0",
                     "lessThan": "5.2",
                     "status": "unaffected",
                     "versionType": "semver"
                  },
                  {
                     "version": "6.0.8",
                     "lessThanOrEqual": "6.0.*",
                     "status": "unaffected",
                     "versionType": "semver"
                  },
                  {
                     "version": "6.1",
                     "lessThanOrEqual": "*",
                     "status": "unaffected",
                     "versionType": "original_commit_for_fix"
                  }
               ]
            }
         ],
         "cpeApplicability": [
            {
               "nodes": [
                  {
                     "operator": "OR",
                     "negate": false,
                     "cpeMatch": [
                        {
                           "vulnerable": true,
                           "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
                           "versionStartIncluding": "5.2",
                           "versionEndExcluding": "6.0.8"
                        },
                        {
                           "vulnerable": true,
                           "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
                           "versionStartIncluding": "5.2",
                           "versionEndExcluding": "6.1"
                        }
                     ]
                  }
               ]
            }
         ],
         "references": [
            {
               "url": "https://git.kernel.org/stable/c/2dc97e15a54b7bdf457848aa8c663c98a24e58a6"
            },
            {
               "url": "https://git.kernel.org/stable/c/943f45b9399ed8b2b5190cbc797995edaa97f58f"
            }
         ],
         "title": "blk-mq: Fix kmemleak in blk_mq_init_allocated_queue",
         "x_generator": {
            "engine": "bippy-1.2.0"
         }
      }
   },
   "cveMetadata": {
      "assignerOrgId": "f4215fc3-5b6b-47ff-a258-f7189bd81038",
      "cveID": "CVE-2022-49901",
      "requesterUserId": "gregkh@kernel.org",
      "serial": "1",
      "state": "PUBLISHED"
   },
   "dataType": "CVE_RECORD",
   "dataVersion": "5.0"
}
