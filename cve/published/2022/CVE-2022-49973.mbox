From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-49973: skmsg: Fix wrong last sg check in sk_msg_recvmsg()
Message-Id: <2025061818-CVE-2022-49973-d4f3@gregkh>
Content-Length: 2869
Lines: 69
X-Developer-Signature: v=1; a=openpgp-sha256; l=2939;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=wz5GMhaGscOmVNKPWKCxbKSiCe2iaZs6NhW73QVzT2Y=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBlBc5xW9mX7bfb0clDUsj4esOfVtBNblW9zm/WLppYpX
 dKU+5zcEcvCIMjEICumyPJlG8/R/RWHFL0MbU/DzGFlAhnCwMUpABNxNWKY7xfXHV0c/Th3odcl
 FcXTHhlnL663YFiwtZSxQvZedqB61bQTrCsFbO5/YrwFAA==
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

skmsg: Fix wrong last sg check in sk_msg_recvmsg()

Fix one kernel NULL pointer dereference as below:

[  224.462334] Call Trace:
[  224.462394]  __tcp_bpf_recvmsg+0xd3/0x380
[  224.462441]  ? sock_has_perm+0x78/0xa0
[  224.462463]  tcp_bpf_recvmsg+0x12e/0x220
[  224.462494]  inet_recvmsg+0x5b/0xd0
[  224.462534]  __sys_recvfrom+0xc8/0x130
[  224.462574]  ? syscall_trace_enter+0x1df/0x2e0
[  224.462606]  ? __do_page_fault+0x2de/0x500
[  224.462635]  __x64_sys_recvfrom+0x24/0x30
[  224.462660]  do_syscall_64+0x5d/0x1d0
[  224.462709]  entry_SYSCALL_64_after_hwframe+0x65/0xca

In commit 9974d37ea75f ("skmsg: Fix invalid last sg check in
sk_msg_recvmsg()"), we change last sg check to sg_is_last(),
but in sockmap redirection case (without stream_parser/stream_verdict/
skb_verdict), we did not mark the end of the scatterlist. Check the
sk_msg_alloc, sk_msg_page_add, and bpf_msg_push_data functions, they all
do not mark the end of sg. They are expected to use sg.end for end
judgment. So the judgment of '(i != msg_rx->sg.end)' is added back here.

The Linux kernel CVE team has assigned CVE-2022-49973 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.15.61 with commit 293c53b7dbf9073cbcc488f938bc053ff4caeec0 and fixed in 5.15.66 with commit de22cba333d8699ad77e79f862fe1320cb1284de
	Issue introduced in 5.19.2 with commit 1295dae30f30c3daa03005ed8958d44b17f037fd and fixed in 5.19.8 with commit 10ee118a1756141f8e9c87aa7344ed12b41630a8
	Issue introduced in 5.18.18 with commit 4674c0da448b546e390a981b819cd4af5cb16cf9

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-49973
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	net/core/skmsg.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/de22cba333d8699ad77e79f862fe1320cb1284de
	https://git.kernel.org/stable/c/10ee118a1756141f8e9c87aa7344ed12b41630a8
	https://git.kernel.org/stable/c/583585e48d965338e73e1eb383768d16e0922d73
