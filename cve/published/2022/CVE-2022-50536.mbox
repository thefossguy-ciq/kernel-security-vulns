From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-50536: bpf, sockmap: Fix repeated calls to sock_put() when msg has more_data
Message-Id: <2025100754-CVE-2022-50536-baea@gregkh>
Content-Length: 3947
Lines: 91
X-Developer-Signature: v=1; a=openpgp-sha256; l=4039;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=HHdVOM0eTd1qfEf1t9AKVRFprBdVyFD6pdObdpSlhy4=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBlP9a95e10K6mqVS9wa63ukcHn7AgMm4z+bn32SC2GIs
 Tqf7XC0I5aFQZCJQVZMkeXLNp6j+ysOKXoZ2p6GmcPKBDKEgYtTACayP4FhntrRvQw5n024ky98
 tpy05VmPyrzq2wzzc1Qde8LeGPMYLJ0Sp9vqEPVge/c3AA==
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

bpf, sockmap: Fix repeated calls to sock_put() when msg has more_data

In tcp_bpf_send_verdict() redirection, the eval variable is assigned to
__SK_REDIRECT after the apply_bytes data is sent, if msg has more_data,
sock_put() will be called multiple times.

We should reset the eval variable to __SK_NONE every time more_data
starts.

This causes:

IPv4: Attempt to release TCP socket in state 1 00000000b4c925d7
------------[ cut here ]------------
refcount_t: addition on 0; use-after-free.
WARNING: CPU: 5 PID: 4482 at lib/refcount.c:25 refcount_warn_saturate+0x7d/0x110
Modules linked in:
CPU: 5 PID: 4482 Comm: sockhash_bypass Kdump: loaded Not tainted 6.0.0 #1
Hardware name: Red Hat KVM, BIOS 1.11.0-2.el7 04/01/2014
Call Trace:
 <TASK>
 __tcp_transmit_skb+0xa1b/0xb90
 ? __alloc_skb+0x8c/0x1a0
 ? __kmalloc_node_track_caller+0x184/0x320
 tcp_write_xmit+0x22a/0x1110
 __tcp_push_pending_frames+0x32/0xf0
 do_tcp_sendpages+0x62d/0x640
 tcp_bpf_push+0xae/0x2c0
 tcp_bpf_sendmsg_redir+0x260/0x410
 ? preempt_count_add+0x70/0xa0
 tcp_bpf_send_verdict+0x386/0x4b0
 tcp_bpf_sendmsg+0x21b/0x3b0
 sock_sendmsg+0x58/0x70
 __sys_sendto+0xfa/0x170
 ? xfd_validate_state+0x1d/0x80
 ? switch_fpu_return+0x59/0xe0
 __x64_sys_sendto+0x24/0x30
 do_syscall_64+0x37/0x90
 entry_SYSCALL_64_after_hwframe+0x63/0xcd

The Linux kernel CVE team has assigned CVE-2022-50536 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.4.157 with commit 5f0bfe21c853917aae4bc5a70fe57ddb4054443e and fixed in 5.4.229 with commit 7508b9f4daac4ec7dfe0b6fb2d688b1c1c105e10
	Issue introduced in 5.10.77 with commit 15dec6d8f8642a26d6a272af2d7f9877df8f02b8 and fixed in 5.10.163 with commit 28e4a763cd4a2b1a78852216ef4bd7df3a05cec6
	Issue introduced in 5.15 with commit cd9733f5d75c94a32544d6ce5be47e14194cf137 and fixed in 5.15.86 with commit 8786bde11a4f31b63b3036731df0b47337a7a245
	Issue introduced in 5.15 with commit cd9733f5d75c94a32544d6ce5be47e14194cf137 and fixed in 6.0.16 with commit 578a7628b838a3ac8ad61deaab5a816ff032ac13
	Issue introduced in 5.15 with commit cd9733f5d75c94a32544d6ce5be47e14194cf137 and fixed in 6.1.2 with commit 113236e8f49f262f318c00ebb14b15f4834e87c1
	Issue introduced in 5.15 with commit cd9733f5d75c94a32544d6ce5be47e14194cf137 and fixed in 6.2 with commit 7a9841ca025275b5b0edfb0b618934abb6ceec15
	Issue introduced in 5.14.16 with commit 6f226ffe4458ea3b8c33287cb8c86f87dc198dce

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-50536
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	net/ipv4/tcp_bpf.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/7508b9f4daac4ec7dfe0b6fb2d688b1c1c105e10
	https://git.kernel.org/stable/c/28e4a763cd4a2b1a78852216ef4bd7df3a05cec6
	https://git.kernel.org/stable/c/8786bde11a4f31b63b3036731df0b47337a7a245
	https://git.kernel.org/stable/c/578a7628b838a3ac8ad61deaab5a816ff032ac13
	https://git.kernel.org/stable/c/113236e8f49f262f318c00ebb14b15f4834e87c1
	https://git.kernel.org/stable/c/7a9841ca025275b5b0edfb0b618934abb6ceec15
