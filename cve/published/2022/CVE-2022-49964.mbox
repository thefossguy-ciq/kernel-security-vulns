From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-49964: arm64: cacheinfo: Fix incorrect assignment of signed error value to unsigned fw_level

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

arm64: cacheinfo: Fix incorrect assignment of signed error value to unsigned fw_level

Though acpi_find_last_cache_level() always returned signed value and the
document states it will return any errors caused by lack of a PPTT table,
it never returned negative values before.

Commit 0c80f9e165f8 ("ACPI: PPTT: Leave the table mapped for the runtime usage")
however changed it by returning -ENOENT if no PPTT was found. The value
returned from acpi_find_last_cache_level() is then assigned to unsigned
fw_level.

It will result in the number of cache leaves calculated incorrectly as
a huge value which will then cause the following warning from __alloc_pages
as the order would be great than MAX_ORDER because of incorrect and huge
cache leaves value.

  |  WARNING: CPU: 0 PID: 1 at mm/page_alloc.c:5407 __alloc_pages+0x74/0x314
  |  Modules linked in:
  |  CPU: 0 PID: 1 Comm: swapper/0 Not tainted 5.19.0-10393-g7c2a8d3ac4c0 #73
  |  pstate: 20000005 (nzCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
  |  pc : __alloc_pages+0x74/0x314
  |  lr : alloc_pages+0xe8/0x318
  |  Call trace:
  |   __alloc_pages+0x74/0x314
  |   alloc_pages+0xe8/0x318
  |   kmalloc_order_trace+0x68/0x1dc
  |   __kmalloc+0x240/0x338
  |   detect_cache_attributes+0xe0/0x56c
  |   update_siblings_masks+0x38/0x284
  |   store_cpu_topology+0x78/0x84
  |   smp_prepare_cpus+0x48/0x134
  |   kernel_init_freeable+0xc4/0x14c
  |   kernel_init+0x2c/0x1b4
  |   ret_from_fork+0x10/0x20

Fix the same by changing fw_level to be signed integer and return the
error from init_cache_level() early in case of error.

The Linux kernel CVE team has assigned CVE-2022-49964 to this issue.


Affected and fixed versions
===========================

	Fixed in 4.19.258 with commit 1668c38ef2e5bb80dbee88afcecfcdc3e7abc2aa
	Fixed in 5.4.213 with commit fcab25a6b0ace130589d810390d1ce3698b53604
	Fixed in 5.10.143 with commit 43b9af72751a98cb9c074b170fc244714aeb59d5
	Fixed in 5.15.68 with commit 29906311b351e5398aff2c5dc209f8b6c9d6a410
	Fixed in 5.19.7 with commit a754ee1c66bd0a23e613f0bf865053b29cb90e16
	Fixed in 6.0 with commit e75d18cecbb3805895d8ed64da4f78575ec96043

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-49964
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	arch/arm64/kernel/cacheinfo.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/1668c38ef2e5bb80dbee88afcecfcdc3e7abc2aa
	https://git.kernel.org/stable/c/fcab25a6b0ace130589d810390d1ce3698b53604
	https://git.kernel.org/stable/c/43b9af72751a98cb9c074b170fc244714aeb59d5
	https://git.kernel.org/stable/c/29906311b351e5398aff2c5dc209f8b6c9d6a410
	https://git.kernel.org/stable/c/a754ee1c66bd0a23e613f0bf865053b29cb90e16
	https://git.kernel.org/stable/c/e75d18cecbb3805895d8ed64da4f78575ec96043
