From bippy-1.1.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-49908: Bluetooth: L2CAP: Fix memory leak in vhci_write
Message-Id: <2025050104-CVE-2022-49908-ad9a@gregkh>
Content-Length: 3752
Lines: 82
X-Developer-Signature: v=1; a=openpgp-sha256; l=3835;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=+KlPNPWSRp1mRWOBlzOH8AafPNDFwyvRhUZbY2UVSQ0=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBnCDXuuirn5aZx71mPw0PsEb+7KCWd/Xf7GkC1vmv1fO
 kNs2uUFHbEsDIJMDLJiiixftvEc3V9xSNHL0PY0zBxWJpAhDFycAjCRdwUM83QK//w7YZZ/ZaOR
 hLS96lI1n2dn8xlmsySH8Wme/hYobBZV/+lu1aw50olmAA==
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: L2CAP: Fix memory leak in vhci_write

Syzkaller reports a memory leak as follows:
====================================
BUG: memory leak
unreferenced object 0xffff88810d81ac00 (size 240):
  [...]
  hex dump (first 32 bytes):
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
  backtrace:
    [<ffffffff838733d9>] __alloc_skb+0x1f9/0x270 net/core/skbuff.c:418
    [<ffffffff833f742f>] alloc_skb include/linux/skbuff.h:1257 [inline]
    [<ffffffff833f742f>] bt_skb_alloc include/net/bluetooth/bluetooth.h:469 [inline]
    [<ffffffff833f742f>] vhci_get_user drivers/bluetooth/hci_vhci.c:391 [inline]
    [<ffffffff833f742f>] vhci_write+0x5f/0x230 drivers/bluetooth/hci_vhci.c:511
    [<ffffffff815e398d>] call_write_iter include/linux/fs.h:2192 [inline]
    [<ffffffff815e398d>] new_sync_write fs/read_write.c:491 [inline]
    [<ffffffff815e398d>] vfs_write+0x42d/0x540 fs/read_write.c:578
    [<ffffffff815e3cdd>] ksys_write+0x9d/0x160 fs/read_write.c:631
    [<ffffffff845e0645>] do_syscall_x64 arch/x86/entry/common.c:50 [inline]
    [<ffffffff845e0645>] do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
    [<ffffffff84600087>] entry_SYSCALL_64_after_hwframe+0x63/0xcd
====================================

HCI core will uses hci_rx_work() to process frame, which is queued to
the hdev->rx_q tail in hci_recv_frame() by HCI driver.

Yet the problem is that, HCI core may not free the skb after handling
ACL data packets. To be more specific, when start fragment does not
contain the L2CAP length, HCI core just copies skb into conn->rx_skb and
finishes frame process in l2cap_recv_acldata(), without freeing the skb,
which triggers the above memory leak.

This patch solves it by releasing the relative skb, after processing
the above case in l2cap_recv_acldata().

The Linux kernel CVE team has assigned CVE-2022-49908 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.12 with commit 4d7ea8ee90e42fc75995f6fb24032d3233314528 and fixed in 5.15.78 with commit aa16cac06b752e5f609c106735bd7838f444784c
	Issue introduced in 5.12 with commit 4d7ea8ee90e42fc75995f6fb24032d3233314528 and fixed in 6.0.8 with commit 5b4f039a2f487c5edae681d763fe1af505f84c13
	Issue introduced in 5.12 with commit 4d7ea8ee90e42fc75995f6fb24032d3233314528 and fixed in 6.1 with commit 7c9524d929648935bac2bbb4c20437df8f9c3f42

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-49908
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	net/bluetooth/l2cap_core.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/aa16cac06b752e5f609c106735bd7838f444784c
	https://git.kernel.org/stable/c/5b4f039a2f487c5edae681d763fe1af505f84c13
	https://git.kernel.org/stable/c/7c9524d929648935bac2bbb4c20437df8f9c3f42
