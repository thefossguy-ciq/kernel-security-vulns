From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-50103: sched, cpuset: Fix dl_cpu_busy() panic due to empty cs->cpus_allowed
Message-Id: <2025061804-CVE-2022-50103-01db@gregkh>
Content-Length: 3892
Lines: 85
X-Developer-Signature: v=1; a=openpgp-sha256; l=3978;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=nZmzfXaQ515n/ELWa2Csb8lcJp7l/o0oda0POtsoCkA=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBlBcwrLHrTOXnXB7olsS7X33KI9N24fuHO4XlIp59Me1
 6c+63+96ohlYRBkYpAVU2T5so3n6P6KQ4pehranYeawMoEMYeDiFICJ/KllmKd5ca0/SzlD1WYH
 NxPLBbO7vVhrfzDMlfK/e8h0xtGHgjUZdzLzd8ZMD/uzGQA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

sched, cpuset: Fix dl_cpu_busy() panic due to empty cs->cpus_allowed

With cgroup v2, the cpuset's cpus_allowed mask can be empty indicating
that the cpuset will just use the effective CPUs of its parent. So
cpuset_can_attach() can call task_can_attach() with an empty mask.
This can lead to cpumask_any_and() returns nr_cpu_ids causing the call
to dl_bw_of() to crash due to percpu value access of an out of bound
CPU value. For example:

	[80468.182258] BUG: unable to handle page fault for address: ffffffff8b6648b0
	  :
	[80468.191019] RIP: 0010:dl_cpu_busy+0x30/0x2b0
	  :
	[80468.207946] Call Trace:
	[80468.208947]  cpuset_can_attach+0xa0/0x140
	[80468.209953]  cgroup_migrate_execute+0x8c/0x490
	[80468.210931]  cgroup_update_dfl_csses+0x254/0x270
	[80468.211898]  cgroup_subtree_control_write+0x322/0x400
	[80468.212854]  kernfs_fop_write_iter+0x11c/0x1b0
	[80468.213777]  new_sync_write+0x11f/0x1b0
	[80468.214689]  vfs_write+0x1eb/0x280
	[80468.215592]  ksys_write+0x5f/0xe0
	[80468.216463]  do_syscall_64+0x5c/0x80
	[80468.224287]  entry_SYSCALL_64_after_hwframe+0x44/0xae

Fix that by using effective_cpus instead. For cgroup v1, effective_cpus
is the same as cpus_allowed. For v2, effective_cpus is the real cpumask
to be used by tasks within the cpuset anyway.

Also update task_can_attach()'s 2nd argument name to cs_effective_cpus to
reflect the change. In addition, a check is added to task_can_attach()
to guard against the possibility that cpumask_any_and() may return a
value >= nr_cpu_ids.

The Linux kernel CVE team has assigned CVE-2022-50103 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 3.19 with commit 7f51412a415d87ea8598d14722fb31e4f5701257 and fixed in 5.10.137 with commit 336626564b58071b8980a4e6a31a8f5d92705d9b
	Issue introduced in 3.19 with commit 7f51412a415d87ea8598d14722fb31e4f5701257 and fixed in 5.15.61 with commit 147f66d22f58712dce7ccdd6a1f6cb3ee8042df4
	Issue introduced in 3.19 with commit 7f51412a415d87ea8598d14722fb31e4f5701257 and fixed in 5.18.18 with commit 357f3f0e522a6ce1ce4a571cb780d9861d53bec7
	Issue introduced in 3.19 with commit 7f51412a415d87ea8598d14722fb31e4f5701257 and fixed in 5.19.2 with commit f56607b44c9896e51678a7e8cdd3a5479f4b4548
	Issue introduced in 3.19 with commit 7f51412a415d87ea8598d14722fb31e4f5701257 and fixed in 6.0 with commit b6e8d40d43ae4dec00c8fea2593eeea3114b8f44

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-50103
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	include/linux/sched.h
	kernel/cgroup/cpuset.c
	kernel/sched/core.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/336626564b58071b8980a4e6a31a8f5d92705d9b
	https://git.kernel.org/stable/c/147f66d22f58712dce7ccdd6a1f6cb3ee8042df4
	https://git.kernel.org/stable/c/357f3f0e522a6ce1ce4a571cb780d9861d53bec7
	https://git.kernel.org/stable/c/f56607b44c9896e51678a7e8cdd3a5479f4b4548
	https://git.kernel.org/stable/c/b6e8d40d43ae4dec00c8fea2593eeea3114b8f44
