From bippy-1.1.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-49884: KVM: Initialize gfn_to_pfn_cache locks in dedicated helper
Message-Id: <2025050155-CVE-2022-49884-27c4@gregkh>
Content-Length: 2779
Lines: 72
X-Developer-Signature: v=1; a=openpgp-sha256; l=2852;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=FzjUrfl+KouV3OZADaJrqefWk52WNfUQfaiVF/krVks=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBnCDZuDn3wv1xcpMMkymrRuvcm7L1/a1bg57s1/YjDry
 fvX2jKvO2JZGASZGGTFFFm+bOM5ur/ikKKXoe1pmDmsTCBDGLg4BWAiJ6QYZjF9PKo588eThWpX
 rN+eVxH0Cv+yr5NhfsnKTbm3cyeu+TqpmXn76u4m1xOLBQA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

KVM: Initialize gfn_to_pfn_cache locks in dedicated helper

Move the gfn_to_pfn_cache lock initialization to another helper and
call the new helper during VM/vCPU creation.  There are race
conditions possible due to kvm_gfn_to_pfn_cache_init()'s
ability to re-initialize the cache's locks.

For example: a race between ioctl(KVM_XEN_HVM_EVTCHN_SEND) and
kvm_gfn_to_pfn_cache_init() leads to a corrupted shinfo gpc lock.

                (thread 1)                |           (thread 2)
                                          |
 kvm_xen_set_evtchn_fast                  |
  read_lock_irqsave(&gpc->lock, ...)      |
                                          | kvm_gfn_to_pfn_cache_init
                                          |  rwlock_init(&gpc->lock)
  read_unlock_irqrestore(&gpc->lock, ...) |

Rename "cache_init" and "cache_destroy" to activate+deactivate to
avoid implying that the cache really is destroyed/freed.

Note, there more races in the newly named kvm_gpc_activate() that will
be addressed separately.

[sean: call out that this is a bug fix]

The Linux kernel CVE team has assigned CVE-2022-49884 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.17 with commit 982ed0de4753ed6e71dbd40f82a5a066baf133ed and fixed in 6.0.8 with commit 61242001d6c9c253df7645dab090842d8da08764
	Issue introduced in 5.17 with commit 982ed0de4753ed6e71dbd40f82a5a066baf133ed and fixed in 6.1 with commit 52491a38b2c2411f3f0229dc6ad610349c704a41

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-49884
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	arch/x86/kvm/x86.c
	arch/x86/kvm/xen.c
	include/linux/kvm_host.h
	virt/kvm/pfncache.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/61242001d6c9c253df7645dab090842d8da08764
	https://git.kernel.org/stable/c/52491a38b2c2411f3f0229dc6ad610349c704a41
