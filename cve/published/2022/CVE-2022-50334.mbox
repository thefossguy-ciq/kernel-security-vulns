From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-50334: hugetlbfs: fix null-ptr-deref in hugetlbfs_parse_param()
Message-Id: <2025091555-CVE-2022-50334-488d@gregkh>
Content-Length: 3791
Lines: 91
X-Developer-Signature: v=1; a=openpgp-sha256; l=3883;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=1btPTOavFNPqO7X+P3zfMIAOiB+eq0rec6Vy/w5NLno=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBkn1MM3Mdxflxtqm/yss7lXy/ltWqSf7h4NBeldXG0M8
 8tneS3siGVhEGRikBVTZPmyjefo/opDil6Gtqdh5rAygQxh4OIUgIk0lDAsuHDw+bSuGrHMX3e6
 79+dwXvqFPvuyQwLZpZuNpJ/yHQx1vLZ6Ws2f1iVBKwvAgA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

hugetlbfs: fix null-ptr-deref in hugetlbfs_parse_param()

Syzkaller reports a null-ptr-deref bug as follows:
======================================================
KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]
RIP: 0010:hugetlbfs_parse_param+0x1dd/0x8e0 fs/hugetlbfs/inode.c:1380
[...]
Call Trace:
 <TASK>
 vfs_parse_fs_param fs/fs_context.c:148 [inline]
 vfs_parse_fs_param+0x1f9/0x3c0 fs/fs_context.c:129
 vfs_parse_fs_string+0xdb/0x170 fs/fs_context.c:191
 generic_parse_monolithic+0x16f/0x1f0 fs/fs_context.c:231
 do_new_mount fs/namespace.c:3036 [inline]
 path_mount+0x12de/0x1e20 fs/namespace.c:3370
 do_mount fs/namespace.c:3383 [inline]
 __do_sys_mount fs/namespace.c:3591 [inline]
 __se_sys_mount fs/namespace.c:3568 [inline]
 __x64_sys_mount+0x27f/0x300 fs/namespace.c:3568
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x63/0xcd
 [...]
 </TASK>
======================================================

According to commit "vfs: parse: deal with zero length string value",
kernel will set the param->string to null pointer in vfs_parse_fs_string()
if fs string has zero length.

Yet the problem is that, hugetlbfs_parse_param() will dereference the
param->string, without checking whether it is a null pointer.  To be more
specific, if hugetlbfs_parse_param() parses an illegal mount parameter,
such as "size=,", kernel will constructs struct fs_parameter with null
pointer in vfs_parse_fs_string(), then passes this struct fs_parameter to
hugetlbfs_parse_param(), which triggers the above null-ptr-deref bug.

This patch solves it by adding sanity check on param->string
in hugetlbfs_parse_param().

The Linux kernel CVE team has assigned CVE-2022-50334 to this issue.


Affected and fixed versions
===========================

	Fixed in 5.4.229 with commit fa71639873518e3587632ae58e25e4a96b57fa90
	Fixed in 5.10.163 with commit dcd28191be9bbf307ba51a5b485773a55b0037c4
	Fixed in 5.15.86 with commit 9a8862820cbf1f18dca4f3b4c289d88561b3a384
	Fixed in 6.0.16 with commit 965e8f8ae0f642b5528f5a82b7bcaf15a659d5bd
	Fixed in 6.1.2 with commit f2207145693ae5697a7b59e2add4b92f9e5b0e3c
	Fixed in 6.2 with commit 26215b7ee923b9251f7bb12c4e5f09dc465d35f2

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-50334
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	fs/hugetlbfs/inode.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/fa71639873518e3587632ae58e25e4a96b57fa90
	https://git.kernel.org/stable/c/dcd28191be9bbf307ba51a5b485773a55b0037c4
	https://git.kernel.org/stable/c/9a8862820cbf1f18dca4f3b4c289d88561b3a384
	https://git.kernel.org/stable/c/965e8f8ae0f642b5528f5a82b7bcaf15a659d5bd
	https://git.kernel.org/stable/c/f2207145693ae5697a7b59e2add4b92f9e5b0e3c
	https://git.kernel.org/stable/c/26215b7ee923b9251f7bb12c4e5f09dc465d35f2
