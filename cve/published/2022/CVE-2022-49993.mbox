From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-49993: loop: Check for overflow while configuring loop

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

loop: Check for overflow while configuring loop

The userspace can configure a loop using an ioctl call, wherein
a configuration of type loop_config is passed (see lo_ioctl()'s
case on line 1550 of drivers/block/loop.c). This proceeds to call
loop_configure() which in turn calls loop_set_status_from_info()
(see line 1050 of loop.c), passing &config->info which is of type
loop_info64*. This function then sets the appropriate values, like
the offset.

loop_device has lo_offset of type loff_t (see line 52 of loop.c),
which is typdef-chained to long long, whereas loop_info64 has
lo_offset of type __u64 (see line 56 of include/uapi/linux/loop.h).

The function directly copies offset from info to the device as
follows (See line 980 of loop.c):
	lo->lo_offset = info->lo_offset;

This results in an overflow, which triggers a warning in iomap_iter()
due to a call to iomap_iter_done() which has:
	WARN_ON_ONCE(iter->iomap.offset > iter->pos);

Thus, check for negative value during loop_set_status_from_info().

Bug report: https://syzkaller.appspot.com/bug?id=c620fe14aac810396d3c3edc9ad73848bf69a29e

The Linux kernel CVE team has assigned CVE-2022-49993 to this issue.


Affected and fixed versions
===========================

	Fixed in 4.9.327 with commit 18e28817cb516b39de6281f6db9b0618b2cc7b42
	Fixed in 4.14.292 with commit adf0112d9b8acb03485624220b4934f69bf13369
	Fixed in 4.19.312 with commit a217715338fd48f72114725aa7a40e484a781ca7
	Fixed in 5.4.274 with commit b40877b8562c5720d0a7fce20729f56b75a3dede
	Fixed in 5.10.140 with commit 6858933131d0dadac071c4d33335a9ea4b8e76cf
	Fixed in 5.15.64 with commit 0455bef69028c65065f16bb04635591b2374249b
	Fixed in 5.19.6 with commit 9be7fa7ead18a48940df7b59d993bbc8b9055c15
	Fixed in 6.0 with commit c490a0b5a4f36da3918181a8acdc6991d967c5f3

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-49993
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/block/loop.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/18e28817cb516b39de6281f6db9b0618b2cc7b42
	https://git.kernel.org/stable/c/adf0112d9b8acb03485624220b4934f69bf13369
	https://git.kernel.org/stable/c/a217715338fd48f72114725aa7a40e484a781ca7
	https://git.kernel.org/stable/c/b40877b8562c5720d0a7fce20729f56b75a3dede
	https://git.kernel.org/stable/c/6858933131d0dadac071c4d33335a9ea4b8e76cf
	https://git.kernel.org/stable/c/0455bef69028c65065f16bb04635591b2374249b
	https://git.kernel.org/stable/c/9be7fa7ead18a48940df7b59d993bbc8b9055c15
	https://git.kernel.org/stable/c/c490a0b5a4f36da3918181a8acdc6991d967c5f3
