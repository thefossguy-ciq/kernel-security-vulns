From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-50095: posix-cpu-timers: Cleanup CPU timers before freeing them during exec
Message-Id: <2025061802-CVE-2022-50095-981c@gregkh>
Content-Length: 3066
Lines: 66
X-Developer-Signature: v=1; a=openpgp-sha256; l=3133;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=Cyk8p03v7pEP7Jjn6ajrRGW8KJdLxt7KA5SWVmDmQ3w=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBlBc/K+B5W/ZDow+62OgIPunFTNp9zcNzo/C8kvO8vPv
 3HKloigjhgWBkEmBlkxRZYv23iO7q84pOhlaHsaZg4rE8gQBi5OAZjI3RaGGbtiXHZIq3wVnNLQ
 Pe1f8uHA9gJdhgXLli26qpaewq844Zu3wJFbuv/C1lUDAA==
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

posix-cpu-timers: Cleanup CPU timers before freeing them during exec

Commit 55e8c8eb2c7b ("posix-cpu-timers: Store a reference to a pid not a
task") started looking up tasks by PID when deleting a CPU timer.

When a non-leader thread calls execve, it will switch PIDs with the leader
process. Then, as it calls exit_itimers, posix_cpu_timer_del cannot find
the task because the timer still points out to the old PID.

That means that armed timers won't be disarmed, that is, they won't be
removed from the timerqueue_list. exit_itimers will still release their
memory, and when that list is later processed, it leads to a
use-after-free.

Clean up the timers from the de-threaded task before freeing them. This
prevents a reported use-after-free.

The Linux kernel CVE team has assigned CVE-2022-50095 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.7 with commit 55e8c8eb2c7b6bf30e99423ccfe7ca032f498f59 and fixed in 5.10.137 with commit 541840859ace9c2ccebc32fa9e376c7bd3def490
	Issue introduced in 5.7 with commit 55e8c8eb2c7b6bf30e99423ccfe7ca032f498f59 and fixed in 5.15.61 with commit 9e255ed238fc67058df87b0388ad6d4b2ef3a2bd
	Issue introduced in 5.7 with commit 55e8c8eb2c7b6bf30e99423ccfe7ca032f498f59 and fixed in 5.18.18 with commit e8cb6e8fd9890780f1bfcf5592889e1b879e779c
	Issue introduced in 5.7 with commit 55e8c8eb2c7b6bf30e99423ccfe7ca032f498f59 and fixed in 5.19.2 with commit b2fc1723eb65abb83e00d5f011de670296af0b28
	Issue introduced in 5.7 with commit 55e8c8eb2c7b6bf30e99423ccfe7ca032f498f59 and fixed in 6.0 with commit e362359ace6f87c201531872486ff295df306d13

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-50095
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	fs/exec.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/541840859ace9c2ccebc32fa9e376c7bd3def490
	https://git.kernel.org/stable/c/9e255ed238fc67058df87b0388ad6d4b2ef3a2bd
	https://git.kernel.org/stable/c/e8cb6e8fd9890780f1bfcf5592889e1b879e779c
	https://git.kernel.org/stable/c/b2fc1723eb65abb83e00d5f011de670296af0b28
	https://git.kernel.org/stable/c/e362359ace6f87c201531872486ff295df306d13
