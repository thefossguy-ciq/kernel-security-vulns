{
   "containers": {
      "cna": {
         "providerMetadata": {
            "orgId": "f4215fc3-5b6b-47ff-a258-f7189bd81038"
         },
         "descriptions": [
            {
               "lang": "en",
               "value": "In the Linux kernel, the following vulnerability has been resolved:\n\n9p/trans_fd: always use O_NONBLOCK read/write\n\nsyzbot is reporting hung task at p9_fd_close() [1], for p9_mux_poll_stop()\n from p9_conn_destroy() from p9_fd_close() is failing to interrupt already\nstarted kernel_read() from p9_fd_read() from p9_read_work() and/or\nkernel_write() from p9_fd_write() from p9_write_work() requests.\n\nSince p9_socket_open() sets O_NONBLOCK flag, p9_mux_poll_stop() does not\nneed to interrupt kernel_read()/kernel_write(). However, since p9_fd_open()\ndoes not set O_NONBLOCK flag, but pipe blocks unless signal is pending,\np9_mux_poll_stop() needs to interrupt kernel_read()/kernel_write() when\nthe file descriptor refers to a pipe. In other words, pipe file descriptor\nneeds to be handled as if socket file descriptor.\n\nWe somehow need to interrupt kernel_read()/kernel_write() on pipes.\n\nA minimal change, which this patch is doing, is to set O_NONBLOCK flag\n from p9_fd_open(), for O_NONBLOCK flag does not affect reading/writing\nof regular files. But this approach changes O_NONBLOCK flag on userspace-\nsupplied file descriptors (which might break userspace programs), and\nO_NONBLOCK flag could be changed by userspace. It would be possible to set\nO_NONBLOCK flag every time p9_fd_read()/p9_fd_write() is invoked, but still\nremains small race window for clearing O_NONBLOCK flag.\n\nIf we don't want to manipulate O_NONBLOCK flag, we might be able to\nsurround kernel_read()/kernel_write() with set_thread_flag(TIF_SIGPENDING)\nand recalc_sigpending(). Since p9_read_work()/p9_write_work() works are\nprocessed by kernel threads which process global system_wq workqueue,\nsignals could not be delivered from remote threads when p9_mux_poll_stop()\n from p9_conn_destroy() from p9_fd_close() is called. Therefore, calling\nset_thread_flag(TIF_SIGPENDING)/recalc_sigpending() every time would be\nneeded if we count on signals for making kernel_read()/kernel_write()\nnon-blocking.\n\n[Dominique: add comment at Christian's suggestion]"
            }
         ],
         "affected": [
            {
               "product": "Linux",
               "vendor": "Linux",
               "defaultStatus": "unaffected",
               "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
               "programFiles": [
                  "net/9p/trans_fd.c"
               ],
               "versions": [
                  {
                     "version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2",
                     "lessThan": "0b5e6bd72b8171364616841603a70e4ba9837063",
                     "status": "affected",
                     "versionType": "git"
                  },
                  {
                     "version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2",
                     "lessThan": "9f8554615df668e4bf83294633ee9d232b28ce45",
                     "status": "affected",
                     "versionType": "git"
                  },
                  {
                     "version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2",
                     "lessThan": "7abf40f06a76c0dff42eada10597917e9776fbd4",
                     "status": "affected",
                     "versionType": "git"
                  },
                  {
                     "version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2",
                     "lessThan": "b1ad04da7fe4515e2ce2d5f2dcab3b5b6d45614b",
                     "status": "affected",
                     "versionType": "git"
                  },
                  {
                     "version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2",
                     "lessThan": "a8e2fc8f7b41fa9d9ca5f624f4e4d34fce5b40a9",
                     "status": "affected",
                     "versionType": "git"
                  },
                  {
                     "version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2",
                     "lessThan": "0e07032b4b4724b8ad1003698cb81083c1818999",
                     "status": "affected",
                     "versionType": "git"
                  },
                  {
                     "version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2",
                     "lessThan": "5af16182c5639349415118e9e9aecd8355f7a08b",
                     "status": "affected",
                     "versionType": "git"
                  },
                  {
                     "version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2",
                     "lessThan": "ef575281b21e9a34dfae544a187c6aac2ae424a9",
                     "status": "affected",
                     "versionType": "git"
                  }
               ]
            },
            {
               "product": "Linux",
               "vendor": "Linux",
               "defaultStatus": "affected",
               "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
               "programFiles": [
                  "net/9p/trans_fd.c"
               ],
               "versions": [
                  {
                     "version": "4.9.334",
                     "lessThanOrEqual": "4.9.*",
                     "status": "unaffected",
                     "versionType": "semver"
                  },
                  {
                     "version": "4.14.300",
                     "lessThanOrEqual": "4.14.*",
                     "status": "unaffected",
                     "versionType": "semver"
                  },
                  {
                     "version": "4.19.267",
                     "lessThanOrEqual": "4.19.*",
                     "status": "unaffected",
                     "versionType": "semver"
                  },
                  {
                     "version": "5.4.225",
                     "lessThanOrEqual": "5.4.*",
                     "status": "unaffected",
                     "versionType": "semver"
                  },
                  {
                     "version": "5.10.156",
                     "lessThanOrEqual": "5.10.*",
                     "status": "unaffected",
                     "versionType": "semver"
                  },
                  {
                     "version": "5.15.80",
                     "lessThanOrEqual": "5.15.*",
                     "status": "unaffected",
                     "versionType": "semver"
                  },
                  {
                     "version": "6.0.10",
                     "lessThanOrEqual": "6.0.*",
                     "status": "unaffected",
                     "versionType": "semver"
                  },
                  {
                     "version": "6.1",
                     "lessThanOrEqual": "*",
                     "status": "unaffected",
                     "versionType": "original_commit_for_fix"
                  }
               ]
            }
         ],
         "references": [
            {
               "url": "https://git.kernel.org/stable/c/0b5e6bd72b8171364616841603a70e4ba9837063"
            },
            {
               "url": "https://git.kernel.org/stable/c/9f8554615df668e4bf83294633ee9d232b28ce45"
            },
            {
               "url": "https://git.kernel.org/stable/c/7abf40f06a76c0dff42eada10597917e9776fbd4"
            },
            {
               "url": "https://git.kernel.org/stable/c/b1ad04da7fe4515e2ce2d5f2dcab3b5b6d45614b"
            },
            {
               "url": "https://git.kernel.org/stable/c/a8e2fc8f7b41fa9d9ca5f624f4e4d34fce5b40a9"
            },
            {
               "url": "https://git.kernel.org/stable/c/0e07032b4b4724b8ad1003698cb81083c1818999"
            },
            {
               "url": "https://git.kernel.org/stable/c/5af16182c5639349415118e9e9aecd8355f7a08b"
            },
            {
               "url": "https://git.kernel.org/stable/c/ef575281b21e9a34dfae544a187c6aac2ae424a9"
            }
         ],
         "title": "9p/trans_fd: always use O_NONBLOCK read/write",
         "x_generator": {
            "engine": "bippy-1.1.0"
         }
      }
   },
   "cveMetadata": {
      "assignerOrgId": "f4215fc3-5b6b-47ff-a258-f7189bd81038",
      "cveID": "CVE-2022-49767",
      "requesterUserId": "gregkh@kernel.org",
      "serial": "1",
      "state": "PUBLISHED"
   },
   "dataType": "CVE_RECORD",
   "dataVersion": "5.0"
}
