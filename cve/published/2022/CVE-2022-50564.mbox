From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-50564: s390/netiucv: Fix return type of netiucv_tx()
Message-Id: <2025102207-CVE-2022-50564-c6eb@gregkh>
Content-Length: 3780
Lines: 79
X-Developer-Signature: v=1; a=openpgp-sha256; l=3860;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=2ITg2ThcwRWfm5IKLDxBVoGmv1a5YgIUI3/4QrvF+g0=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBk/bn2vWRimwb/yi+xeNvtA5gsCcSkTPvbcOBu219F//
 +mfzkKMHbEsDIJMDLJiiixftvEc3V9xSNHL0PY0zBxWJpAhDFycAjCRZdEMC04VZ/k+ctQJbNee
 wiWYumvdgYO6yxnmB2px/TCwPHV4d8HDoEeJacHSL6sFAA==
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

s390/netiucv: Fix return type of netiucv_tx()

With clang's kernel control flow integrity (kCFI, CONFIG_CFI_CLANG),
indirect call targets are validated against the expected function
pointer prototype to make sure the call target is valid to help mitigate
ROP attacks. If they are not identical, there is a failure at run time,
which manifests as either a kernel panic or thread getting killed. A
proposed warning in clang aims to catch these at compile time, which
reveals:

  drivers/s390/net/netiucv.c:1854:21: error: incompatible function pointer types initializing 'netdev_tx_t (*)(struct sk_buff *, struct net_device *)' (aka 'enum netdev_tx (*)(struct sk_buff *, struct net_device *)') with an expression of type 'int (struct sk_buff *, struct net_device *)' [-Werror,-Wincompatible-function-pointer-types-strict]
          .ndo_start_xmit         = netiucv_tx,
                                    ^~~~~~~~~~

->ndo_start_xmit() in 'struct net_device_ops' expects a return type of
'netdev_tx_t', not 'int'. Adjust the return type of netiucv_tx() to
match the prototype's to resolve the warning and potential CFI failure,
should s390 select ARCH_SUPPORTS_CFI_CLANG in the future.

Additionally, while in the area, remove a comment block that is no
longer relevant.

The Linux kernel CVE team has assigned CVE-2022-50564 to this issue.


Affected and fixed versions
===========================

	Fixed in 4.9.337 with commit f13d870fce90f01cf930bfaffecc8185ae0be21c
	Fixed in 4.14.303 with commit eccc88c0efe407e579291792ad07a7dedc0f63f0
	Fixed in 4.19.270 with commit 85d392710275355425df8618ccbebbc336f5acc5
	Fixed in 5.4.229 with commit 4bee3c75d5bf7c2b5dc0b520410eb40449e5da31
	Fixed in 5.10.163 with commit 3ac0217ca9186c2f9af9a0113a331a42aa847894
	Fixed in 5.15.86 with commit dfbf0122ea1b9b3e73fa22c8ff6bd888935c54fc
	Fixed in 6.0.16 with commit e7a849f740e3576e79cba403697e916f4c3a6f12
	Fixed in 6.1.2 with commit d034fa43af92fc46a81d882f46d9cc3e4ffdbbcc
	Fixed in 6.2 with commit 88d86d18d7cf7e9137c95f9d212bb9fff8a1b4be

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-50564
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/s390/net/netiucv.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/f13d870fce90f01cf930bfaffecc8185ae0be21c
	https://git.kernel.org/stable/c/eccc88c0efe407e579291792ad07a7dedc0f63f0
	https://git.kernel.org/stable/c/85d392710275355425df8618ccbebbc336f5acc5
	https://git.kernel.org/stable/c/4bee3c75d5bf7c2b5dc0b520410eb40449e5da31
	https://git.kernel.org/stable/c/3ac0217ca9186c2f9af9a0113a331a42aa847894
	https://git.kernel.org/stable/c/dfbf0122ea1b9b3e73fa22c8ff6bd888935c54fc
	https://git.kernel.org/stable/c/e7a849f740e3576e79cba403697e916f4c3a6f12
	https://git.kernel.org/stable/c/d034fa43af92fc46a81d882f46d9cc3e4ffdbbcc
	https://git.kernel.org/stable/c/88d86d18d7cf7e9137c95f9d212bb9fff8a1b4be
