From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-50219: bpf: Fix KASAN use-after-free Read in compute_effective_progs
Message-Id: <2025061846-CVE-2022-50219-a138@gregkh>
Content-Length: 3300
Lines: 67
X-Developer-Signature: v=1; a=openpgp-sha256; l=3368;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=Gu1PXfXsLi+ah+ZL352TLD+5Sy7GdqHLh6Xj5o//Xkw=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBlBc2Ydb/Y4+GOy3c0jMzcoZj/kDMv68E3sqeDSM2ndz
 8PV3zUnd8SyMAgyMciKKbJ82cZzdH/FIUUvQ9vTMHNYmUCGMHBxCsBEbj5kmGf2d13tvMl3sgPe
 quyqfTNVTTf5fAzDXIGdEm1MB95Iu1g0GexeVVS/xnfdPwA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

bpf: Fix KASAN use-after-free Read in compute_effective_progs

Syzbot found a Use After Free bug in compute_effective_progs().
The reproducer creates a number of BPF links, and causes a fault
injected alloc to fail, while calling bpf_link_detach on them.
Link detach triggers the link to be freed by bpf_link_free(),
which calls __cgroup_bpf_detach() and update_effective_progs().
If the memory allocation in this function fails, the function restores
the pointer to the bpf_cgroup_link on the cgroup list, but the memory
gets freed just after it returns. After this, every subsequent call to
update_effective_progs() causes this already deallocated pointer to be
dereferenced in prog_list_length(), and triggers KASAN UAF error.

To fix this issue don't preserve the pointer to the prog or link in the
list, but remove it and replace it with a dummy prog without shrinking
the table. The subsequent call to __cgroup_bpf_detach() or
__cgroup_bpf_detach() will correct it.

The Linux kernel CVE team has assigned CVE-2022-50219 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.7 with commit af6eea57437a830293eab56246b6025cc7d46ee7 and fixed in 5.10.138 with commit 3527e3cbb84d8868c4d4e91ba55915f96d39ec3d
	Issue introduced in 5.7 with commit af6eea57437a830293eab56246b6025cc7d46ee7 and fixed in 5.15.61 with commit 1f8ca9c40e6222ce431e9ba5dae3cccce8ef9443
	Issue introduced in 5.7 with commit af6eea57437a830293eab56246b6025cc7d46ee7 and fixed in 5.18.18 with commit 6336388715afa419cc97d0255bda3bba1b96b7ca
	Issue introduced in 5.7 with commit af6eea57437a830293eab56246b6025cc7d46ee7 and fixed in 5.19.2 with commit be001f9da71eaa3b61e186fb88bde3279728bdca
	Issue introduced in 5.7 with commit af6eea57437a830293eab56246b6025cc7d46ee7 and fixed in 6.0 with commit 4c46091ee985ae84c60c5e95055d779fcd291d87

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-50219
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	kernel/bpf/cgroup.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/3527e3cbb84d8868c4d4e91ba55915f96d39ec3d
	https://git.kernel.org/stable/c/1f8ca9c40e6222ce431e9ba5dae3cccce8ef9443
	https://git.kernel.org/stable/c/6336388715afa419cc97d0255bda3bba1b96b7ca
	https://git.kernel.org/stable/c/be001f9da71eaa3b61e186fb88bde3279728bdca
	https://git.kernel.org/stable/c/4c46091ee985ae84c60c5e95055d779fcd291d87
