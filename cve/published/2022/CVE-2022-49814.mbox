From bippy-1.1.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-49814: kcm: close race conditions on sk_receive_queue
Message-Id: <2025050131-CVE-2022-49814-2f30@gregkh>
Content-Length: 3738
Lines: 75
X-Developer-Signature: v=1; a=openpgp-sha256; l=3814;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=H+ddDWex0S4Lo2bnQv0lgZuuF/fo/Lf18dTmlmKrWzA=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBnCDbODPh95/nedSdqpSxxzRebmlKk1Oz2YuFLaPHKug
 uc01orLHbEsDIJMDLJiiixftvEc3V9xSNHL0PY0zBxWJpAhDFycAjAR7hMM8z1W20y0Ofv15RFm
 la2tEZv0ShuuaTAsOFO1wmBzoqS0LdeieLnMRtXsV3kmAA==
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

kcm: close race conditions on sk_receive_queue

sk->sk_receive_queue is protected by skb queue lock, but for KCM
sockets its RX path takes mux->rx_lock to protect more than just
skb queue. However, kcm_recvmsg() still only grabs the skb queue
lock, so race conditions still exist.

We can teach kcm_recvmsg() to grab mux->rx_lock too but this would
introduce a potential performance regression as struct kcm_mux can
be shared by multiple KCM sockets.

So we have to enforce skb queue lock in requeue_rx_msgs() and handle
skb peek case carefully in kcm_wait_data(). Fortunately,
skb_recv_datagram() already handles it nicely and is widely used by
other sockets, we can just switch to skb_recv_datagram() after
getting rid of the unnecessary sock lock in kcm_recvmsg() and
kcm_splice_read(). Side note: SOCK_DONE is not used by KCM sockets,
so it is safe to get rid of this check too.

I ran the original syzbot reproducer for 30 min without seeing any
issue.

The Linux kernel CVE team has assigned CVE-2022-49814 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 4.6 with commit ab7ac4eb9832e32a09f4e8042705484d2fb0aad3 and fixed in 4.14.300 with commit 22f6b5d47396b4287662668ee3f5c1f766cb4259
	Issue introduced in 4.6 with commit ab7ac4eb9832e32a09f4e8042705484d2fb0aad3 and fixed in 4.19.267 with commit d9ad4de92e184b19bcae4da10dac0275abf83931
	Issue introduced in 4.6 with commit ab7ac4eb9832e32a09f4e8042705484d2fb0aad3 and fixed in 5.4.225 with commit ce57d6474ae999a3b2d442314087473a646a65c7
	Issue introduced in 4.6 with commit ab7ac4eb9832e32a09f4e8042705484d2fb0aad3 and fixed in 5.10.156 with commit 4154b6afa2bd639214ff259d912faad984f7413a
	Issue introduced in 4.6 with commit ab7ac4eb9832e32a09f4e8042705484d2fb0aad3 and fixed in 5.15.80 with commit f7b0e95071bb4be4b811af3f0bfc3e200eedeaa3
	Issue introduced in 4.6 with commit ab7ac4eb9832e32a09f4e8042705484d2fb0aad3 and fixed in 6.0.10 with commit bf92e54597d842da127c59833b365d6faeeaf020
	Issue introduced in 4.6 with commit ab7ac4eb9832e32a09f4e8042705484d2fb0aad3 and fixed in 6.1 with commit 5121197ecc5db58c07da95eb1ff82b98b121a221

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-49814
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	net/kcm/kcmsock.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/22f6b5d47396b4287662668ee3f5c1f766cb4259
	https://git.kernel.org/stable/c/d9ad4de92e184b19bcae4da10dac0275abf83931
	https://git.kernel.org/stable/c/ce57d6474ae999a3b2d442314087473a646a65c7
	https://git.kernel.org/stable/c/4154b6afa2bd639214ff259d912faad984f7413a
	https://git.kernel.org/stable/c/f7b0e95071bb4be4b811af3f0bfc3e200eedeaa3
	https://git.kernel.org/stable/c/bf92e54597d842da127c59833b365d6faeeaf020
	https://git.kernel.org/stable/c/5121197ecc5db58c07da95eb1ff82b98b121a221
