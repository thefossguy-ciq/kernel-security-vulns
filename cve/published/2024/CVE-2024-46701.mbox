From bippy-c9c4e1df01b2 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-46701: libfs: fix infinite directory reads for offset dir
Message-Id: <2024091326-CVE-2024-46701-ad65@gregkh>
Content-Length: 2718
Lines: 67
X-Developer-Signature: v=1; a=openpgp-sha256; l=2786;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=OPBQdxOi3tkH/Qm/DKzSLgF4r+ABDFCryJFch+4ml9Q=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDGmPb3el9N2+cO2c10XLTTM6y+ZqxAvJL5dyy/Z+/3aeu
 vAPw6jsjlgWBkEmBlkxRZYv23iO7q84pOhlaHsaZg4rE8gQBi5OAZjI/TiGecrTui1qH/W+k51+
 89oktofidjX88gwLJj27PHnSp92V94JfecmrbBX+0TjtDgA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

libfs: fix infinite directory reads for offset dir

After we switch tmpfs dir operations from simple_dir_operations to
simple_offset_dir_operations, every rename happened will fill new dentry
to dest dir's maple tree(&SHMEM_I(inode)->dir_offsets->mt) with a free
key starting with octx->newx_offset, and then set newx_offset equals to
free key + 1. This will lead to infinite readdir combine with rename
happened at the same time, which fail generic/736 in xfstests(detail show
as below).

1. create 5000 files(1 2 3...) under one dir
2. call readdir(man 3 readdir) once, and get one entry
3. rename(entry, "TEMPFILE"), then rename("TEMPFILE", entry)
4. loop 2~3, until readdir return nothing or we loop too many
   times(tmpfs break test with the second condition)

We choose the same logic what commit 9b378f6ad48cf ("btrfs: fix infinite
directory reads") to fix it, record the last_index when we open dir, and
do not emit the entry which index >= last_index. The file->private_data
now used in offset dir can use directly to do this, and we also update
the last_index when we llseek the dir file.

[brauner: only update last_index after seek when offset is zero like Jan suggested]

The Linux kernel CVE team has assigned CVE-2024-46701 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 6.6 with commit a2e459555c5f and fixed in 6.10.7 with commit 308b4fc2403b
	Issue introduced in 6.6 with commit a2e459555c5f and fixed in 6.11-rc4 with commit 64a7ce76fb90

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-46701
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	fs/libfs.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/308b4fc2403b335894592ee9dc212a5e58bb309f
	https://git.kernel.org/stable/c/64a7ce76fb901bf9f9c36cf5d681328fc0fd4b5a
