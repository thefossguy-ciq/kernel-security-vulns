From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-53193: clk: clk-loongson2: Fix memory corruption bug in struct loongson2_clk_provider
Message-Id: <2024122724-CVE-2024-53193-1575@gregkh>
Content-Length: 3491
Lines: 87
X-Developer-Signature: v=1; a=openpgp-sha256; l=3579;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=3lCzxYdES0S4rqKeCe+abdjn7HJE8Sx1u4bgAepA5aQ=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDOl5GyXmb/3ooNygp3KpviFff/3VjCm+P7kd4twUhc2KT
 P3uvhXqiGVhEGRikBVTZPmyjefo/opDil6Gtqdh5rAygQxh4OIUgImYCjEsuGjmxLCskcOgJ47l
 4MW7e48UPmIJYljQWvowV3/y/ef6uc9jVBq+/V1xo+g1AA==
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

clk: clk-loongson2: Fix memory corruption bug in struct loongson2_clk_provider

Some heap space is allocated for the flexible structure `struct
clk_hw_onecell_data` and its flexible-array member `hws` through
the composite structure `struct loongson2_clk_provider` in function
`loongson2_clk_probe()`, as shown below:

289         struct loongson2_clk_provider *clp;
	...
296         for (p = data; p->name; p++)
297                 clks_num++;
298
299         clp = devm_kzalloc(dev, struct_size(clp, clk_data.hws, clks_num),
300                            GFP_KERNEL);

Then some data is written into the flexible array:

350                 clp->clk_data.hws[p->id] = hw;

This corrupts `clk_lock`, which is the spinlock variable immediately
following the `clk_data` member in `struct loongson2_clk_provider`:

struct loongson2_clk_provider {
	void __iomem *base;
	struct device *dev;
	struct clk_hw_onecell_data clk_data;
	spinlock_t clk_lock;	/* protect access to DIV registers */
};

The problem is that the flexible structure is currently placed in the
middle of `struct loongson2_clk_provider` instead of at the end.

Fix this by moving `struct clk_hw_onecell_data clk_data;` to the end of
`struct loongson2_clk_provider`. Also, add a code comment to help
prevent this from happening again in case new members are added to the
structure in the future.

This change also fixes the following -Wflex-array-member-not-at-end
warning:

drivers/clk/clk-loongson2.c:32:36: warning: structure containing a flexible array member is not at the end of another structure [-Wflex-array-member-not-at-end]

The Linux kernel CVE team has assigned CVE-2024-53193 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 6.10 with commit 9796ec0bd04bb0e70487127d44949ca0554df5d3 and fixed in 6.11.11 with commit 76918202615f2ba7deda14901d9fff528a180099
	Issue introduced in 6.10 with commit 9796ec0bd04bb0e70487127d44949ca0554df5d3 and fixed in 6.12.2 with commit 145de18065b9840687d9b4e63746238c1da25d22
	Issue introduced in 6.10 with commit 9796ec0bd04bb0e70487127d44949ca0554df5d3 and fixed in 6.13-rc1 with commit 6e4bf018bb040955da53dae9f8628ef8fcec2dbe

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-53193
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/clk/clk-loongson2.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/76918202615f2ba7deda14901d9fff528a180099
	https://git.kernel.org/stable/c/145de18065b9840687d9b4e63746238c1da25d22
	https://git.kernel.org/stable/c/6e4bf018bb040955da53dae9f8628ef8fcec2dbe
