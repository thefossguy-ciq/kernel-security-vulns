From bippy-c9c4e1df01b2 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-46848: perf/x86/intel: Limit the period on Haswell
Message-Id: <2024092756-CVE-2024-46848-bbd4@gregkh>
Content-Length: 3794
Lines: 93
X-Developer-Signature: v=1; a=openpgp-sha256; l=3888;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=eKn/m7EoWrVYIGiqk94T3QixbhMFyow77/8T2HPZGv0=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDGnfls9hX7fqzDSff0qu3/mkjs2+8MrR0zi5qH1HZ0Hpb
 y/fFe1VHbEsDIJMDLJiiixftvEc3V9xSNHL0PY0zBxWJpAhDFycAjAR5TiGuSItnfd1eAolGTer
 C5/5aywrsTRIimG+04w3/55t/RdSMSNhPUu3Rq9SkNQ9AA==
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

perf/x86/intel: Limit the period on Haswell

Running the ltp test cve-2015-3290 concurrently reports the following
warnings.

perfevents: irq loop stuck!
  WARNING: CPU: 31 PID: 32438 at arch/x86/events/intel/core.c:3174
  intel_pmu_handle_irq+0x285/0x370
  Call Trace:
   <NMI>
   ? __warn+0xa4/0x220
   ? intel_pmu_handle_irq+0x285/0x370
   ? __report_bug+0x123/0x130
   ? intel_pmu_handle_irq+0x285/0x370
   ? __report_bug+0x123/0x130
   ? intel_pmu_handle_irq+0x285/0x370
   ? report_bug+0x3e/0xa0
   ? handle_bug+0x3c/0x70
   ? exc_invalid_op+0x18/0x50
   ? asm_exc_invalid_op+0x1a/0x20
   ? irq_work_claim+0x1e/0x40
   ? intel_pmu_handle_irq+0x285/0x370
   perf_event_nmi_handler+0x3d/0x60
   nmi_handle+0x104/0x330

Thanks to Thomas Gleixner's analysis, the issue is caused by the low
initial period (1) of the frequency estimation algorithm, which triggers
the defects of the HW, specifically erratum HSW11 and HSW143. (For the
details, please refer https://lore.kernel.org/lkml/87plq9l5d2.ffs@tglx/)

The HSW11 requires a period larger than 100 for the INST_RETIRED.ALL
event, but the initial period in the freq mode is 1. The erratum is the
same as the BDM11, which has been supported in the kernel. A minimum
period of 128 is enforced as well on HSW.

HSW143 is regarding that the fixed counter 1 may overcount 32 with the
Hyper-Threading is enabled. However, based on the test, the hardware
has more issues than it tells. Besides the fixed counter 1, the message
'interrupt took too long' can be observed on any counter which was armed
with a period < 32 and two events expired in the same NMI. A minimum
period of 32 is enforced for the rest of the events.
The recommended workaround code of the HSW143 is not implemented.
Because it only addresses the issue for the fixed counter. It brings
extra overhead through extra MSR writing. No related overcounting issue
has been reported so far.

The Linux kernel CVE team has assigned CVE-2024-46848 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 3.11 with commit 3a632cb229bf and fixed in 6.1.110 with commit 15210b7c8caf
	Issue introduced in 3.11 with commit 3a632cb229bf and fixed in 6.6.51 with commit 0eaf812aa150
	Issue introduced in 3.11 with commit 3a632cb229bf and fixed in 6.10.10 with commit 8717dc35c0e5
	Issue introduced in 3.11 with commit 3a632cb229bf and fixed in 6.11 with commit 25dfc9e357af

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-46848
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	arch/x86/events/intel/core.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/15210b7c8caff4929f25d049ef8404557f8ae468
	https://git.kernel.org/stable/c/0eaf812aa1506704f3b78be87036860e5d0fe81d
	https://git.kernel.org/stable/c/8717dc35c0e5896f4110f4b3882f7ff787a5f73d
	https://git.kernel.org/stable/c/25dfc9e357af8aed1ca79b318a73f2c59c1f0b2b
