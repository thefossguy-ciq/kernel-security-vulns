From bippy-c9c4e1df01b2 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-47674: mm: avoid leaving partial pfn mappings around in error case
Message-Id: <2024101538-CVE-2024-47674-ba1f@gregkh>
Content-Length: 2569
Lines: 67
X-Developer-Signature: v=1; a=openpgp-sha256; l=2637;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=4faf5WE7h1naD3GfsI+uQfrJnIMiSy29rq2b9yK21Y4=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDOl8Hm0eWTJ7/S4IJfQJvluWs+if4v1V9ypPVYm6e7aLH
 fgZo+3dEcvCIMjEICumyPJlG8/R/RWHFL0MbU/DzGFlAhnCwMUpABMx/sKw4EYay+uHf1QaXd4c
 /W1sKnVWy91nOcN8X6uqDReM2N+tnrylVVcqbvWP5APWAA==
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

mm: avoid leaving partial pfn mappings around in error case

As Jann points out, PFN mappings are special, because unlike normal
memory mappings, there is no lifetime information associated with the
mapping - it is just a raw mapping of PFNs with no reference counting of
a 'struct page'.

That's all very much intentional, but it does mean that it's easy to
mess up the cleanup in case of errors.  Yes, a failed mmap() will always
eventually clean up any partial mappings, but without any explicit
lifetime in the page table mapping itself, it's very easy to do the
error handling in the wrong order.

In particular, it's easy to mistakenly free the physical backing store
before the page tables are actually cleaned up and (temporarily) have
stale dangling PTE entries.

To make this situation less error-prone, just make sure that any partial
pfn mapping is torn down early, before any other error handling.

The Linux kernel CVE team has assigned CVE-2024-47674 to this issue.


Affected and fixed versions
===========================

	Fixed in 6.1.111 with commit 65d0db500d7c
	Fixed in 6.6.52 with commit a95a24fcaee1
	Fixed in 6.10.11 with commit 954fd4c81f22
	Fixed in 6.11 with commit 79a61cc3fc04

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-47674
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	mm/memory.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/65d0db500d7c07f0f76fc24a4d837791c4862cd2
	https://git.kernel.org/stable/c/a95a24fcaee1b892e47d5e6dcc403f713874ee80
	https://git.kernel.org/stable/c/954fd4c81f22c4b6ba65379a81fd252971bf4ef3
	https://git.kernel.org/stable/c/79a61cc3fc0466ad2b7b89618a6157785f0293b3
