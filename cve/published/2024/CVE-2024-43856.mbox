From bippy-c9c4e1df01b2 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-43856: dma: fix call order in dmam_free_coherent
Message-Id: <2024081732-CVE-2024-43856-9087@gregkh>
Content-Length: 2589
Lines: 66
X-Developer-Signature: v=1; a=openpgp-sha256; l=2656;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=HnY8DVmSkQdDyMHEN9NBlLWWhno2EJvo0bzZkRwKifc=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDGkHcgKkdpbPFDP9P9P4RvTvBXoB885dbEs7nVg5yW9LO
 /O3aY52HbEsDIJMDLJiiixftvEc3V9xSNHL0PY0zBxWJpAhDFycAjCRD+EM88Psd93k93niPYVf
 0nbC3f4CGdYEX4b56X2eyo32gdcSQ8Q366a/0Jhms+QtAA==
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

dma: fix call order in dmam_free_coherent

dmam_free_coherent() frees a DMA allocation, which makes the
freed vaddr available for reuse, then calls devres_destroy()
to remove and free the data structure used to track the DMA
allocation. Between the two calls, it is possible for a
concurrent task to make an allocation with the same vaddr
and add it to the devres list.

If this happens, there will be two entries in the devres list
with the same vaddr and devres_destroy() can free the wrong
entry, triggering the WARN_ON() in dmam_match.

Fix by destroying the devres entry before freeing the DMA
allocation.

  kokonut //net/encryption
    http://sponge2/b9145fe6-0f72-4325-ac2f-a84d81075b03

The Linux kernel CVE team has assigned CVE-2024-43856 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 2.6.21 with commit 9ac7849e35f7 and fixed in 6.1.103 with commit f993a4baf6b6
	Issue introduced in 2.6.21 with commit 9ac7849e35f7 and fixed in 6.6.44 with commit 1fe97f68fce1
	Issue introduced in 2.6.21 with commit 9ac7849e35f7 and fixed in 6.10.3 with commit 22094f5f52e7
	Issue introduced in 2.6.21 with commit 9ac7849e35f7 and fixed in 6.11-rc1 with commit 28e8b7406d3a

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-43856
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	kernel/dma/mapping.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/f993a4baf6b622232e4c190d34c220179e5d61eb
	https://git.kernel.org/stable/c/1fe97f68fce1ba24bf823bfb0eb0956003473130
	https://git.kernel.org/stable/c/22094f5f52e7bc16c5bf9613365049383650b02e
	https://git.kernel.org/stable/c/28e8b7406d3a1f5329a03aa25a43aa28e087cb20
