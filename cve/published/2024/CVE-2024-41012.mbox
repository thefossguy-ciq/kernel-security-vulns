From bippy-c9c4e1df01b2 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-41012: filelock: Remove locks reliably when fcntl/close race is detected
Message-Id: <2024072314-CVE-2024-41012-a1cf@gregkh>
Content-Length: 2382
Lines: 61
X-Developer-Signature: v=1; a=openpgp-sha256; l=2444;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=5LBTLP9GukWx8zqDqPtXIiXna/hUXeEnf18NPkKVM0I=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDGnzU8pCVn5RtHv9oeB94uverVt3b90qJ++b9vU835P9t
 Yr7TlsndMSyMAgyMciKKbJ82cZzdH/FIUUvQ9vTMHNYmUCGMHBxCsBEfk9lmO9yvoCzU5I74gRb
 SFfk3ar//jf3qTDMUylnNHy6cl3g4YdrVl6XruKS9qnIAgA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

filelock: Remove locks reliably when fcntl/close race is detected

When fcntl_setlk() races with close(), it removes the created lock with
do_lock_file_wait().
However, LSMs can allow the first do_lock_file_wait() that created the lock
while denying the second do_lock_file_wait() that tries to remove the lock.
Separately, posix_lock_file() could also fail to
remove a lock due to GFP_KERNEL allocation failure (when splitting a range
in the middle).

After the bug has been triggered, use-after-free reads will occur in
lock_get_status() when userspace reads /proc/locks. This can likely be used
to read arbitrary kernel memory, but can't corrupt kernel memory.

Fix it by calling locks_remove_posix() instead, which is designed to
reliably get rid of POSIX locks associated with the given file and
files_struct and is also used by filp_flush().

The Linux kernel CVE team has assigned CVE-2024-41012 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 2.6.13 with commit c293621bbf67 and fixed in 6.9.9 with commit b6d223942c34
	Issue introduced in 2.6.13 with commit c293621bbf67 and fixed in 6.10 with commit 3cad1bc01041

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-41012
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	fs/locks.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/b6d223942c34057fdfd8f149e763fa823731b224
	https://git.kernel.org/stable/c/3cad1bc010416c6dd780643476bc59ed742436b9
