From bippy-d175d3acf727 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-35827: io_uring/net: fix overflow check in io_recvmsg_mshot_prep()
Message-Id: <2024051741-CVE-2024-35827-822c@gregkh>
Content-Length: 2734
Lines: 67
X-Developer-Signature: v=1; a=openpgp-sha256; l=2802;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=olj5j0nT1tRCR42RXdSpluxqtDfOE3htsfs9I6R6oy4=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDGnucVPLfJ+fm2nNePTjbYmCd1orHbxvTrwxh4VR+lG2t
 6Nnbbp5RywLgyATg6yYIsuXbTxH91ccUvQytD0NM4eVCWQIAxenAEzEdwLDggVLEny9tAIsl9vO
 EsxfH+RhUJHbxzA/ODxlrul5Zonr3/8fUvWS830o8k0KAA==
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

io_uring/net: fix overflow check in io_recvmsg_mshot_prep()

The "controllen" variable is type size_t (unsigned long).  Casting it
to int could lead to an integer underflow.

The check_add_overflow() function considers the type of the destination
which is type int.  If we add two positive values and the result cannot
fit in an integer then that's counted as an overflow.

However, if we cast "controllen" to an int and it turns negative, then
negative values *can* fit into an int type so there is no overflow.

Good: 100 + (unsigned long)-4 = 96  <-- overflow
 Bad: 100 + (int)-4 = 96 <-- no overflow

I deleted the cast of the sizeof() as well.  That's not a bug but the
cast is unnecessary.

The Linux kernel CVE team has assigned CVE-2024-35827 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 6.0 with commit 9b0fc3c054ff and fixed in 6.1.83 with commit 868ec8686164
	Issue introduced in 6.0 with commit 9b0fc3c054ff and fixed in 6.6.23 with commit 59a534690ecc
	Issue introduced in 6.0 with commit 9b0fc3c054ff and fixed in 6.7.11 with commit 0c8c74bb59e7
	Issue introduced in 6.0 with commit 9b0fc3c054ff and fixed in 6.8.2 with commit b6563ad0d599
	Issue introduced in 6.0 with commit 9b0fc3c054ff and fixed in 6.9 with commit 8ede3db5061b

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-35827
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	io_uring/net.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/868ec868616438df487b9e2baa5a99f8662cc47c
	https://git.kernel.org/stable/c/59a534690ecc3af72c6ab121aeac1237a4adae66
	https://git.kernel.org/stable/c/0c8c74bb59e7d77554016efc34c2d10376985e5e
	https://git.kernel.org/stable/c/b6563ad0d599110bd5cf8f56c47d279c3ed796fe
	https://git.kernel.org/stable/c/8ede3db5061bb1fe28e2c9683329aafa89d2b1b4
