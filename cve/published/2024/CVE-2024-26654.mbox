From bippy-b4257b672505 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-26654: ALSA: sh: aica: reorder cleanup operations to avoid UAF bugs
Message-Id: <2024040142-CVE-2024-26654-aa6c@gregkh>
Content-Length: 2662
Lines: 68
X-Developer-Signature: v=1; a=openpgp-sha256; l=2731;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=Z5AEasqUQCiE+PcDVLJ5NJVwHh5dzu4E0kgj6Ctejkg=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDGlchfcuvbr6RK8hqqZhhtXFR0rnXmiw3Jy5QNaO78Aaj
 gN8Lnd2dcSyMAgyMciKKbJ82cZzdH/FIUUvQ9vTMHNYmUCGMHBxCsBE8hIY5in7ujjr2Dg/fvud
 7WhgjKtS3YSSHIY5fEmOW54KaH/Oz8rs5g1t3arMVxABAA==
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

ALSA: sh: aica: reorder cleanup operations to avoid UAF bugs

The dreamcastcard->timer could schedule the spu_dma_work and the
spu_dma_work could also arm the dreamcastcard->timer.

When the snd_pcm_substream is closing, the aica_channel will be
deallocated. But it could still be dereferenced in the worker
thread. The reason is that del_timer() will return directly
regardless of whether the timer handler is running or not and
the worker could be rescheduled in the timer handler. As a result,
the UAF bug will happen. The racy situation is shown below:

      (Thread 1)                 |      (Thread 2)
snd_aicapcm_pcm_close()          |
 ...                             |  run_spu_dma() //worker
                                 |    mod_timer()
  flush_work()                   |
  del_timer()                    |  aica_period_elapsed() //timer
  kfree(dreamcastcard->channel)  |    schedule_work()
                                 |  run_spu_dma() //worker
  ...                            |    dreamcastcard->channel-> //USE

In order to mitigate this bug and other possible corner cases,
call mod_timer() conditionally in run_spu_dma(), then implement
PCM sync_stop op to cancel both the timer and worker. The sync_stop
op will be called from PCM core appropriately when needed.

The Linux kernel CVE team has assigned CVE-2024-26654 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 2.6.23 with commit 198de43d758c and fixed in 6.9-rc2 with commit 051e0840ffa8

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-26654
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	sound/sh/aica.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/051e0840ffa8ab25554d6b14b62c9ab9e4901457
