From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-38140: dm: limit swapping tables for devices with zone write plugs
Message-Id: <2025070333-CVE-2025-38140-0ba9@gregkh>
Content-Length: 3253
Lines: 73
X-Developer-Signature: v=1; a=openpgp-sha256; l=3327;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=5pqvmmBIIZ9ZrdTW4ZQ//CbTBhcA6DKCInW2bXtYASY=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBlpDleFZvkczg3SeLN8Jf/OCJOHPF6Gz8z6U4XPa1003
 P+/flFNRywLgyATg6yYIsuXbTxH91ccUvQytD0NM4eVCWQIAxenAExk9gaG+VEVezimBD7bGfrH
 Z3ZZyezZW45Ef2SYX6rEdcvYwejAP+O1LxTCwz5PD/xnDgA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

dm: limit swapping tables for devices with zone write plugs

dm_revalidate_zones() only allowed new or previously unzoned devices to
call blk_revalidate_disk_zones(). If the device was already zoned,
disk->nr_zones would always equal md->nr_zones, so dm_revalidate_zones()
returned without doing any work. This would make the zoned settings for
the device not match the new table. If the device had zone write plug
resources, it could run into errors like bdev_zone_is_seq() reading
invalid memory because disk->conv_zones_bitmap was the wrong size.

If the device doesn't have any zone write plug resources, calling
blk_revalidate_disk_zones() will always correctly update device.  If
blk_revalidate_disk_zones() fails, it can still overwrite or clear the
current disk->nr_zones value. In this case, DM must restore the previous
value of disk->nr_zones, so that the zoned settings will continue to
match the previous value that it fell back to.

If the device already has zone write plug resources,
blk_revalidate_disk_zones() will not correctly update them, if it is
called for arbitrary zoned device changes.  Since there is not much need
for this ability, the easiest solution is to disallow any table reloads
that change the zoned settings, for devices that already have zone plug
resources.  Specifically, if a device already has zone plug resources
allocated, it can only switch to another zoned table that also emulates
zone append.  Also, it cannot change the device size or the zone size. A
device can switch to an error target.

The Linux kernel CVE team has assigned CVE-2025-38140 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.14 with commit bb37d77239af25cde59693dbe3fac04dd17d7b29 and fixed in 6.15.3 with commit ac8acb0bfd98a1c65f3ca9a3e217a766124eebd8
	Issue introduced in 5.14 with commit bb37d77239af25cde59693dbe3fac04dd17d7b29 and fixed in 6.16-rc1 with commit 121218bef4c1df165181f5cd8fc3a2246bac817e

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-38140
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/md/dm-table.c
	drivers/md/dm-zone.c
	drivers/md/dm.c
	drivers/md/dm.h


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/ac8acb0bfd98a1c65f3ca9a3e217a766124eebd8
	https://git.kernel.org/stable/c/121218bef4c1df165181f5cd8fc3a2246bac817e
