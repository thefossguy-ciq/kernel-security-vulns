From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-39749: rcu: Protect ->defer_qs_iw_pending from data race

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

rcu: Protect ->defer_qs_iw_pending from data race

On kernels built with CONFIG_IRQ_WORK=y, when rcu_read_unlock() is
invoked within an interrupts-disabled region of code [1], it will invoke
rcu_read_unlock_special(), which uses an irq-work handler to force the
system to notice when the RCU read-side critical section actually ends.
That end won't happen until interrupts are enabled at the soonest.

In some kernels, such as those booted with rcutree.use_softirq=y, the
irq-work handler is used unconditionally.

The per-CPU rcu_data structure's ->defer_qs_iw_pending field is
updated by the irq-work handler and is both read and updated by
rcu_read_unlock_special().  This resulted in the following KCSAN splat:

------------------------------------------------------------------------

BUG: KCSAN: data-race in rcu_preempt_deferred_qs_handler / rcu_read_unlock_special

read to 0xffff96b95f42d8d8 of 1 bytes by task 90 on cpu 8:
 rcu_read_unlock_special+0x175/0x260
 __rcu_read_unlock+0x92/0xa0
 rt_spin_unlock+0x9b/0xc0
 __local_bh_enable+0x10d/0x170
 __local_bh_enable_ip+0xfb/0x150
 rcu_do_batch+0x595/0xc40
 rcu_cpu_kthread+0x4e9/0x830
 smpboot_thread_fn+0x24d/0x3b0
 kthread+0x3bd/0x410
 ret_from_fork+0x35/0x40
 ret_from_fork_asm+0x1a/0x30

write to 0xffff96b95f42d8d8 of 1 bytes by task 88 on cpu 8:
 rcu_preempt_deferred_qs_handler+0x1e/0x30
 irq_work_single+0xaf/0x160
 run_irq_workd+0x91/0xc0
 smpboot_thread_fn+0x24d/0x3b0
 kthread+0x3bd/0x410
 ret_from_fork+0x35/0x40
 ret_from_fork_asm+0x1a/0x30

no locks held by irq_work/8/88.
irq event stamp: 200272
hardirqs last  enabled at (200272): [<ffffffffb0f56121>] finish_task_switch+0x131/0x320
hardirqs last disabled at (200271): [<ffffffffb25c7859>] __schedule+0x129/0xd70
softirqs last  enabled at (0): [<ffffffffb0ee093f>] copy_process+0x4df/0x1cc0
softirqs last disabled at (0): [<0000000000000000>] 0x0

------------------------------------------------------------------------

The problem is that irq-work handlers run with interrupts enabled, which
means that rcu_preempt_deferred_qs_handler() could be interrupted,
and that interrupt handler might contain an RCU read-side critical
section, which might invoke rcu_read_unlock_special().  In the strict
KCSAN mode of operation used by RCU, this constitutes a data race on
the ->defer_qs_iw_pending field.

This commit therefore disables interrupts across the portion of the
rcu_preempt_deferred_qs_handler() that updates the ->defer_qs_iw_pending
field.  This suffices because this handler is not a fast path.

The Linux kernel CVE team has assigned CVE-2025-39749 to this issue.


Affected and fixed versions
===========================

	Fixed in 5.4.297 with commit 74f58f382a7c8333f8d09701aefaa25913bdbe0e
	Fixed in 5.10.241 with commit f937759c7432d6151b73e1393b6517661813d506
	Fixed in 5.15.190 with commit 0ad84d62217488e679ecc90e8628980dcc003de3
	Fixed in 6.1.149 with commit b5de8d80b5d049f051b95d9b1ee50ae4ab656124
	Fixed in 6.6.103 with commit b55947b725f190396f475d5d0c59aa855a4d8895
	Fixed in 6.12.43 with commit e35e711c78c8a4c43330c0dcb1c4d507a19c20f4
	Fixed in 6.15.11 with commit 90de9c94ea72327cfa9c2c9f6113c23a513af60b
	Fixed in 6.16.2 with commit 55e11f6776798b27cf09a7aa0d718415d4fc9cf5
	Fixed in 6.17-rc1 with commit 90c09d57caeca94e6f3f87c49e96a91edd40cbfd

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-39749
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	kernel/rcu/tree_plugin.h


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/74f58f382a7c8333f8d09701aefaa25913bdbe0e
	https://git.kernel.org/stable/c/f937759c7432d6151b73e1393b6517661813d506
	https://git.kernel.org/stable/c/0ad84d62217488e679ecc90e8628980dcc003de3
	https://git.kernel.org/stable/c/b5de8d80b5d049f051b95d9b1ee50ae4ab656124
	https://git.kernel.org/stable/c/b55947b725f190396f475d5d0c59aa855a4d8895
	https://git.kernel.org/stable/c/e35e711c78c8a4c43330c0dcb1c4d507a19c20f4
	https://git.kernel.org/stable/c/90de9c94ea72327cfa9c2c9f6113c23a513af60b
	https://git.kernel.org/stable/c/55e11f6776798b27cf09a7aa0d718415d4fc9cf5
	https://git.kernel.org/stable/c/90c09d57caeca94e6f3f87c49e96a91edd40cbfd
