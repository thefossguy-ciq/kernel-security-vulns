From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-38478: comedi: Fix initialization of data for instructions that write to subdevice

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

comedi: Fix initialization of data for instructions that write to subdevice

Some Comedi subdevice instruction handlers are known to access
instruction data elements beyond the first `insn->n` elements in some
cases.  The `do_insn_ioctl()` and `do_insnlist_ioctl()` functions
allocate at least `MIN_SAMPLES` (16) data elements to deal with this,
but they do not initialize all of that.  For Comedi instruction codes
that write to the subdevice, the first `insn->n` data elements are
copied from user-space, but the remaining elements are left
uninitialized.  That could be a problem if the subdevice instruction
handler reads the uninitialized data.  Ensure that the first
`MIN_SAMPLES` elements are initialized before calling these instruction
handlers, filling the uncopied elements with 0.  For
`do_insnlist_ioctl()`, the same data buffer elements are used for
handling a list of instructions, so ensure the first `MIN_SAMPLES`
elements are initialized for each instruction that writes to the
subdevice.

The Linux kernel CVE team has assigned CVE-2025-38478 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 2.6.29 with commit ed9eccbe8970f6eedc1b978c157caf1251a896d4 and fixed in 5.4.297 with commit 6f38c6380c3b38a05032b8881e41137385a6ce02
	Issue introduced in 2.6.29 with commit ed9eccbe8970f6eedc1b978c157caf1251a896d4 and fixed in 5.10.241 with commit 13e4d9038a1e869445a996a3f604a84ef52fe8f4
	Issue introduced in 2.6.29 with commit ed9eccbe8970f6eedc1b978c157caf1251a896d4 and fixed in 5.15.190 with commit 020eed5681d0f9bced73970368078a92d6cfaa9c
	Issue introduced in 2.6.29 with commit ed9eccbe8970f6eedc1b978c157caf1251a896d4 and fixed in 6.1.147 with commit d3436638738ace8f101af7bdee2eae1bc38e9b29
	Issue introduced in 2.6.29 with commit ed9eccbe8970f6eedc1b978c157caf1251a896d4 and fixed in 6.6.100 with commit 673ee92bd2d31055bca98a1d96b653f5284289c4
	Issue introduced in 2.6.29 with commit ed9eccbe8970f6eedc1b978c157caf1251a896d4 and fixed in 6.12.40 with commit c42116dc70af6664526f7aa82cf937824ab42649
	Issue introduced in 2.6.29 with commit ed9eccbe8970f6eedc1b978c157caf1251a896d4 and fixed in 6.15.8 with commit fe8713fb4e4e82a4f91910d9a41bf0613e69a0b9
	Issue introduced in 2.6.29 with commit ed9eccbe8970f6eedc1b978c157caf1251a896d4 and fixed in 6.16 with commit 46d8c744136ce2454aa4c35c138cc06817f92b8e

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-38478
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/comedi/comedi_fops.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/6f38c6380c3b38a05032b8881e41137385a6ce02
	https://git.kernel.org/stable/c/13e4d9038a1e869445a996a3f604a84ef52fe8f4
	https://git.kernel.org/stable/c/020eed5681d0f9bced73970368078a92d6cfaa9c
	https://git.kernel.org/stable/c/d3436638738ace8f101af7bdee2eae1bc38e9b29
	https://git.kernel.org/stable/c/673ee92bd2d31055bca98a1d96b653f5284289c4
	https://git.kernel.org/stable/c/c42116dc70af6664526f7aa82cf937824ab42649
	https://git.kernel.org/stable/c/fe8713fb4e4e82a4f91910d9a41bf0613e69a0b9
	https://git.kernel.org/stable/c/46d8c744136ce2454aa4c35c138cc06817f92b8e
