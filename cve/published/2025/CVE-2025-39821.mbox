From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-39821: perf: Avoid undefined behavior from stopping/starting inactive events
Message-Id: <2025091616-CVE-2025-39821-3812@gregkh>
Content-Length: 3599
Lines: 83
X-Developer-Signature: v=1; a=openpgp-sha256; l=3683;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=1lUwaVayrhIbdUS4UwblAbvfRUDKkTZ3vbVT0gjYg3c=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBkn4xP6nm39/ufEl5UmAinrDdhvJ1crFnw+0Le1Y35X+
 L3nokVrO2JZGASZGGTFFFm+bOM5ur/ikKKXoe1pmDmsTCBDGLg4BWAi6U0MC7ZxsjN+9VtxaE3t
 hwl9RtrCmaa5nQwzGWesu26/qehwqKzEedFnFjmPBKYpAAA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

perf: Avoid undefined behavior from stopping/starting inactive events

Calling pmu->start()/stop() on perf events in PERF_EVENT_STATE_OFF can
leave event->hw.idx at -1. When PMU drivers later attempt to use this
negative index as a shift exponent in bitwise operations, it leads to UBSAN
shift-out-of-bounds reports.

The issue is a logical flaw in how event groups handle throttling when some
members are intentionally disabled. Based on the analysis and the
reproducer provided by Mark Rutland (this issue on both arm64 and x86-64).

The scenario unfolds as follows:

 1. A group leader event is configured with a very aggressive sampling
    period (e.g., sample_period = 1). This causes frequent interrupts and
    triggers the throttling mechanism.
 2. A child event in the same group is created in a disabled state
    (.disabled = 1). This event remains in PERF_EVENT_STATE_OFF.
    Since it hasn't been scheduled onto the PMU, its event->hw.idx remains
    initialized at -1.
 3. When throttling occurs, perf_event_throttle_group() and later
    perf_event_unthrottle_group() iterate through all siblings, including
    the disabled child event.
 4. perf_event_throttle()/unthrottle() are called on this inactive child
    event, which then call event->pmu->start()/stop().
 5. The PMU driver receives the event with hw.idx == -1 and attempts to
    use it as a shift exponent. e.g., in macros like PMCNTENSET(idx),
    leading to the UBSAN report.

The throttling mechanism attempts to start/stop events that are not
actively scheduled on the hardware.

Move the state check into perf_event_throttle()/perf_event_unthrottle() so
that inactive events are skipped entirely. This ensures only active events
with a valid hw.idx are processed, preventing undefined behavior and
silencing UBSAN warnings. The corrected check ensures true before
proceeding with PMU operations.

The problem can be reproduced with the syzkaller reproducer:

The Linux kernel CVE team has assigned CVE-2025-39821 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 6.16 with commit 9734e25fbf5ae68eb04234b2cd14a4b36ab89141 and fixed in 6.16.5 with commit d689135aa9c5e4e0eab5a92bbe35dab0c8d6677f
	Issue introduced in 6.16 with commit 9734e25fbf5ae68eb04234b2cd14a4b36ab89141 and fixed in 6.17-rc3 with commit b64fdd422a85025b5e91ead794db9d3ef970e369

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-39821
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	kernel/events/core.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/d689135aa9c5e4e0eab5a92bbe35dab0c8d6677f
	https://git.kernel.org/stable/c/b64fdd422a85025b5e91ead794db9d3ef970e369
