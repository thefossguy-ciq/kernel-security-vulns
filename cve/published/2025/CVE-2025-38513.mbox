From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-38513: wifi: zd1211rw: Fix potential NULL pointer dereference in zd_mac_tx_to_dev()
Message-Id: <2025081652-CVE-2025-38513-e205@gregkh>
Content-Length: 4144
Lines: 86
X-Developer-Signature: v=1; a=openpgp-sha256; l=4231;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=I0mdQgWojYVy8/dxqpGV2p9A6YaVulhMfKLfHhkbZ1U=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBkLUgzmzXVimbk3lX+pWsUew7NfOVr7xCNrf1fsPH58m
 pidrpNqRywLgyATg6yYIsuXbTxH91ccUvQytD0NM4eVCWQIAxenAEzkQjrDHL6FQe9S+SIW2Wz8
 myi89vjbA9339BnmJ4V0xu/oEv/xcEOrmOpT7q9MC9vYAQ==
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

wifi: zd1211rw: Fix potential NULL pointer dereference in zd_mac_tx_to_dev()

There is a potential NULL pointer dereference in zd_mac_tx_to_dev(). For
example, the following is possible:

    	T0			    		T1
zd_mac_tx_to_dev()
  /* len == skb_queue_len(q) */
  while (len > ZD_MAC_MAX_ACK_WAITERS) {

					  filter_ack()
					    spin_lock_irqsave(&q->lock, flags);
					    /* position == skb_queue_len(q) */
					    for (i=1; i<position; i++)
				    	      skb = __skb_dequeue(q)

					    if (mac->type == NL80211_IFTYPE_AP)
					      skb = __skb_dequeue(q);
					    spin_unlock_irqrestore(&q->lock, flags);

    skb_dequeue() -> NULL

Since there is a small gap between checking skb queue length and skb being
unconditionally dequeued in zd_mac_tx_to_dev(), skb_dequeue() can return NULL.
Then the pointer is passed to zd_mac_tx_status() where it is dereferenced.

In order to avoid potential NULL pointer dereference due to situations like
above, check if skb is not NULL before passing it to zd_mac_tx_status().

Found by Linux Verification Center (linuxtesting.org) with SVACE.

The Linux kernel CVE team has assigned CVE-2025-38513 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 2.6.25 with commit 459c51ad6e1fc19e91a53798358433d3c08cd09d and fixed in 5.4.296 with commit c1958270de947604cc6de05fc96dbba256b49cf0
	Issue introduced in 2.6.25 with commit 459c51ad6e1fc19e91a53798358433d3c08cd09d and fixed in 5.10.240 with commit 014c34dc132015c4f918ada4982e952947ac1047
	Issue introduced in 2.6.25 with commit 459c51ad6e1fc19e91a53798358433d3c08cd09d and fixed in 5.15.189 with commit b24f65c184540dfb967479320ecf7e8c2e9220dc
	Issue introduced in 2.6.25 with commit 459c51ad6e1fc19e91a53798358433d3c08cd09d and fixed in 6.1.146 with commit adf08c96b963c7cd7ec1ee1c0c556228d9bedaae
	Issue introduced in 2.6.25 with commit 459c51ad6e1fc19e91a53798358433d3c08cd09d and fixed in 6.6.99 with commit 5420de65efbeb6503bcf1d43451c9df67ad60298
	Issue introduced in 2.6.25 with commit 459c51ad6e1fc19e91a53798358433d3c08cd09d and fixed in 6.12.39 with commit fcd9c923b58e86501450b9b442ccc7ce4a8d0fda
	Issue introduced in 2.6.25 with commit 459c51ad6e1fc19e91a53798358433d3c08cd09d and fixed in 6.15.7 with commit 602b4eb2f25668de15de69860ec99caf65b3684d
	Issue introduced in 2.6.25 with commit 459c51ad6e1fc19e91a53798358433d3c08cd09d and fixed in 6.16 with commit 74b1ec9f5d627d2bdd5e5b6f3f81c23317657023

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-38513
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/net/wireless/zydas/zd1211rw/zd_mac.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/c1958270de947604cc6de05fc96dbba256b49cf0
	https://git.kernel.org/stable/c/014c34dc132015c4f918ada4982e952947ac1047
	https://git.kernel.org/stable/c/b24f65c184540dfb967479320ecf7e8c2e9220dc
	https://git.kernel.org/stable/c/adf08c96b963c7cd7ec1ee1c0c556228d9bedaae
	https://git.kernel.org/stable/c/5420de65efbeb6503bcf1d43451c9df67ad60298
	https://git.kernel.org/stable/c/fcd9c923b58e86501450b9b442ccc7ce4a8d0fda
	https://git.kernel.org/stable/c/602b4eb2f25668de15de69860ec99caf65b3684d
	https://git.kernel.org/stable/c/74b1ec9f5d627d2bdd5e5b6f3f81c23317657023
