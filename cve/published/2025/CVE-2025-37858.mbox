From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-37858: fs/jfs: Prevent integer overflow in AG size calculation

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

fs/jfs: Prevent integer overflow in AG size calculation

The JFS filesystem calculates allocation group (AG) size using 1 <<
l2agsize in dbExtendFS(). When l2agsize exceeds 31 (possible with >2TB
aggregates on 32-bit systems), this 32-bit shift operation causes undefined
behavior and improper AG sizing.

On 32-bit architectures:
- Left-shifting 1 by 32+ bits results in 0 due to integer overflow
- This creates invalid AG sizes (0 or garbage values) in
sbi->bmap->db_agsize
- Subsequent block allocations would reference invalid AG structures
- Could lead to:
  - Filesystem corruption during extend operations
  - Kernel crashes due to invalid memory accesses
  - Security vulnerabilities via malformed on-disk structures

Fix by casting to s64 before shifting:
bmp->db_agsize = (s64)1 << l2agsize;

This ensures 64-bit arithmetic even on 32-bit architectures. The cast
matches the data type of db_agsize (s64) and follows similar patterns in
JFS block calculation code.

Found by Linux Verification Center (linuxtesting.org) with SVACE.

The Linux kernel CVE team has assigned CVE-2025-37858 to this issue.


Affected and fixed versions
===========================

	Fixed in 5.4.293 with commit dd07a985e2ded47b6c7d69fc93c1fe02977c8454
	Fixed in 5.10.237 with commit 8bb29629a5e4090e1ef7199cb42db04a52802239
	Fixed in 5.15.181 with commit 3d8a45f87010a802aa214bf39702ca9d99cbf3ba
	Fixed in 6.1.135 with commit 55edbf5dbf60a8195c21e92124c4028939ae16b2
	Fixed in 6.6.88 with commit 7ccf3b35274512b60ecb614e0637e76bd6f2d829
	Fixed in 6.12.24 with commit c802a6a4009f585111f903e810b3be9c6d0da329
	Fixed in 6.13.12 with commit 211ed8f5e39e61f9e4d18edd64ce8005a67a1b2a
	Fixed in 6.14.3 with commit ec34cdf4f917cc6abd306cf091f8b8361fedac88
	Fixed in 6.15 with commit 7fcbf789629cdb9fbf4e2172ce31136cfed11e5e

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-37858
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	fs/jfs/jfs_dmap.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/dd07a985e2ded47b6c7d69fc93c1fe02977c8454
	https://git.kernel.org/stable/c/8bb29629a5e4090e1ef7199cb42db04a52802239
	https://git.kernel.org/stable/c/3d8a45f87010a802aa214bf39702ca9d99cbf3ba
	https://git.kernel.org/stable/c/55edbf5dbf60a8195c21e92124c4028939ae16b2
	https://git.kernel.org/stable/c/7ccf3b35274512b60ecb614e0637e76bd6f2d829
	https://git.kernel.org/stable/c/c802a6a4009f585111f903e810b3be9c6d0da329
	https://git.kernel.org/stable/c/211ed8f5e39e61f9e4d18edd64ce8005a67a1b2a
	https://git.kernel.org/stable/c/ec34cdf4f917cc6abd306cf091f8b8361fedac88
	https://git.kernel.org/stable/c/7fcbf789629cdb9fbf4e2172ce31136cfed11e5e
