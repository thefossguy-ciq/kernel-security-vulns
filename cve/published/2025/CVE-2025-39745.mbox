From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-39745: rcutorture: Fix rcutorture_one_extend_check() splat in RT kernels
Message-Id: <2025091140-CVE-2025-39745-ac0b@gregkh>
Content-Length: 3054
Lines: 69
X-Developer-Signature: v=1; a=openpgp-sha256; l=3124;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=084hctLYJoy8BoACtkgbgYBt4awwvEzCiQM8rprliHg=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBmH/kUohMyuX1puMnNL1pmXq0W3Wlst/Vv+aIulgINcw
 EFnL+fMjlgWBkEmBlkxRZYv23iO7q84pOhlaHsaZg4rE8gQBi5OAZiISDPDgq5zzx0rIpysNnia
 nUk5U13pYnb0OsP8QKt/kzrfzn3Nu0hFztGy9PK3iSIaAA==
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

rcutorture: Fix rcutorture_one_extend_check() splat in RT kernels

For built with CONFIG_PREEMPT_RT=y kernels, running rcutorture
tests resulted in the following splat:

[   68.797425] rcutorture_one_extend_check during change: Current 0x1  To add 0x1  To remove 0x0  preempt_count() 0x0
[   68.797533] WARNING: CPU: 2 PID: 512 at kernel/rcu/rcutorture.c:1993 rcutorture_one_extend_check+0x419/0x560 [rcutorture]
[   68.797601] Call Trace:
[   68.797602]  <TASK>
[   68.797619]  ? lockdep_softirqs_off+0xa5/0x160
[   68.797631]  rcutorture_one_extend+0x18e/0xcc0 [rcutorture 2466dbd2ff34dbaa36049cb323a80c3306ac997c]
[   68.797646]  ? local_clock+0x19/0x40
[   68.797659]  rcu_torture_one_read+0xf0/0x280 [rcutorture 2466dbd2ff34dbaa36049cb323a80c3306ac997c]
[   68.797678]  ? __pfx_rcu_torture_one_read+0x10/0x10 [rcutorture 2466dbd2ff34dbaa36049cb323a80c3306ac997c]
[   68.797804]  ? __pfx_rcu_torture_timer+0x10/0x10 [rcutorture 2466dbd2ff34dbaa36049cb323a80c3306ac997c]
[   68.797815] rcu-torture: rcu_torture_reader task started
[   68.797824] rcu-torture: Creating rcu_torture_reader task
[   68.797824]  rcu_torture_reader+0x238/0x580 [rcutorture 2466dbd2ff34dbaa36049cb323a80c3306ac997c]
[   68.797836]  ? kvm_sched_clock_read+0x15/0x30

Disable BH does not change the SOFTIRQ corresponding bits in
preempt_count() for RT kernels, this commit therefore use
softirq_count() to check the if BH is disabled.

The Linux kernel CVE team has assigned CVE-2025-39745 to this issue.


Affected and fixed versions
===========================

	Fixed in 6.15.11 with commit a85550267247cdf5e7499be00ea8e388ab014e50
	Fixed in 6.16.2 with commit 69c5ae0f441c2d72e8f48dc1e08464c172360c4c
	Fixed in 6.17-rc1 with commit 8d71351d88e478d3c4e945e3218e97ec677fd807

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-39745
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	kernel/rcu/rcutorture.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/a85550267247cdf5e7499be00ea8e388ab014e50
	https://git.kernel.org/stable/c/69c5ae0f441c2d72e8f48dc1e08464c172360c4c
	https://git.kernel.org/stable/c/8d71351d88e478d3c4e945e3218e97ec677fd807
