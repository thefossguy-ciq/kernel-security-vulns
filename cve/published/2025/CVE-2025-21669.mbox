From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-21669: vsock/virtio: discard packets if the transport changes
Message-Id: <2025013158-CVE-2025-21669-b52c@gregkh>
Content-Length: 2829
Lines: 60
X-Developer-Signature: v=1; a=openpgp-sha256; l=2890;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=GTUDe2Ca/W5pR/nimdHGkru59CkeecYgeG+1zDJkar0=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDOlzthQb7xb/VBrhax+cefDk0xMfcv4fvvTa5LZ22m2m7
 p+W9mutO2JZGASZGGTFFFm+bOM5ur/ikKKXoe1pmDmsTCBDGLg4BWAiM1cyzHer+RjzIH6qRNv0
 jGJP/l3XMo7NZGCYp8nQczGLRemW4OxHzLEOvYe6uVvKAA==
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

vsock/virtio: discard packets if the transport changes

If the socket has been de-assigned or assigned to another transport,
we must discard any packets received because they are not expected
and would cause issues when we access vsk->transport.

A possible scenario is described by Hyunwoo Kim in the attached link,
where after a first connect() interrupted by a signal, and a second
connect() failed, we can find `vsk->transport` at NULL, leading to a
NULL pointer dereference.

The Linux kernel CVE team has assigned CVE-2025-21669 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.5 with commit c0cfa2d8a788fcf45df5bf4070ab2474c88d543a and fixed in 5.15.177 with commit 6486915fa661584d70e8e7e4068c6c075c67dd6d
	Issue introduced in 5.5 with commit c0cfa2d8a788fcf45df5bf4070ab2474c88d543a and fixed in 6.1.127 with commit 88244163bc7e7b0ce9dd7bf4c8a563b41525c3ee
	Issue introduced in 5.5 with commit c0cfa2d8a788fcf45df5bf4070ab2474c88d543a and fixed in 6.6.74 with commit d88b249e14bd0ee1e46bbe4f456e22e01b8c68de
	Issue introduced in 5.5 with commit c0cfa2d8a788fcf45df5bf4070ab2474c88d543a and fixed in 6.12.11 with commit 677579b641af109613564460a4e3bdcb16850b61
	Issue introduced in 5.5 with commit c0cfa2d8a788fcf45df5bf4070ab2474c88d543a and fixed in 6.13 with commit 2cb7c756f605ec02ffe562fb26828e4bcc5fdfc1

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-21669
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	net/vmw_vsock/virtio_transport_common.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/6486915fa661584d70e8e7e4068c6c075c67dd6d
	https://git.kernel.org/stable/c/88244163bc7e7b0ce9dd7bf4c8a563b41525c3ee
	https://git.kernel.org/stable/c/d88b249e14bd0ee1e46bbe4f456e22e01b8c68de
	https://git.kernel.org/stable/c/677579b641af109613564460a4e3bdcb16850b61
	https://git.kernel.org/stable/c/2cb7c756f605ec02ffe562fb26828e4bcc5fdfc1
