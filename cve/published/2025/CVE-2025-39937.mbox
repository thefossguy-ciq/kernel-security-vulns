From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-39937: net: rfkill: gpio: Fix crash due to dereferencering uninitialized pointer

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

net: rfkill: gpio: Fix crash due to dereferencering uninitialized pointer

Since commit 7d5e9737efda ("net: rfkill: gpio: get the name and type from
device property") rfkill_find_type() gets called with the possibly
uninitialized "const char *type_name;" local variable.

On x86 systems when rfkill-gpio binds to a "BCM4752" or "LNV4752"
acpi_device, the rfkill->type is set based on the ACPI acpi_device_id:

        rfkill->type = (unsigned)id->driver_data;

and there is no "type" property so device_property_read_string() will fail
and leave type_name uninitialized, leading to a potential crash.

rfkill_find_type() does accept a NULL pointer, fix the potential crash
by initializing type_name to NULL.

Note likely sofar this has not been caught because:

1. Not many x86 machines actually have a "BCM4752"/"LNV4752" acpi_device
2. The stack happened to contain NULL where type_name is stored

The Linux kernel CVE team has assigned CVE-2025-39937 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 4.6 with commit 7d5e9737efda16535e5b54bd627ef4881d11d31f and fixed in 5.4.300 with commit 184f608a68f96794e8fe58cd5535014d53622cde
	Issue introduced in 4.6 with commit 7d5e9737efda16535e5b54bd627ef4881d11d31f and fixed in 5.10.245 with commit 8793e7a8e1b60131a825457174ed6398111daeb7
	Issue introduced in 4.6 with commit 7d5e9737efda16535e5b54bd627ef4881d11d31f and fixed in 5.15.194 with commit ada2282259243387e6b6e89239aeb4897e62f051
	Issue introduced in 4.6 with commit 7d5e9737efda16535e5b54bd627ef4881d11d31f and fixed in 6.1.154 with commit 47ade5f9d70b23a119ec20b1c6504864b2543a79
	Issue introduced in 4.6 with commit 7d5e9737efda16535e5b54bd627ef4881d11d31f and fixed in 6.6.108 with commit 689aee35ce671aab752f159e5c8e66d7685e6887
	Issue introduced in 4.6 with commit 7d5e9737efda16535e5b54bd627ef4881d11d31f and fixed in 6.12.49 with commit 21ba85d9d508422ca9e6698463ff9357c928c22d
	Issue introduced in 4.6 with commit 7d5e9737efda16535e5b54bd627ef4881d11d31f and fixed in 6.16.9 with commit 21a39b958b4bcf44f7674bfbbe1bbb8cad0d842d
	Issue introduced in 4.6 with commit 7d5e9737efda16535e5b54bd627ef4881d11d31f and fixed in 6.17 with commit b6f56a44e4c1014b08859dcf04ed246500e310e5

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-39937
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	net/rfkill/rfkill-gpio.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/184f608a68f96794e8fe58cd5535014d53622cde
	https://git.kernel.org/stable/c/8793e7a8e1b60131a825457174ed6398111daeb7
	https://git.kernel.org/stable/c/ada2282259243387e6b6e89239aeb4897e62f051
	https://git.kernel.org/stable/c/47ade5f9d70b23a119ec20b1c6504864b2543a79
	https://git.kernel.org/stable/c/689aee35ce671aab752f159e5c8e66d7685e6887
	https://git.kernel.org/stable/c/21ba85d9d508422ca9e6698463ff9357c928c22d
	https://git.kernel.org/stable/c/21a39b958b4bcf44f7674bfbbe1bbb8cad0d842d
	https://git.kernel.org/stable/c/b6f56a44e4c1014b08859dcf04ed246500e310e5
