From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-38433: riscv: fix runtime constant support for nommu kernels
Message-Id: <2025072511-CVE-2025-38433-6d14@gregkh>
Content-Length: 2820
Lines: 63
X-Developer-Signature: v=1; a=openpgp-sha256; l=2884;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=/cCXrFl46gbIB7PfFEwK2tpSiwW7ttaf/Nlh9uygl0o=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBnNU7OPsHJ3uppdNs5cMbVqwSet62+UjXf8uXo9XjLjw
 WS7EMaejlgWBkEmBlkxRZYv23iO7q84pOhlaHsaZg4rE8gQBi5OAZgIw2WGeRbKb86uecTy4Weh
 6dXcm/dyT3KcuMqwYOaHTE6z1UJT1Lun7TDdsDC2eM/mYgA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

riscv: fix runtime constant support for nommu kernels

the `__runtime_fixup_32` function does not handle the case where `val` is
zero correctly (as might occur when patching a nommu kernel and referring
to a physical address below the 4GiB boundary whose upper 32 bits are all
zero) because nothing in the existing logic prevents the code from taking
the `else` branch of both nop-checks and emitting two `nop` instructions.

This leaves random garbage in the register that is supposed to receive the
upper 32 bits of the pointer instead of zero that when combined with the
value for the lower 32 bits yields an invalid pointer and causes a kernel
panic when that pointer is eventually accessed.

The author clearly considered the fact that if the `lui` is converted into
a `nop` that the second instruction needs to be adjusted to become an `li`
instead of an `addi`, hence introducing the `addi_insn_mask` variable, but
didn't follow that logic through fully to the case where the `else` branch
executes. To fix it just adjust the logic to ensure that the second `else`
branch is not taken if the first instruction will be patched to a `nop`.

The Linux kernel CVE team has assigned CVE-2025-38433 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 6.15 with commit a44fb5722199de8338d991db5ad3d509192179bb and fixed in 6.15.5 with commit 0a24b00dcde83934a3cc13e4c6b775522903496b
	Issue introduced in 6.15 with commit a44fb5722199de8338d991db5ad3d509192179bb and fixed in 6.16-rc4 with commit 8d90d9872edae7e78c3a12b98e239bfaa66f3639

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-38433
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	arch/riscv/include/asm/runtime-const.h


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/0a24b00dcde83934a3cc13e4c6b775522903496b
	https://git.kernel.org/stable/c/8d90d9872edae7e78c3a12b98e239bfaa66f3639
