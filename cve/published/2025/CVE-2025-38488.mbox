From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-38488: smb: client: fix use-after-free in crypt_message when using async crypto

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

smb: client: fix use-after-free in crypt_message when using async crypto

The CVE-2024-50047 fix removed asynchronous crypto handling from
crypt_message(), assuming all crypto operations are synchronous.
However, when hardware crypto accelerators are used, this can cause
use-after-free crashes:

  crypt_message()
    // Allocate the creq buffer containing the req
    creq = smb2_get_aead_req(..., &req);

    // Async encryption returns -EINPROGRESS immediately
    rc = enc ? crypto_aead_encrypt(req) : crypto_aead_decrypt(req);

    // Free creq while async operation is still in progress
    kvfree_sensitive(creq, ...);

Hardware crypto modules often implement async AEAD operations for
performance. When crypto_aead_encrypt/decrypt() returns -EINPROGRESS,
the operation completes asynchronously. Without crypto_wait_req(),
the function immediately frees the request buffer, leading to crashes
when the driver later accesses the freed memory.

This results in a use-after-free condition when the hardware crypto
driver later accesses the freed request structure, leading to kernel
crashes with NULL pointer dereferences.

The issue occurs because crypto_alloc_aead() with mask=0 doesn't
guarantee synchronous operation. Even without CRYPTO_ALG_ASYNC in
the mask, async implementations can be selected.

Fix by restoring the async crypto handling:
- DECLARE_CRYPTO_WAIT(wait) for completion tracking
- aead_request_set_callback() for async completion notification
- crypto_wait_req() to wait for operation completion

This ensures the request buffer isn't freed until the crypto operation
completes, whether synchronous or asynchronous, while preserving the
CVE-2024-50047 fix.

The Linux kernel CVE team has assigned CVE-2025-38488 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 6.1.128 with commit bce966530fd5542bbb422cb45ecb775f7a1a6bc3 and fixed in 6.1.147 with commit 9a1d3e8d40f151c2d5a5f40c410e6e433f62f438
	Issue introduced in 6.6.57 with commit 0809fb86ad13b29e1d6d491364fc7ea4fb545995 and fixed in 6.6.100 with commit 15a0a5de49507062bc3be4014a403d8cea5533de
	Issue introduced in 6.12 with commit b0abcd65ec545701b8793e12bc27dc98042b151a and fixed in 6.12.40 with commit 2a76bc2b24ed889a689fb1c9015307bf16aafb5b
	Issue introduced in 6.12 with commit b0abcd65ec545701b8793e12bc27dc98042b151a and fixed in 6.15.8 with commit 8ac90f6824fc44d2e55a82503ddfc95defb19ae0
	Issue introduced in 6.12 with commit b0abcd65ec545701b8793e12bc27dc98042b151a and fixed in 6.16 with commit b220bed63330c0e1733dc06ea8e75d5b9962b6b6
	Issue introduced in 5.10.237 with commit 8f14a476abba13144df5434871a7225fd29af633
	Issue introduced in 5.15.181 with commit ef51c0d544b1518b35364480317ab6d3468f205d
	Issue introduced in 6.11.4 with commit 538c26d9bf70c90edc460d18c81008a4e555925a

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-38488
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	fs/smb/client/smb2ops.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/9a1d3e8d40f151c2d5a5f40c410e6e433f62f438
	https://git.kernel.org/stable/c/15a0a5de49507062bc3be4014a403d8cea5533de
	https://git.kernel.org/stable/c/2a76bc2b24ed889a689fb1c9015307bf16aafb5b
	https://git.kernel.org/stable/c/8ac90f6824fc44d2e55a82503ddfc95defb19ae0
	https://git.kernel.org/stable/c/b220bed63330c0e1733dc06ea8e75d5b9962b6b6
