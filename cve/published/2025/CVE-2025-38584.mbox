From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-38584: padata: Fix pd UAF once and for all
Message-Id: <2025081914-CVE-2025-38584-2648@gregkh>
Content-Length: 2727
Lines: 68
X-Developer-Signature: v=1; a=openpgp-sha256; l=2796;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=hSgnEg7YD71/vIUszNuiJHLSGx3kPddHBcMg1MpegMs=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBlLNl67enGnrvqjnT3djEw2bYsiPxaGWMblbUhf2jBxg
 rnFVL7ujlgWBkEmBlkxRZYv23iO7q84pOhlaHsaZg4rE8gQBi5OAZjImlkM890+qgWWrr09Mzz+
 /rcmj39rpV53v2ZY0FuvMZWNa1aFzzM97pM1T95cqZ6tDwA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

padata: Fix pd UAF once and for all

There is a race condition/UAF in padata_reorder that goes back
to the initial commit.  A reference count is taken at the start
of the process in padata_do_parallel, and released at the end in
padata_serial_worker.

This reference count is (and only is) required for padata_replace
to function correctly.  If padata_replace is never called then
there is no issue.

In the function padata_reorder which serves as the core of padata,
as soon as padata is added to queue->serial.list, and the associated
spin lock released, that padata may be processed and the reference
count on pd would go away.

Fix this by getting the next padata before the squeue->serial lock
is released.

In order to make this possible, simplify padata_reorder by only
calling it once the next padata arrives.

The Linux kernel CVE team has assigned CVE-2025-38584 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 2.6.34 with commit 16295bec6398a3eedc9377e1af6ff4c71b98c300 and fixed in 6.15.10 with commit dbe3e911a59bda6de96e7cae387ff882c2c177fa
	Issue introduced in 2.6.34 with commit 16295bec6398a3eedc9377e1af6ff4c71b98c300 and fixed in 6.16.1 with commit cdf79bd2e1ecb3cc75631c73d8f4149be6019a52
	Issue introduced in 2.6.34 with commit 16295bec6398a3eedc9377e1af6ff4c71b98c300 and fixed in 6.17-rc1 with commit 71203f68c7749609d7fc8ae6ad054bdedeb24f91

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-38584
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	include/linux/padata.h
	kernel/padata.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/dbe3e911a59bda6de96e7cae387ff882c2c177fa
	https://git.kernel.org/stable/c/cdf79bd2e1ecb3cc75631c73d8f4149be6019a52
	https://git.kernel.org/stable/c/71203f68c7749609d7fc8ae6ad054bdedeb24f91
