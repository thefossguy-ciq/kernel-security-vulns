From bippy-7c5fe7eed585 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-21920: vlan: enforce underlying device type

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

vlan: enforce underlying device type

Currently, VLAN devices can be created on top of non-ethernet devices.

Besides the fact that it doesn't make much sense, this also causes a
bug which leaks the address of a kernel function to usermode.

When creating a VLAN device, we initialize GARP (garp_init_applicant)
and MRP (mrp_init_applicant) for the underlying device.

As part of the initialization process, we add the multicast address of
each applicant to the underlying device, by calling dev_mc_add.

__dev_mc_add uses dev->addr_len to determine the length of the new
multicast address.

This causes an out-of-bounds read if dev->addr_len is greater than 6,
since the multicast addresses provided by GARP and MRP are only 6
bytes long.

This behaviour can be reproduced using the following commands:

ip tunnel add gretest mode ip6gre local ::1 remote ::2 dev lo
ip l set up dev gretest
ip link add link gretest name vlantest type vlan id 100

Then, the following command will display the address of garp_pdu_rcv:

ip maddr show | grep 01:80:c2:00:00:21

Fix the bug by enforcing the type of the underlying device during VLAN
device initialization.

The Linux kernel CVE team has assigned CVE-2025-21920 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 2.6.35 with commit 22bedad3ce112d5ca1eaf043d4990fa2ed698c87 and fixed in 5.4.291 with commit 7f1564b2b2072b7aa1ac75350e9560a07c7a44fd
	Issue introduced in 2.6.35 with commit 22bedad3ce112d5ca1eaf043d4990fa2ed698c87 and fixed in 5.10.235 with commit fa40ebef69234e39ec2d26930d045f2fb9a8cb2b
	Issue introduced in 2.6.35 with commit 22bedad3ce112d5ca1eaf043d4990fa2ed698c87 and fixed in 5.15.179 with commit 0fb7aa04c19eac4417f360a9f7611a60637bdacc
	Issue introduced in 2.6.35 with commit 22bedad3ce112d5ca1eaf043d4990fa2ed698c87 and fixed in 6.1.131 with commit 5a515d13e15536e82c5c7c83eb6cf5bc4827fee5
	Issue introduced in 2.6.35 with commit 22bedad3ce112d5ca1eaf043d4990fa2ed698c87 and fixed in 6.6.83 with commit 3561442599804905c3defca241787cd4546e99a7
	Issue introduced in 2.6.35 with commit 22bedad3ce112d5ca1eaf043d4990fa2ed698c87 and fixed in 6.12.19 with commit 30e8aee77899173a82ae5ed89f536c096f20aaeb
	Issue introduced in 2.6.35 with commit 22bedad3ce112d5ca1eaf043d4990fa2ed698c87 and fixed in 6.13.7 with commit b6c72479748b7ea09f53ed64b223cee6463dc278
	Issue introduced in 2.6.35 with commit 22bedad3ce112d5ca1eaf043d4990fa2ed698c87 and fixed in 6.14 with commit b33a534610067ade2bdaf2052900aaad99701353

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-21920
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	net/8021q/vlan.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/7f1564b2b2072b7aa1ac75350e9560a07c7a44fd
	https://git.kernel.org/stable/c/fa40ebef69234e39ec2d26930d045f2fb9a8cb2b
	https://git.kernel.org/stable/c/0fb7aa04c19eac4417f360a9f7611a60637bdacc
	https://git.kernel.org/stable/c/5a515d13e15536e82c5c7c83eb6cf5bc4827fee5
	https://git.kernel.org/stable/c/3561442599804905c3defca241787cd4546e99a7
	https://git.kernel.org/stable/c/30e8aee77899173a82ae5ed89f536c096f20aaeb
	https://git.kernel.org/stable/c/b6c72479748b7ea09f53ed64b223cee6463dc278
	https://git.kernel.org/stable/c/b33a534610067ade2bdaf2052900aaad99701353
