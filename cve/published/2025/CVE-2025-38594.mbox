From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-38594: iommu/vt-d: Fix UAF on sva unbind with pending IOPFs
Message-Id: <2025081918-CVE-2025-38594-d686@gregkh>
Content-Length: 2989
Lines: 76
X-Developer-Signature: v=1; a=openpgp-sha256; l=3066;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=wPvYfLLG3BskTxMo2qOQFebYXPdI6e34e6JWGFMwyhQ=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBlLNt4q+vJV5P+e/ZqqBktNuV9pMky++vd29pUJx77Pl
 +M3P1bp2RHLwiDIxCArpsjyZRvP0f0VhxS9DG1Pw8xhZQIZwsDFKQATYbvPsKA9eIm4adV2P5sj
 G/9MZ1QqeW18+RHD/Pygq4qrhTTk63bKT3jB3F5TdIZfAAA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

iommu/vt-d: Fix UAF on sva unbind with pending IOPFs

Commit 17fce9d2336d ("iommu/vt-d: Put iopf enablement in domain attach
path") disables IOPF on device by removing the device from its IOMMU's
IOPF queue when the last IOPF-capable domain is detached from the device.
Unfortunately, it did this in a wrong place where there are still pending
IOPFs. As a result, a use-after-free error is potentially triggered and
eventually a kernel panic with a kernel trace similar to the following:

 refcount_t: underflow; use-after-free.
 WARNING: CPU: 3 PID: 313 at lib/refcount.c:28 refcount_warn_saturate+0xd8/0xe0
 Workqueue: iopf_queue/dmar0-iopfq iommu_sva_handle_iopf
 Call Trace:
   <TASK>
   iopf_free_group+0xe/0x20
   process_one_work+0x197/0x3d0
   worker_thread+0x23a/0x350
   ? rescuer_thread+0x4a0/0x4a0
   kthread+0xf8/0x230
   ? finish_task_switch.isra.0+0x81/0x260
   ? kthreads_online_cpu+0x110/0x110
   ? kthreads_online_cpu+0x110/0x110
   ret_from_fork+0x13b/0x170
   ? kthreads_online_cpu+0x110/0x110
   ret_from_fork_asm+0x11/0x20
   </TASK>
  ---[ end trace 0000000000000000 ]---

The intel_pasid_tear_down_entry() function is responsible for blocking
hardware from generating new page faults and flushing all in-flight
ones. Therefore, moving iopf_for_domain_remove() after this function
should resolve this.

The Linux kernel CVE team has assigned CVE-2025-38594 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 6.16 with commit 17fce9d2336d952b95474248303e5e7d9777f2e0 and fixed in 6.16.1 with commit c68332b7ee893292bba6e87d31ef2080c066c65d
	Issue introduced in 6.16 with commit 17fce9d2336d952b95474248303e5e7d9777f2e0 and fixed in 6.17-rc1 with commit f0b9d31c6edd50a6207489cd1bd4ddac814b9cd2

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-38594
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/iommu/intel/iommu.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/c68332b7ee893292bba6e87d31ef2080c066c65d
	https://git.kernel.org/stable/c/f0b9d31c6edd50a6207489cd1bd4ddac814b9cd2
