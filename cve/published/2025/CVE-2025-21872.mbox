From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-21872: efi: Don't map the entire mokvar table to determine its size
Message-Id: <2025032709-CVE-2025-21872-574e@gregkh>
Content-Length: 3401
Lines: 87
X-Developer-Signature: v=1; a=openpgp-sha256; l=3489;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=E/cHME5do6/t5Lud0oFssLffWiF0UJ155xYJOPSLRd8=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDOlP0xv3FuTzqr7oF7GqPcPpcZxJdfrFPJMHuUoaDb89O
 jK+5dV1xLIwCDIxyIopsnzZxnN0f8UhRS9D29Mwc1iZQIYwcHEKwEROfGCYK1LMr6mTHKM2K+Yi
 U/Odyp/2BpfnMcx3VnMTEGKUebWX7eaThK0q1vvKrP8CAA==
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

efi: Don't map the entire mokvar table to determine its size

Currently, when validating the mokvar table, we (re)map the entire table
on each iteration of the loop, adding space as we discover new entries.
If the table grows over a certain size, this fails due to limitations of
early_memmap(), and we get a failure and traceback:

  ------------[ cut here ]------------
  WARNING: CPU: 0 PID: 0 at mm/early_ioremap.c:139 __early_ioremap+0xef/0x220
  ...
  Call Trace:
   <TASK>
   ? __early_ioremap+0xef/0x220
   ? __warn.cold+0x93/0xfa
   ? __early_ioremap+0xef/0x220
   ? report_bug+0xff/0x140
   ? early_fixup_exception+0x5d/0xb0
   ? early_idt_handler_common+0x2f/0x3a
   ? __early_ioremap+0xef/0x220
   ? efi_mokvar_table_init+0xce/0x1d0
   ? setup_arch+0x864/0xc10
   ? start_kernel+0x6b/0xa10
   ? x86_64_start_reservations+0x24/0x30
   ? x86_64_start_kernel+0xed/0xf0
   ? common_startup_64+0x13e/0x141
   </TASK>
  ---[ end trace 0000000000000000 ]---
  mokvar: Failed to map EFI MOKvar config table pa=0x7c4c3000, size=265187.

Mapping the entire structure isn't actually necessary, as we don't ever
need more than one entry header mapped at once.

Changes efi_mokvar_table_init() to only map each entry header, not the
entire table, when determining the table size.  Since we're not mapping
any data past the variable name, it also changes the code to enforce
that each variable name is NUL terminated, rather than attempting to
verify it in place.

The Linux kernel CVE team has assigned CVE-2025-21872 to this issue.


Affected and fixed versions
===========================

	Fixed in 5.10.235 with commit 46c0454ffb78ce9d3355a3cccac86383ea8ddd55
	Fixed in 6.6.83 with commit ea3f0b362dfe4ef885ef812bfaf4088176422c91
	Fixed in 6.12.18 with commit 65f4aebb8127708ba668dd938e83b8558abfc5cd
	Fixed in 6.13.6 with commit 97bd560b6cc4c26386a53b4881bf03e96f9ba03a
	Fixed in 6.14 with commit 2b90e7ace79774a3540ce569e000388f8d22c9e0

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-21872
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/firmware/efi/mokvar-table.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/46c0454ffb78ce9d3355a3cccac86383ea8ddd55
	https://git.kernel.org/stable/c/ea3f0b362dfe4ef885ef812bfaf4088176422c91
	https://git.kernel.org/stable/c/65f4aebb8127708ba668dd938e83b8558abfc5cd
	https://git.kernel.org/stable/c/97bd560b6cc4c26386a53b4881bf03e96f9ba03a
	https://git.kernel.org/stable/c/2b90e7ace79774a3540ce569e000388f8d22c9e0
