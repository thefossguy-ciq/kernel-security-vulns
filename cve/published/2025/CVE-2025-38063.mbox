From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-38063: dm: fix unconditional IO throttle caused by REQ_PREFLUSH
Message-Id: <2025061835-CVE-2025-38063-e0a8@gregkh>
Content-Length: 3924
Lines: 87
X-Developer-Signature: v=1; a=openpgp-sha256; l=4012;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=yXCd9KeeMGNVBQ92tBsOhSCXdLZ4AL+hpKCy1PJyqC0=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBlB7R/UNXdPWya52epZ49reJU06jsXLa+QY9Rfbt525y
 Wt1dilbRywLgyATg6yYIsuXbTxH91ccUvQytD0NM4eVCWQIAxenAExkyySGBb2Tt1bYGFQ77rpt
 XXb+9EveDWpfHBkWTN74078+/vsfW/0GdZOOLQ9u+JTxAgA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

dm: fix unconditional IO throttle caused by REQ_PREFLUSH

When a bio with REQ_PREFLUSH is submitted to dm, __send_empty_flush()
generates a flush_bio with REQ_OP_WRITE | REQ_PREFLUSH | REQ_SYNC,
which causes the flush_bio to be throttled by wbt_wait().

An example from v5.4, similar problem also exists in upstream:

    crash> bt 2091206
    PID: 2091206  TASK: ffff2050df92a300  CPU: 109  COMMAND: "kworker/u260:0"
     #0 [ffff800084a2f7f0] __switch_to at ffff80004008aeb8
     #1 [ffff800084a2f820] __schedule at ffff800040bfa0c4
     #2 [ffff800084a2f880] schedule at ffff800040bfa4b4
     #3 [ffff800084a2f8a0] io_schedule at ffff800040bfa9c4
     #4 [ffff800084a2f8c0] rq_qos_wait at ffff8000405925bc
     #5 [ffff800084a2f940] wbt_wait at ffff8000405bb3a0
     #6 [ffff800084a2f9a0] __rq_qos_throttle at ffff800040592254
     #7 [ffff800084a2f9c0] blk_mq_make_request at ffff80004057cf38
     #8 [ffff800084a2fa60] generic_make_request at ffff800040570138
     #9 [ffff800084a2fae0] submit_bio at ffff8000405703b4
    #10 [ffff800084a2fb50] xlog_write_iclog at ffff800001280834 [xfs]
    #11 [ffff800084a2fbb0] xlog_sync at ffff800001280c3c [xfs]
    #12 [ffff800084a2fbf0] xlog_state_release_iclog at ffff800001280df4 [xfs]
    #13 [ffff800084a2fc10] xlog_write at ffff80000128203c [xfs]
    #14 [ffff800084a2fcd0] xlog_cil_push at ffff8000012846dc [xfs]
    #15 [ffff800084a2fda0] xlog_cil_push_work at ffff800001284a2c [xfs]
    #16 [ffff800084a2fdb0] process_one_work at ffff800040111d08
    #17 [ffff800084a2fe00] worker_thread at ffff8000401121cc
    #18 [ffff800084a2fe70] kthread at ffff800040118de4

After commit 2def2845cc33 ("xfs: don't allow log IO to be throttled"),
the metadata submitted by xlog_write_iclog() should not be throttled.
But due to the existence of the dm layer, throttling flush_bio indirectly
causes the metadata bio to be throttled.

Fix this by conditionally adding REQ_IDLE to flush_bio.bi_opf, which makes
wbt_should_throttle() return false to avoid wbt_wait().

The Linux kernel CVE team has assigned CVE-2025-38063 to this issue.


Affected and fixed versions
===========================

	Fixed in 6.1.141 with commit 95d08924335f3b6f4ea0b92ebfe4fe0731c502d9
	Fixed in 6.6.93 with commit 52aa28f7b1708d76e315d78b5ed397932a1a97c3
	Fixed in 6.12.31 with commit b55a97d1bd4083729a60d19beffe85d4c96680de
	Fixed in 6.14.9 with commit 2858cda9a8d95e6deee7e3b0a26adde696a9a4f5
	Fixed in 6.15 with commit 88f7f56d16f568f19e1a695af34a7f4a6ce537a6

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-38063
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/md/dm.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/95d08924335f3b6f4ea0b92ebfe4fe0731c502d9
	https://git.kernel.org/stable/c/52aa28f7b1708d76e315d78b5ed397932a1a97c3
	https://git.kernel.org/stable/c/b55a97d1bd4083729a60d19beffe85d4c96680de
	https://git.kernel.org/stable/c/2858cda9a8d95e6deee7e3b0a26adde696a9a4f5
	https://git.kernel.org/stable/c/88f7f56d16f568f19e1a695af34a7f4a6ce537a6
