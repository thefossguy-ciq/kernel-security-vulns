From bippy-7c5fe7eed585 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-22010: RDMA/hns: Fix soft lockup during bt pages loop
Message-Id: <2025040843-CVE-2025-22010-82d7@gregkh>
Content-Length: 3651
Lines: 79
X-Developer-Signature: v=1; a=openpgp-sha256; l=3731;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=WXC62TsDMwE4+anx16B1rlkvdb31GDdnW8sf6a567Hc=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDOlfbmfzbmpbkdTdHVXzfW7B6fgpLe8UH/zPsDn+QfX1T
 p9Y8b0zO2JZGASZGGTFFFm+bOM5ur/ikKKXoe1pmDmsTCBDGLg4BWAiElkMC065+zUJPS8IXBdl
 4bLC9DfzAvuMpwwLZl4LOaN57tc78Q/8Vg8/bN/P/jGOBQA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

RDMA/hns: Fix soft lockup during bt pages loop

Driver runs a for-loop when allocating bt pages and mapping them with
buffer pages. When a large buffer (e.g. MR over 100GB) is being allocated,
it may require a considerable loop count. This will lead to soft lockup:

        watchdog: BUG: soft lockup - CPU#27 stuck for 22s!
        ...
        Call trace:
         hem_list_alloc_mid_bt+0x124/0x394 [hns_roce_hw_v2]
         hns_roce_hem_list_request+0xf8/0x160 [hns_roce_hw_v2]
         hns_roce_mtr_create+0x2e4/0x360 [hns_roce_hw_v2]
         alloc_mr_pbl+0xd4/0x17c [hns_roce_hw_v2]
         hns_roce_reg_user_mr+0xf8/0x190 [hns_roce_hw_v2]
         ib_uverbs_reg_mr+0x118/0x290

        watchdog: BUG: soft lockup - CPU#35 stuck for 23s!
        ...
        Call trace:
         hns_roce_hem_list_find_mtt+0x7c/0xb0 [hns_roce_hw_v2]
         mtr_map_bufs+0xc4/0x204 [hns_roce_hw_v2]
         hns_roce_mtr_create+0x31c/0x3c4 [hns_roce_hw_v2]
         alloc_mr_pbl+0xb0/0x160 [hns_roce_hw_v2]
         hns_roce_reg_user_mr+0x108/0x1c0 [hns_roce_hw_v2]
         ib_uverbs_reg_mr+0x120/0x2bc

Add a cond_resched() to fix soft lockup during these loops. In order not
to affect the allocation performance of normal-size buffer, set the loop
count of a 100GB MR as the threshold to call cond_resched().

The Linux kernel CVE team has assigned CVE-2025-22010 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.3 with commit 38389eaa4db192648916464b60f6086d6bbaa6de and fixed in 6.1.132 with commit 4104b0023ff66b5df900d23dbf38310893deca79
	Issue introduced in 5.3 with commit 38389eaa4db192648916464b60f6086d6bbaa6de and fixed in 6.6.85 with commit 975355faba56c0751292ed15a90c3e2c7dc0aad6
	Issue introduced in 5.3 with commit 38389eaa4db192648916464b60f6086d6bbaa6de and fixed in 6.12.21 with commit 13a52f6c9ff99f7d88f81da535cb4e85eade662b
	Issue introduced in 5.3 with commit 38389eaa4db192648916464b60f6086d6bbaa6de and fixed in 6.13.9 with commit 9ab20fec7a1ce3057ad86afd27bfd08420b7cd11
	Issue introduced in 5.3 with commit 38389eaa4db192648916464b60f6086d6bbaa6de and fixed in 6.14 with commit 25655580136de59ec89f09089dd28008ea440fc9

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-22010
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/infiniband/hw/hns/hns_roce_hem.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/4104b0023ff66b5df900d23dbf38310893deca79
	https://git.kernel.org/stable/c/975355faba56c0751292ed15a90c3e2c7dc0aad6
	https://git.kernel.org/stable/c/13a52f6c9ff99f7d88f81da535cb4e85eade662b
	https://git.kernel.org/stable/c/9ab20fec7a1ce3057ad86afd27bfd08420b7cd11
	https://git.kernel.org/stable/c/25655580136de59ec89f09089dd28008ea440fc9
