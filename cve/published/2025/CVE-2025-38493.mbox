From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-38493: tracing/osnoise: Fix crash in timerlat_dump_stack()
Message-Id: <2025072817-CVE-2025-38493-32f7@gregkh>
Content-Length: 3549
Lines: 86
X-Developer-Signature: v=1; a=openpgp-sha256; l=3636;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=Fo7ucy/sKb9kkRbn0TR0PU902nPAIPZqKOQy7qk59OI=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBntsZn88t6HpL81G5u81RU8Vbjvpv3S3LCpbB//T3HYH
 /q4ac6mjlgWBkEmBlkxRZYv23iO7q84pOhlaHsaZg4rE8gQBi5OAZiIpijD/GCXi+HG6w93urUX
 X7XbrBx07HzFY4Z5RhEzvka3zX/0ktWgLHPCs1tft7k3AQA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

tracing/osnoise: Fix crash in timerlat_dump_stack()

We have observed kernel panics when using timerlat with stack saving,
with the following dmesg output:

memcpy: detected buffer overflow: 88 byte write of buffer size 0
WARNING: CPU: 2 PID: 8153 at lib/string_helpers.c:1032 __fortify_report+0x55/0xa0
CPU: 2 UID: 0 PID: 8153 Comm: timerlatu/2 Kdump: loaded Not tainted 6.15.3-200.fc42.x86_64 #1 PREEMPT(lazy)
Call Trace:
 <TASK>
 ? trace_buffer_lock_reserve+0x2a/0x60
 __fortify_panic+0xd/0xf
 __timerlat_dump_stack.cold+0xd/0xd
 timerlat_dump_stack.part.0+0x47/0x80
 timerlat_fd_read+0x36d/0x390
 vfs_read+0xe2/0x390
 ? syscall_exit_to_user_mode+0x1d5/0x210
 ksys_read+0x73/0xe0
 do_syscall_64+0x7b/0x160
 ? exc_page_fault+0x7e/0x1a0
 entry_SYSCALL_64_after_hwframe+0x76/0x7e

__timerlat_dump_stack() constructs the ftrace stack entry like this:

struct stack_entry *entry;
...
memcpy(&entry->caller, fstack->calls, size);
entry->size = fstack->nr_entries;

Since commit e7186af7fb26 ("tracing: Add back FORTIFY_SOURCE logic to
kernel_stack event structure"), struct stack_entry marks its caller
field with __counted_by(size). At the time of the memcpy, entry->size
contains garbage from the ringbuffer, which under some circumstances is
zero, triggering a kernel panic by buffer overflow.

Populate the size field before the memcpy so that the out-of-bounds
check knows the correct size. This is analogous to
__ftrace_trace_stack().

The Linux kernel CVE team has assigned CVE-2025-38493 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 6.6 with commit e7186af7fb2609584a8bfb3da3c6ae09da5a5224 and fixed in 6.6.100 with commit 823d798900481875ba6c68217af028c5ffd2976b
	Issue introduced in 6.6 with commit e7186af7fb2609584a8bfb3da3c6ae09da5a5224 and fixed in 6.12.40 with commit 7bb9ea515cda027c9e717e27fefcf34f092e7c41
	Issue introduced in 6.6 with commit e7186af7fb2609584a8bfb3da3c6ae09da5a5224 and fixed in 6.15.8 with commit fbf90f5aa7ac7cddc69148a71d58f12c8709ce2b
	Issue introduced in 6.6 with commit e7186af7fb2609584a8bfb3da3c6ae09da5a5224 and fixed in 6.16 with commit 85a3bce695b361d85fc528e6fbb33e4c8089c806

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-38493
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	kernel/trace/trace_osnoise.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/823d798900481875ba6c68217af028c5ffd2976b
	https://git.kernel.org/stable/c/7bb9ea515cda027c9e717e27fefcf34f092e7c41
	https://git.kernel.org/stable/c/fbf90f5aa7ac7cddc69148a71d58f12c8709ce2b
	https://git.kernel.org/stable/c/85a3bce695b361d85fc528e6fbb33e4c8089c806
