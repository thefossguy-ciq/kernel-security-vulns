From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-38585: staging: media: atomisp: Fix stack buffer overflow in gmin_get_var_int()
Message-Id: <2025081915-CVE-2025-38585-e14e@gregkh>
Content-Length: 3708
Lines: 80
X-Developer-Signature: v=1; a=openpgp-sha256; l=3789;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=lFT890zpc6rmoHeQS9xMDAS5DShDeKaO/3g4qzGGoCI=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBlLNl5fX9qb2/SgMf9PrekF15r7ttxMDK8yzSfKTZr1n
 OdB8hW3jlgWBkEmBlkxRZYv23iO7q84pOhlaHsaZg4rE8gQBi5OAZjI/D0Mc/jVFSRiHghwJjko
 xMheXiJ0TeVjNsM8feXb//MKMpsjQuYtl9m5Ytex+9auAA==
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

staging: media: atomisp: Fix stack buffer overflow in gmin_get_var_int()

When gmin_get_config_var() calls efi.get_variable() and the EFI variable
is larger than the expected buffer size, two behaviors combine to create
a stack buffer overflow:

1. gmin_get_config_var() does not return the proper error code when
   efi.get_variable() fails. It returns the stale 'ret' value from
   earlier operations instead of indicating the EFI failure.

2. When efi.get_variable() returns EFI_BUFFER_TOO_SMALL, it updates
   *out_len to the required buffer size but writes no data to the output
   buffer. However, due to bug #1, gmin_get_var_int() believes the call
   succeeded.

The caller gmin_get_var_int() then performs:
- Allocates val[CFG_VAR_NAME_MAX + 1] (65 bytes) on stack
- Calls gmin_get_config_var(dev, is_gmin, var, val, &len) with len=64
- If EFI variable is >64 bytes, efi.get_variable() sets len=required_size
- Due to bug #1, thinks call succeeded with len=required_size
- Executes val[len] = 0, writing past end of 65-byte stack buffer

This creates a stack buffer overflow when EFI variables are larger than
64 bytes. Since EFI variables can be controlled by firmware or system
configuration, this could potentially be exploited for code execution.

Fix the bug by returning proper error codes from gmin_get_config_var()
based on EFI status instead of stale 'ret' value.

The gmin_get_var_int() function is called during device initialization
for camera sensor configuration on Intel Bay Trail and Cherry Trail
platforms using the atomisp camera stack.

The Linux kernel CVE team has assigned CVE-2025-38585 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 6.0 with commit 38d4f74bc14847491d07bd745dc4a2c274f4987d and fixed in 6.12.42 with commit 3d672fe065aa00f4d66f42e3c9720f69a3ed43e7
	Issue introduced in 6.0 with commit 38d4f74bc14847491d07bd745dc4a2c274f4987d and fixed in 6.15.10 with commit e6d3453a002e89537e6136f6c774659b297a549b
	Issue introduced in 6.0 with commit 38d4f74bc14847491d07bd745dc4a2c274f4987d and fixed in 6.16.1 with commit 1a7a2f59fb2eb0718a0cff1e5822500cefe50ed9
	Issue introduced in 6.0 with commit 38d4f74bc14847491d07bd745dc4a2c274f4987d and fixed in 6.17-rc1 with commit ee4cf798202d285dcbe85e4467a094c44f5ed8e6

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-38585
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/staging/media/atomisp/pci/atomisp_gmin_platform.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/3d672fe065aa00f4d66f42e3c9720f69a3ed43e7
	https://git.kernel.org/stable/c/e6d3453a002e89537e6136f6c774659b297a549b
	https://git.kernel.org/stable/c/1a7a2f59fb2eb0718a0cff1e5822500cefe50ed9
	https://git.kernel.org/stable/c/ee4cf798202d285dcbe85e4467a094c44f5ed8e6
