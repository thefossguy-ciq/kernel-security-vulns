From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-37995: module: ensure that kobject_put() is safe for module type kobjects
Message-Id: <2025052902-CVE-2025-37995-2117@gregkh>
Content-Length: 3086
Lines: 61
X-Developer-Signature: v=1; a=openpgp-sha256; l=3148;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=ycvFcoy2rrWxM0sNjjpBDgQq+HQUpB4hci29bL8qcTY=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBkWcUL/pvNde9M2bVLmI84nXr8mLTggu54j4ybzw6NTH
 fPkDqoYd8SyMAgyMciKKbJ82cZzdH/FIUUvQ9vTMHNYmUCGMHBxCsBEjnsyzNP/6/fwdq7TX+6q
 9ecz53seVvNjiGNYsHmSz1StB4sV1+pVTDLbw/vTqUphOwA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

module: ensure that kobject_put() is safe for module type kobjects

In 'lookup_or_create_module_kobject()', an internal kobject is created
using 'module_ktype'. So call to 'kobject_put()' on error handling
path causes an attempt to use an uninitialized completion pointer in
'module_kobject_release()'. In this scenario, we just want to release
kobject without an extra synchronization required for a regular module
unloading process, so adding an extra check whether 'complete()' is
actually required makes 'kobject_put()' safe.

The Linux kernel CVE team has assigned CVE-2025-37995 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 3.12 with commit 942e443127e928a5631c3d5102aca8c8b3c2dd98 and fixed in 5.15.183 with commit f1c71b4bd721a4ea21da408806964b10468623f2
	Issue introduced in 3.12 with commit 942e443127e928a5631c3d5102aca8c8b3c2dd98 and fixed in 6.1.139 with commit 9e7b49ce4f9d0cb5b6e87db9e07a2fb9e754b0dd
	Issue introduced in 3.12 with commit 942e443127e928a5631c3d5102aca8c8b3c2dd98 and fixed in 6.6.91 with commit faa9059631d3491d699c69ecf512de9e1a3d6649
	Issue introduced in 3.12 with commit 942e443127e928a5631c3d5102aca8c8b3c2dd98 and fixed in 6.12.29 with commit d63851049f412cdfadaeef7a7eaef5031d11c1e9
	Issue introduced in 3.12 with commit 942e443127e928a5631c3d5102aca8c8b3c2dd98 and fixed in 6.14.7 with commit 31d8df3f303c3ae9115230820977ef8c35c88808
	Issue introduced in 3.12 with commit 942e443127e928a5631c3d5102aca8c8b3c2dd98 and fixed in 6.15 with commit a6aeb739974ec73e5217c75a7c008a688d3d5cf1

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-37995
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	kernel/params.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/f1c71b4bd721a4ea21da408806964b10468623f2
	https://git.kernel.org/stable/c/9e7b49ce4f9d0cb5b6e87db9e07a2fb9e754b0dd
	https://git.kernel.org/stable/c/faa9059631d3491d699c69ecf512de9e1a3d6649
	https://git.kernel.org/stable/c/d63851049f412cdfadaeef7a7eaef5031d11c1e9
	https://git.kernel.org/stable/c/31d8df3f303c3ae9115230820977ef8c35c88808
	https://git.kernel.org/stable/c/a6aeb739974ec73e5217c75a7c008a688d3d5cf1
