From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-37805: sound/virtio: Fix cancel_sync warnings on uninitialized work_structs

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

sound/virtio: Fix cancel_sync warnings on uninitialized work_structs

Betty reported hitting the following warning:

[    8.709131][  T221] WARNING: CPU: 2 PID: 221 at kernel/workqueue.c:4182
...
[    8.713282][  T221] Call trace:
[    8.713365][  T221]  __flush_work+0x8d0/0x914
[    8.713468][  T221]  __cancel_work_sync+0xac/0xfc
[    8.713570][  T221]  cancel_work_sync+0x24/0x34
[    8.713667][  T221]  virtsnd_remove+0xa8/0xf8 [virtio_snd ab15f34d0dd772f6d11327e08a81d46dc9c36276]
[    8.713868][  T221]  virtsnd_probe+0x48c/0x664 [virtio_snd ab15f34d0dd772f6d11327e08a81d46dc9c36276]
[    8.714035][  T221]  virtio_dev_probe+0x28c/0x390
[    8.714139][  T221]  really_probe+0x1bc/0x4c8
...

It seems we're hitting the error path in virtsnd_probe(), which
triggers a virtsnd_remove() which iterates over the substreams
calling cancel_work_sync() on the elapsed_period work_struct.

Looking at the code, from earlier in:
virtsnd_probe()->virtsnd_build_devs()->virtsnd_pcm_parse_cfg()

We set snd->nsubstreams, allocate the snd->substreams, and if
we then hit an error on the info allocation or something in
virtsnd_ctl_query_info() fails, we will exit without having
initialized the elapsed_period work_struct.

When that error path unwinds we then call virtsnd_remove()
which as long as the substreams array is allocated, will iterate
through calling cancel_work_sync() on the uninitialized work
struct hitting this warning.

Takashi Iwai suggested this fix, which initializes the substreams
structure right after allocation, so that if we hit the error
paths we avoid trying to cleanup uninitialized data.

Note: I have not yet managed to reproduce the issue myself, so
this patch has had limited testing.

Feedback or thoughts would be appreciated!

The Linux kernel CVE team has assigned CVE-2025-37805 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.13 with commit 29b96bf50ba958eb5f097cdc3fbd4c1acf9547a2 and fixed in 5.15.181 with commit e03b10c45c7675b6098190c6e7de1b656d8bcdbe
	Issue introduced in 5.13 with commit 29b96bf50ba958eb5f097cdc3fbd4c1acf9547a2 and fixed in 6.1.136 with commit 54c7b864fbe4423a07b443a4ada0106052942116
	Issue introduced in 5.13 with commit 29b96bf50ba958eb5f097cdc3fbd4c1acf9547a2 and fixed in 6.6.89 with commit 5be9407b41eae20eef9140f5cfbfcbc3d01aaf45
	Issue introduced in 5.13 with commit 29b96bf50ba958eb5f097cdc3fbd4c1acf9547a2 and fixed in 6.12.26 with commit 66046b586c0aaa9332483bcdbd76e3305d6138e9
	Issue introduced in 5.13 with commit 29b96bf50ba958eb5f097cdc3fbd4c1acf9547a2 and fixed in 6.14.5 with commit 9908498ce929a5a052b79bb7942f9ea317312ce4
	Issue introduced in 5.13 with commit 29b96bf50ba958eb5f097cdc3fbd4c1acf9547a2 and fixed in 6.15-rc1 with commit 3c7df2e27346eb40a0e86230db1ccab195c97cfe

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-37805
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	sound/virtio/virtio_pcm.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/e03b10c45c7675b6098190c6e7de1b656d8bcdbe
	https://git.kernel.org/stable/c/54c7b864fbe4423a07b443a4ada0106052942116
	https://git.kernel.org/stable/c/5be9407b41eae20eef9140f5cfbfcbc3d01aaf45
	https://git.kernel.org/stable/c/66046b586c0aaa9332483bcdbd76e3305d6138e9
	https://git.kernel.org/stable/c/9908498ce929a5a052b79bb7942f9ea317312ce4
	https://git.kernel.org/stable/c/3c7df2e27346eb40a0e86230db1ccab195c97cfe
