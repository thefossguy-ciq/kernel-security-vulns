From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-39852: net/tcp: Fix socket memory leak in TCP-AO failure handling for IPv6
Message-Id: <2025091904-CVE-2025-39852-4209@gregkh>
Content-Length: 3389
Lines: 83
X-Developer-Signature: v=1; a=openpgp-sha256; l=3473;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=lM02p1vQj7ibDhoto9O2QOo6d9EgbsPnTJKpQxwdcFg=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBlny1oOfpubIVD+J/KR9q7FG6aumTmhteFNzQKWD+yr5
 7ZsE7j3qyOWhUGQiUFWTJHlyzaeo/srDil6GdqehpnDygQyhIGLUwAm0tDHMFdofntRfJD3H+G1
 028+Pqu006v2oDXDLOa67M1c9992Hsrw2pnKKm25Qbp5AQA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

net/tcp: Fix socket memory leak in TCP-AO failure handling for IPv6

When tcp_ao_copy_all_matching() fails in tcp_v6_syn_recv_sock() it just
exits the function. This ends up causing a memory-leak:

unreferenced object 0xffff0000281a8200 (size 2496):
  comm "softirq", pid 0, jiffies 4295174684
  hex dump (first 32 bytes):
    7f 00 00 06 7f 00 00 06 00 00 00 00 cb a8 88 13  ................
    0a 00 03 61 00 00 00 00 00 00 00 00 00 00 00 00  ...a............
  backtrace (crc 5ebdbe15):
    kmemleak_alloc+0x44/0xe0
    kmem_cache_alloc_noprof+0x248/0x470
    sk_prot_alloc+0x48/0x120
    sk_clone_lock+0x38/0x3b0
    inet_csk_clone_lock+0x34/0x150
    tcp_create_openreq_child+0x3c/0x4a8
    tcp_v6_syn_recv_sock+0x1c0/0x620
    tcp_check_req+0x588/0x790
    tcp_v6_rcv+0x5d0/0xc18
    ip6_protocol_deliver_rcu+0x2d8/0x4c0
    ip6_input_finish+0x74/0x148
    ip6_input+0x50/0x118
    ip6_sublist_rcv+0x2fc/0x3b0
    ipv6_list_rcv+0x114/0x170
    __netif_receive_skb_list_core+0x16c/0x200
    netif_receive_skb_list_internal+0x1f0/0x2d0

This is because in tcp_v6_syn_recv_sock (and the IPv4 counterpart), when
exiting upon error, inet_csk_prepare_forced_close() and tcp_done() need
to be called. They make sure the newsk will end up being correctly
free'd.

tcp_v4_syn_recv_sock() makes this very clear by having the put_and_exit
label that takes care of things. So, this patch here makes sure
tcp_v4_syn_recv_sock and tcp_v6_syn_recv_sock have similar
error-handling and thus fixes the leak for TCP-AO.

The Linux kernel CVE team has assigned CVE-2025-39852 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 6.7 with commit 06b22ef29591f625ef877ae00d82192938e29e60 and fixed in 6.12.46 with commit 46d33c878fc0b3d7570366b2c9912395b3f4e701
	Issue introduced in 6.7 with commit 06b22ef29591f625ef877ae00d82192938e29e60 and fixed in 6.16.6 with commit 3d2b356d994a8801acb397cafd28b13672c37ab5
	Issue introduced in 6.7 with commit 06b22ef29591f625ef877ae00d82192938e29e60 and fixed in 6.17-rc5 with commit fa390321aba0a54d0f7ae95ee4ecde1358bb9234

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-39852
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	net/ipv6/tcp_ipv6.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/46d33c878fc0b3d7570366b2c9912395b3f4e701
	https://git.kernel.org/stable/c/3d2b356d994a8801acb397cafd28b13672c37ab5
	https://git.kernel.org/stable/c/fa390321aba0a54d0f7ae95ee4ecde1358bb9234
