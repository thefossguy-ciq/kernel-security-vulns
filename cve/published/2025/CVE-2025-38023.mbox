From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-38023: nfs: handle failure of nfs_get_lock_context in unlock path
Message-Id: <2025061847-CVE-2025-38023-01b8@gregkh>
Content-Length: 4924
Lines: 101
X-Developer-Signature: v=1; a=openpgp-sha256; l=5026;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=1AnkM9R3M3MXmRWHhB6BTe0A/W/dwweAmGWv78T1vnA=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBlBbefb7vUFfpo5cYeClWLFwhkzcvdI2v7zNXmkLfX86
 /FtxmcMOmJZGASZGGTFFFm+bOM5ur/ikKKXoe1pmDmsTCBDGLg4BWAizBIMC64xy/Q0qtzpWrL8
 zfwvpY4zBP3k1zPMs1vx9r+PQs66G3H3Vff9jnad9bz8IQA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

nfs: handle failure of nfs_get_lock_context in unlock path

When memory is insufficient, the allocation of nfs_lock_context in
nfs_get_lock_context() fails and returns -ENOMEM. If we mistakenly treat
an nfs4_unlockdata structure (whose l_ctx member has been set to -ENOMEM)
as valid and proceed to execute rpc_run_task(), this will trigger a NULL
pointer dereference in nfs4_locku_prepare. For example:

BUG: kernel NULL pointer dereference, address: 000000000000000c
PGD 0 P4D 0
Oops: Oops: 0000 [#1] SMP PTI
CPU: 15 UID: 0 PID: 12 Comm: kworker/u64:0 Not tainted 6.15.0-rc2-dirty #60
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-2.fc40
Workqueue: rpciod rpc_async_schedule
RIP: 0010:nfs4_locku_prepare+0x35/0xc2
Code: 89 f2 48 89 fd 48 c7 c7 68 69 ef b5 53 48 8b 8e 90 00 00 00 48 89 f3
RSP: 0018:ffffbbafc006bdb8 EFLAGS: 00010246
RAX: 000000000000004b RBX: ffff9b964fc1fa00 RCX: 0000000000000000
RDX: 0000000000000000 RSI: fffffffffffffff4 RDI: ffff9ba53fddbf40
RBP: ffff9ba539934000 R08: 0000000000000000 R09: ffffbbafc006bc38
R10: ffffffffb6b689c8 R11: 0000000000000003 R12: ffff9ba539934030
R13: 0000000000000001 R14: 0000000004248060 R15: ffffffffb56d1c30
FS: 0000000000000000(0000) GS:ffff9ba5881f0000(0000) knlGS:00000000
CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 000000000000000c CR3: 000000093f244000 CR4: 00000000000006f0
Call Trace:
 <TASK>
 __rpc_execute+0xbc/0x480
 rpc_async_schedule+0x2f/0x40
 process_one_work+0x232/0x5d0
 worker_thread+0x1da/0x3d0
 ? __pfx_worker_thread+0x10/0x10
 kthread+0x10d/0x240
 ? __pfx_kthread+0x10/0x10
 ret_from_fork+0x34/0x50
 ? __pfx_kthread+0x10/0x10
 ret_from_fork_asm+0x1a/0x30
 </TASK>
Modules linked in:
CR2: 000000000000000c
---[ end trace 0000000000000000 ]---

Free the allocated nfs4_unlockdata when nfs_get_lock_context() fails and
return NULL to terminate subsequent rpc_run_task, preventing NULL pointer
dereference.

The Linux kernel CVE team has assigned CVE-2025-38023 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 4.12 with commit f30cb757f680f965ba8a2e53cb3588052a01aeb5 and fixed in 5.4.294 with commit db6f5ee1fc8f54d079d0751292c2fc2d78e3aad1
	Issue introduced in 4.12 with commit f30cb757f680f965ba8a2e53cb3588052a01aeb5 and fixed in 5.10.238 with commit 4c189fd40a09a03f9a900bedb2d9064f1734d72a
	Issue introduced in 4.12 with commit f30cb757f680f965ba8a2e53cb3588052a01aeb5 and fixed in 5.15.184 with commit 72f552e00c50f265896d3c19edc6696aa2910081
	Issue introduced in 4.12 with commit f30cb757f680f965ba8a2e53cb3588052a01aeb5 and fixed in 6.1.140 with commit 85fb7f8ca5f8c138579fdfc9b97b3083e6077d40
	Issue introduced in 4.12 with commit f30cb757f680f965ba8a2e53cb3588052a01aeb5 and fixed in 6.6.92 with commit a6879a076b98c99c9fe747816fe1c29543442441
	Issue introduced in 4.12 with commit f30cb757f680f965ba8a2e53cb3588052a01aeb5 and fixed in 6.12.30 with commit da824f1271633bcb515ca8084cda3eda4b3ace51
	Issue introduced in 4.12 with commit f30cb757f680f965ba8a2e53cb3588052a01aeb5 and fixed in 6.14.8 with commit f601960af04d2ecb007c928ba153d34051acd9c1
	Issue introduced in 4.12 with commit f30cb757f680f965ba8a2e53cb3588052a01aeb5 and fixed in 6.15 with commit c457dc1ec770a22636b473ce5d35614adfe97636

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-38023
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	fs/nfs/nfs4proc.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/db6f5ee1fc8f54d079d0751292c2fc2d78e3aad1
	https://git.kernel.org/stable/c/4c189fd40a09a03f9a900bedb2d9064f1734d72a
	https://git.kernel.org/stable/c/72f552e00c50f265896d3c19edc6696aa2910081
	https://git.kernel.org/stable/c/85fb7f8ca5f8c138579fdfc9b97b3083e6077d40
	https://git.kernel.org/stable/c/a6879a076b98c99c9fe747816fe1c29543442441
	https://git.kernel.org/stable/c/da824f1271633bcb515ca8084cda3eda4b3ace51
	https://git.kernel.org/stable/c/f601960af04d2ecb007c928ba153d34051acd9c1
	https://git.kernel.org/stable/c/c457dc1ec770a22636b473ce5d35614adfe97636
