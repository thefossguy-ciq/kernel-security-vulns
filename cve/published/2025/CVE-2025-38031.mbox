From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-38031: padata: do not leak refcount in reorder_work

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

padata: do not leak refcount in reorder_work

A recent patch that addressed a UAF introduced a reference count leak:
the parallel_data refcount is incremented unconditionally, regardless
of the return value of queue_work(). If the work item is already queued,
the incremented refcount is never decremented.

Fix this by checking the return value of queue_work() and decrementing
the refcount when necessary.

Resolves:

Unreferenced object 0xffff9d9f421e3d80 (size 192):
  comm "cryptomgr_probe", pid 157, jiffies 4294694003
  hex dump (first 32 bytes):
    80 8b cf 41 9f 9d ff ff b8 97 e0 89 ff ff ff ff  ...A............
    d0 97 e0 89 ff ff ff ff 19 00 00 00 1f 88 23 00  ..............#.
  backtrace (crc 838fb36):
    __kmalloc_cache_noprof+0x284/0x320
    padata_alloc_pd+0x20/0x1e0
    padata_alloc_shell+0x3b/0xa0
    0xffffffffc040a54d
    cryptomgr_probe+0x43/0xc0
    kthread+0xf6/0x1f0
    ret_from_fork+0x2f/0x50
    ret_from_fork_asm+0x1a/0x30

The Linux kernel CVE team has assigned CVE-2025-38031 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.10.235 with commit f4f1b1169fc3694f9bc3e28c6c68dbbf4cc744c0 and fixed in 5.10.238 with commit b9ad8e50e8589607e68e6c4cefa7f72bf35a2cb1
	Issue introduced in 5.15.179 with commit 4c6209efea2208597dbd3e52dc87a0d1a8f2dbe1 and fixed in 5.15.185 with commit 1a426abdf1c86882c9203dd8182f3b8274b89938
	Issue introduced in 6.1.129 with commit 7000507bb0d2ceb545c0a690e0c707c897d102c2 and fixed in 6.1.141 with commit cceb15864e1612ebfbc10ec4e4dcd19a10c0056c
	Issue introduced in 6.6.76 with commit 6f45ef616775b0ce7889b0f6077fc8d681ab30bc and fixed in 6.6.93 with commit 584a729615fa92f4de45480efb7e569d14be1516
	Issue introduced in 6.12.13 with commit 8ca38d0ca8c3d30dd18d311f1a7ec5cb56972cac and fixed in 6.12.31 with commit 5300e487487d7a2e3e1e6e9d8f03ed9452e4019e
	Issue introduced in 6.14 with commit dd7d37ccf6b11f3d95e797ebe4e9e886d0332600 and fixed in 6.14.9 with commit 1c65ae4988714716101555fe2b9830e33136d6fb
	Issue introduced in 6.14 with commit dd7d37ccf6b11f3d95e797ebe4e9e886d0332600 and fixed in 6.15 with commit d6ebcde6d4ecf34f8495fb30516645db3aea8993
	Issue introduced in 6.13.2 with commit a54091c24220a4cd847d5b4f36d678edacddbaf0

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-38031
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	kernel/padata.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/b9ad8e50e8589607e68e6c4cefa7f72bf35a2cb1
	https://git.kernel.org/stable/c/1a426abdf1c86882c9203dd8182f3b8274b89938
	https://git.kernel.org/stable/c/cceb15864e1612ebfbc10ec4e4dcd19a10c0056c
	https://git.kernel.org/stable/c/584a729615fa92f4de45480efb7e569d14be1516
	https://git.kernel.org/stable/c/5300e487487d7a2e3e1e6e9d8f03ed9452e4019e
	https://git.kernel.org/stable/c/1c65ae4988714716101555fe2b9830e33136d6fb
	https://git.kernel.org/stable/c/d6ebcde6d4ecf34f8495fb30516645db3aea8993
