From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-38192: net: clear the dst when changing skb protocol
Message-Id: <2025070415-CVE-2025-38192-6a15@gregkh>
Content-Length: 3497
Lines: 81
X-Developer-Signature: v=1; a=openpgp-sha256; l=3579;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=v+xLxkG6qd/rktRH5LboIixOloWtZZvLv9D/fNiJMwY=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBnpN7m7n85a5lL70LVl9uxtbwtO9Bn1Zn5r9gr/veWO0
 Dkf9vVfOmJZGASZGGTFFFm+bOM5ur/ikKKXoe1pmDmsTCBDGLg4BWAilnIM83TWHH6l6ND359Sp
 67qpm19M7r1Xx8Iwh8vl/4nokzeM/gov1P9V8yU1M9rREgA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

net: clear the dst when changing skb protocol

A not-so-careful NAT46 BPF program can crash the kernel
if it indiscriminately flips ingress packets from v4 to v6:

  BUG: kernel NULL pointer dereference, address: 0000000000000000
    ip6_rcv_core (net/ipv6/ip6_input.c:190:20)
    ipv6_rcv (net/ipv6/ip6_input.c:306:8)
    process_backlog (net/core/dev.c:6186:4)
    napi_poll (net/core/dev.c:6906:9)
    net_rx_action (net/core/dev.c:7028:13)
    do_softirq (kernel/softirq.c:462:3)
    netif_rx (net/core/dev.c:5326:3)
    dev_loopback_xmit (net/core/dev.c:4015:2)
    ip_mc_finish_output (net/ipv4/ip_output.c:363:8)
    NF_HOOK (./include/linux/netfilter.h:314:9)
    ip_mc_output (net/ipv4/ip_output.c:400:5)
    dst_output (./include/net/dst.h:459:9)
    ip_local_out (net/ipv4/ip_output.c:130:9)
    ip_send_skb (net/ipv4/ip_output.c:1496:8)
    udp_send_skb (net/ipv4/udp.c:1040:8)
    udp_sendmsg (net/ipv4/udp.c:1328:10)

The output interface has a 4->6 program attached at ingress.
We try to loop the multicast skb back to the sending socket.
Ingress BPF runs as part of netif_rx(), pushes a valid v6 hdr
and changes skb->protocol to v6. We enter ip6_rcv_core which
tries to use skb_dst(). But the dst is still an IPv4 one left
after IPv4 mcast output.

Clear the dst in all BPF helpers which change the protocol.
Try to preserve metadata dsts, those may carry non-routing
metadata.

The Linux kernel CVE team has assigned CVE-2025-38192 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 4.8 with commit 6578171a7ff0c31dc73258f93da7407510abf085 and fixed in 6.6.95 with commit bfa4d86e130a09f67607482e988313430e38f6c4
	Issue introduced in 4.8 with commit 6578171a7ff0c31dc73258f93da7407510abf085 and fixed in 6.12.35 with commit 2a3ad42a57b43145839f2f233fb562247658a6d9
	Issue introduced in 4.8 with commit 6578171a7ff0c31dc73258f93da7407510abf085 and fixed in 6.15.4 with commit e9994e7b9f7bbb882d13c8191731649249150d21
	Issue introduced in 4.8 with commit 6578171a7ff0c31dc73258f93da7407510abf085 and fixed in 6.16-rc2 with commit ba9db6f907ac02215e30128770f85fbd7db2fcf9

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-38192
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	net/core/filter.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/bfa4d86e130a09f67607482e988313430e38f6c4
	https://git.kernel.org/stable/c/2a3ad42a57b43145839f2f233fb562247658a6d9
	https://git.kernel.org/stable/c/e9994e7b9f7bbb882d13c8191731649249150d21
	https://git.kernel.org/stable/c/ba9db6f907ac02215e30128770f85fbd7db2fcf9
