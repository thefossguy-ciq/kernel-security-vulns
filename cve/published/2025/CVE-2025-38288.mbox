From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-38288: scsi: smartpqi: Fix smp_processor_id() call trace for preemptible kernels
Message-Id: <2025071011-CVE-2025-38288-5c5a@gregkh>
Content-Length: 2795
Lines: 68
X-Developer-Signature: v=1; a=openpgp-sha256; l=2864;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=M2H6yS+TM3dbXVftEBnnym5kus7aQODVFt/vfxCEbPM=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBn5eZeTPvCkOqo9Ep1zZdbtiQ5npGWerJTZrfdoNr/tD
 5GJlqaVHbEsDIJMDLJiiixftvEc3V9xSNHL0PY0zBxWJpAhDFycAjARlUqGBdvPnekUfLfk5CNr
 pu9brz9MkmPfFs+w4MaEtK+Tnr28HrnIcNNSq6JdmW2m5QA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

scsi: smartpqi: Fix smp_processor_id() call trace for preemptible kernels

Correct kernel call trace when calling smp_processor_id() when called in
preemptible kernels by using raw_smp_processor_id().

smp_processor_id() checks to see if preemption is disabled and if not,
issue an error message followed by a call to dump_stack().

Brief example of call trace:
kernel:  check_preemption_disabled: 436 callbacks suppressed
kernel:  BUG: using smp_processor_id() in preemptible [00000000]
         code: kworker/u1025:0/2354
kernel:  caller is pqi_scsi_queue_command+0x183/0x310 [smartpqi]
kernel:  CPU: 129 PID: 2354 Comm: kworker/u1025:0
kernel:  ...
kernel:  Workqueue: writeback wb_workfn (flush-253:0)
kernel:  Call Trace:
kernel:   <TASK>
kernel:   dump_stack_lvl+0x34/0x48
kernel:   check_preemption_disabled+0xdd/0xe0
kernel:   pqi_scsi_queue_command+0x183/0x310 [smartpqi]
kernel:  ...

The Linux kernel CVE team has assigned CVE-2025-38288 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 6.12 with commit 283dcc1b142ebd60786f8f5e3fbbd53a51035739 and fixed in 6.12.34 with commit 6589bc3699bcb45b35b3095c44a5af7a4d75ef7e
	Issue introduced in 6.12 with commit 283dcc1b142ebd60786f8f5e3fbbd53a51035739 and fixed in 6.15.3 with commit 31224199316f488c8385c5dcdccf7bd80f675b81
	Issue introduced in 6.12 with commit 283dcc1b142ebd60786f8f5e3fbbd53a51035739 and fixed in 6.16-rc1 with commit 42d033cf4b517e91c187ad2fbd7b30fdc6d2d62c

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-38288
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/scsi/smartpqi/smartpqi_init.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/6589bc3699bcb45b35b3095c44a5af7a4d75ef7e
	https://git.kernel.org/stable/c/31224199316f488c8385c5dcdccf7bd80f675b81
	https://git.kernel.org/stable/c/42d033cf4b517e91c187ad2fbd7b30fdc6d2d62c
