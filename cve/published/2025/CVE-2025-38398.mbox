From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-38398: spi: spi-qpic-snand: reallocate BAM transactions
Message-Id: <2025072510-CVE-2025-38398-1271@gregkh>
Content-Length: 3640
Lines: 87
X-Developer-Signature: v=1; a=openpgp-sha256; l=3728;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=Wcv0dabm7mSXaT1K1UnqHbMOMrQdm44IqnZtWfH5d1Y=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBnNdetYvbf6y91MSlh4Raw/9Nwihk87kv3kre0fef24H
 uuRP+ddRywLgyATg6yYIsuXbTxH91ccUvQytD0NM4eVCWQIAxenAEwku4lhwcFrQU4Hw/9e50rT
 dDB6o1wzO737NsP8CPHeN3mzJPbzSNzcFGnCYKr+f/86AA==
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

spi: spi-qpic-snand: reallocate BAM transactions

Using the mtd_nandbiterrs module for testing the driver occasionally
results in weird things like below.

1. swiotlb mapping fails with the following message:

  [   85.926216] qcom_snand 79b0000.spi: swiotlb buffer is full (sz: 4294967294 bytes), total 512 (slots), used 0 (slots)
  [   85.932937] qcom_snand 79b0000.spi: failure in mapping desc
  [   87.999314] qcom_snand 79b0000.spi: failure to write raw page
  [   87.999352] mtd_nandbiterrs: error: write_oob failed (-110)

  Rebooting the board after this causes a panic due to a NULL pointer
  dereference.

2. If the swiotlb mapping does not fail, rebooting the board may result
   in a different panic due to a bad spinlock magic:

  [  256.104459] BUG: spinlock bad magic on CPU#3, procd/2241
  [  256.104488] Unable to handle kernel paging request at virtual address ffffffff0000049b
  ...

Investigating the issue revealed that these symptoms are results of
memory corruption which is caused by out of bounds access within the
driver.

The driver uses a dynamically allocated structure for BAM transactions,
which structure must have enough space for all possible variations of
different flash operations initiated by the driver. The required space
heavily depends on the actual number of 'codewords' which is calculated
from the pagesize of the actual NAND chip.

Although the qcom_nandc_alloc() function allocates memory for the BAM
transactions during probe, but since the actual number of 'codewords'
is not yet know the allocation is done for one 'codeword' only.

Because of this, whenever the driver does a flash operation, and the
number of the required transactions exceeds the size of the allocated
arrays the driver accesses memory out of the allocated range.

To avoid this, change the code to free the initially allocated BAM
transactions memory, and allocate a new one once the actual number of
'codewords' required for a given NAND chip is known.

The Linux kernel CVE team has assigned CVE-2025-38398 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 6.15 with commit 7304d1909080ef0c9da703500a97f46c98393fcd and fixed in 6.15.6 with commit 86fb36de1132b560f9305f0c78fa69f459fa0980
	Issue introduced in 6.15 with commit 7304d1909080ef0c9da703500a97f46c98393fcd and fixed in 6.16-rc5 with commit d85d0380292a7e618915069c3579ae23c7c80339

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-38398
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/spi/spi-qpic-snand.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/86fb36de1132b560f9305f0c78fa69f459fa0980
	https://git.kernel.org/stable/c/d85d0380292a7e618915069c3579ae23c7c80339
