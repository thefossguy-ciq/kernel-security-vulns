From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-40067: fs/ntfs3: reject index allocation if $BITMAP is empty but blocks exist
Message-Id: <2025102817-CVE-2025-40067-fb1b@gregkh>
Content-Length: 2951
Lines: 64
X-Developer-Signature: v=1; a=openpgp-sha256; l=3016;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=sa6sBI+YDz2tKi89MCaxHHFbvqu6TEPPP+vBFJX5c/E=;
 b=kA0DAAIRMUfUDdst+ykByyZiAGkArYGiW7frMchvnyV2fvCFiE+uh4WLDdpFeU0LVo//UeHJ0
 4hdBAARAgAdFiEE9LYMxb94wiFKMT3LMUfUDdst+ykFAmkArYEACgkQMUfUDdst+ynRRACffgrm
 aU7iCV4HYE8xOjxxpHmFFaIAn03SJjAI8C00eNd/Zl0LZwPscz/g
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

fs/ntfs3: reject index allocation if $BITMAP is empty but blocks exist

Index allocation requires at least one bit in the $BITMAP attribute to
track usage of index entries. If the bitmap is empty while index blocks
are already present, this reflects on-disk corruption.

syzbot triggered this condition using a malformed NTFS image. During a
rename() operation involving a long filename (which spans multiple
index entries), the empty bitmap allowed the name to be added without
valid tracking. Subsequent deletion of the original entry failed with
-ENOENT, due to unexpected index state.

Reject such cases by verifying that the bitmap is not empty when index
blocks exist.

The Linux kernel CVE team has assigned CVE-2025-40067 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 6.6.102 with commit b35a50d639ca5259466ef5fea85529bb4fb17d5b and fixed in 6.6.112 with commit 978aac54e93ea35aab20b32ae393d3d33964e7ae
	Issue introduced in 6.12.42 with commit 3ed2cc6a6e93fbeb8c0cafce1e7fb1f64a331dcc and fixed in 6.12.53 with commit be66551da203862c689c12e1d35ce87217c017c1
	Issue introduced in 6.17 with commit d99208b91933fd2a58ed9ed321af07dacd06ddc3 and fixed in 6.17.3 with commit 039ddf353cc33f6546a87ec1ac3210637d714bec
	Issue introduced in 6.17 with commit d99208b91933fd2a58ed9ed321af07dacd06ddc3 and fixed in 6.18-rc1 with commit 0dc7117da8f92dd5fe077d712a756eccbe377d40
	Issue introduced in 6.15.10 with commit 358d4f821c03add421a4c49290538a705852ccf1
	Issue introduced in 6.16.1 with commit a285395020780adac1ffbc844069c3d700bf007a

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-40067
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	fs/ntfs3/index.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/978aac54e93ea35aab20b32ae393d3d33964e7ae
	https://git.kernel.org/stable/c/be66551da203862c689c12e1d35ce87217c017c1
	https://git.kernel.org/stable/c/039ddf353cc33f6546a87ec1ac3210637d714bec
	https://git.kernel.org/stable/c/0dc7117da8f92dd5fe077d712a756eccbe377d40
