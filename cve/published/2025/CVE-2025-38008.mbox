From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-38008: mm/page_alloc: fix race condition in unaccepted memory handling

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

mm/page_alloc: fix race condition in unaccepted memory handling

The page allocator tracks the number of zones that have unaccepted memory
using static_branch_enc/dec() and uses that static branch in hot paths to
determine if it needs to deal with unaccepted memory.

Borislav and Thomas pointed out that the tracking is racy: operations on
static_branch are not serialized against adding/removing unaccepted pages
to/from the zone.

Sanity checks inside static_branch machinery detects it:

WARNING: CPU: 0 PID: 10 at kernel/jump_label.c:276 __static_key_slow_dec_cpuslocked+0x8e/0xa0

The comment around the WARN() explains the problem:

	/*
	 * Warn about the '-1' case though; since that means a
	 * decrement is concurrent with a first (0->1) increment. IOW
	 * people are trying to disable something that wasn't yet fully
	 * enabled. This suggests an ordering problem on the user side.
	 */

The effect of this static_branch optimization is only visible on
microbenchmark.

Instead of adding more complexity around it, remove it altogether.

The Linux kernel CVE team has assigned CVE-2025-38008 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 6.5 with commit dcdfdd40fa82b6704d2841938e5c8ec3051eb0d6 and fixed in 6.6.92 with commit 98fdd2f612e949c652693f6df00442c81037776d
	Issue introduced in 6.5 with commit dcdfdd40fa82b6704d2841938e5c8ec3051eb0d6 and fixed in 6.12.30 with commit 74953f93f47a45296cc2a3fd04e2a3202ff3fa53
	Issue introduced in 6.5 with commit dcdfdd40fa82b6704d2841938e5c8ec3051eb0d6 and fixed in 6.14.8 with commit 71dda1cb10702dc2859f00eb789b0502de2176a9
	Issue introduced in 6.5 with commit dcdfdd40fa82b6704d2841938e5c8ec3051eb0d6 and fixed in 6.15 with commit fefc075182275057ce607effaa3daa9e6e3bdc73

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-38008
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	mm/internal.h
	mm/mm_init.c
	mm/page_alloc.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/98fdd2f612e949c652693f6df00442c81037776d
	https://git.kernel.org/stable/c/74953f93f47a45296cc2a3fd04e2a3202ff3fa53
	https://git.kernel.org/stable/c/71dda1cb10702dc2859f00eb789b0502de2176a9
	https://git.kernel.org/stable/c/fefc075182275057ce607effaa3daa9e6e3bdc73
