From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-38151: RDMA/cma: Fix hang when cma_netevent_callback fails to queue_work
Message-Id: <2025070336-CVE-2025-38151-6483@gregkh>
Content-Length: 3088
Lines: 64
X-Developer-Signature: v=1; a=openpgp-sha256; l=3153;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=9qqrZJwzTu0M2OxN0tOwfkJ13Qm63KcS0vPSzTmiO7Q=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBlpDjff15ydYRrlW9xapz/963TH+fle91Kuta9acS36Q
 tiEyXnzO2JZGASZGGTFFFm+bOM5ur/ikKKXoe1pmDmsTCBDGLg4BWAi98wZ5of2GX3sq9V+8LVy
 Se4qsw2TdFKTzzHMZn2kq//93yM3Ee0t57rmzqjuV5p9FQA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

RDMA/cma: Fix hang when cma_netevent_callback fails to queue_work

The cited commit fixed a crash when cma_netevent_callback was called for
a cma_id while work on that id from a previous call had not yet started.
The work item was re-initialized in the second call, which corrupted the
work item currently in the work queue.

However, it left a problem when queue_work fails (because the item is
still pending in the work queue from a previous call). In this case,
cma_id_put (which is called in the work handler) is therefore not
called. This results in a userspace process hang (zombie process).

Fix this by calling cma_id_put() if queue_work fails.

The Linux kernel CVE team has assigned CVE-2025-38151 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 6.1.135 with commit 51003b2c872c63d28bcf5fbcc52cf7b05615f7b7 and fixed in 6.1.142 with commit 1ac40736c8c4255d8417b937c9715b193f4a87b3
	Issue introduced in 6.6.88 with commit c2b169fc7a12665d8a675c1ff14bca1b9c63fb9a and fixed in 6.6.94 with commit ac7897c0124066b9705ffca252a3662d54fc0c9b
	Issue introduced in 6.12.25 with commit d23fd7a539ac078df119707110686a5b226ee3bb and fixed in 6.12.34 with commit 02e45168e0fd6fdc6f8f7c42c4b500857aa5efb0
	Issue introduced in 6.15 with commit 45f5dcdd049719fb999393b30679605f16ebce14 and fixed in 6.15.3 with commit 8b05aa3692e45b8249379dc52b14acc6a104d2e5
	Issue introduced in 6.15 with commit 45f5dcdd049719fb999393b30679605f16ebce14 and fixed in 6.16-rc1 with commit 92a251c3df8ea1991cd9fe00f1ab0cfce18d7711
	Issue introduced in 6.14.4 with commit b172a4a0de254f1fcce7591833a9a63547c2f447

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-38151
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/infiniband/core/cma.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/1ac40736c8c4255d8417b937c9715b193f4a87b3
	https://git.kernel.org/stable/c/ac7897c0124066b9705ffca252a3662d54fc0c9b
	https://git.kernel.org/stable/c/02e45168e0fd6fdc6f8f7c42c4b500857aa5efb0
	https://git.kernel.org/stable/c/8b05aa3692e45b8249379dc52b14acc6a104d2e5
	https://git.kernel.org/stable/c/92a251c3df8ea1991cd9fe00f1ab0cfce18d7711
