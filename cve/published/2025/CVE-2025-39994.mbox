From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-39994: media: tuner: xc5000: Fix use-after-free in xc5000_release

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

media: tuner: xc5000: Fix use-after-free in xc5000_release

The original code uses cancel_delayed_work() in xc5000_release(), which
does not guarantee that the delayed work item timer_sleep has fully
completed if it was already running. This leads to use-after-free scenarios
where xc5000_release() may free the xc5000_priv while timer_sleep is still
active and attempts to dereference the xc5000_priv.

A typical race condition is illustrated below:

CPU 0 (release thread)                 | CPU 1 (delayed work callback)
xc5000_release()                       | xc5000_do_timer_sleep()
  cancel_delayed_work()                |
  hybrid_tuner_release_state(priv)     |
    kfree(priv)                        |
                                       |   priv = container_of() // UAF

Replace cancel_delayed_work() with cancel_delayed_work_sync() to ensure
that the timer_sleep is properly canceled before the xc5000_priv memory
is deallocated.

A deadlock concern was considered: xc5000_release() is called in a process
context and is not holding any locks that the timer_sleep work item might
also need. Therefore, the use of the _sync() variant is safe here.

This bug was initially identified through static analysis.

[hverkuil: fix typo in Subject: tunner -> tuner]

The Linux kernel CVE team has assigned CVE-2025-39994 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 3.16 with commit f7a27ff1fb77e114d1059a5eb2ed1cffdc508ce8 and fixed in 6.1.156 with commit df0303b4839520b84d9367c2fad65b13650a4d42
	Issue introduced in 3.16 with commit f7a27ff1fb77e114d1059a5eb2ed1cffdc508ce8 and fixed in 6.6.111 with commit 71ed8b81a4906cb785966910f39cf7f5ad60a69e
	Issue introduced in 3.16 with commit f7a27ff1fb77e114d1059a5eb2ed1cffdc508ce8 and fixed in 6.12.51 with commit effb1c19583bca7022fa641a70766de45c6d41ac
	Issue introduced in 3.16 with commit f7a27ff1fb77e114d1059a5eb2ed1cffdc508ce8 and fixed in 6.16.11 with commit 9a00de20ed8ba90888479749b87bc1532cded4ce
	Issue introduced in 3.16 with commit f7a27ff1fb77e114d1059a5eb2ed1cffdc508ce8 and fixed in 6.17.1 with commit 4266f012806fc18e46da4a04d130df59a4946f93
	Issue introduced in 3.16 with commit f7a27ff1fb77e114d1059a5eb2ed1cffdc508ce8 and fixed in 6.18-rc1 with commit 40b7a19f321e65789612ebaca966472055dab48c

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-39994
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/media/tuners/xc5000.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/df0303b4839520b84d9367c2fad65b13650a4d42
	https://git.kernel.org/stable/c/71ed8b81a4906cb785966910f39cf7f5ad60a69e
	https://git.kernel.org/stable/c/effb1c19583bca7022fa641a70766de45c6d41ac
	https://git.kernel.org/stable/c/9a00de20ed8ba90888479749b87bc1532cded4ce
	https://git.kernel.org/stable/c/4266f012806fc18e46da4a04d130df59a4946f93
	https://git.kernel.org/stable/c/40b7a19f321e65789612ebaca966472055dab48c
