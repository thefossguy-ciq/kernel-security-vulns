From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-38427: video: screen_info: Relocate framebuffers behind PCI bridges
Message-Id: <2025072555-CVE-2025-38427-6e37@gregkh>
Content-Length: 3662
Lines: 79
X-Developer-Signature: v=1; a=openpgp-sha256; l=3742;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=mnl40rOtSblVpzqL8n6/QEX/8VrtlGY8m+HkRTGR6J0=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBnNE6+rJqZW9L7oOS7fPL/uqGZSaeMbgVfdBUf/1Rru2
 fBnxaVJHbEsDIJMDLJiiixftvEc3V9xSNHL0PY0zBxWJpAhDFycAjCRE8EMCxY1/9dePX3hAdcp
 xtvF+U/v06vh8WSYX8Yssfpco9Puk+tPJnKY1uhqtVrrAgA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

video: screen_info: Relocate framebuffers behind PCI bridges

Apply PCI host-bridge window offsets to screen_info framebuffers. Fixes
invalid access to I/O memory.

Resources behind a PCI host bridge can be relocated by a certain offset
in the kernel's CPU address range used for I/O. The framebuffer memory
range stored in screen_info refers to the CPU addresses as seen during
boot (where the offset is 0). During boot up, firmware may assign a
different memory offset to the PCI host bridge and thereby relocating
the framebuffer address of the PCI graphics device as seen by the kernel.
The information in screen_info must be updated as well.

The helper pcibios_bus_to_resource() performs the relocation of the
screen_info's framebuffer resource (given in PCI bus addresses). The
result matches the I/O-memory resource of the PCI graphics device (given
in CPU addresses). As before, we store away the information necessary to
later update the information in screen_info itself.

Commit 78aa89d1dfba ("firmware/sysfb: Update screen_info for relocated
EFI framebuffers") added the code for updating screen_info. It is based
on similar functionality that pre-existed in efifb. Efifb uses a pointer
to the PCI resource, while the newer code does a memcpy of the region.
Hence efifb sees any updates to the PCI resource and avoids the issue.

v3:
- Only use struct pci_bus_region for PCI bus addresses (Bjorn)
- Clarify address semantics in commit messages and comments (Bjorn)
v2:
- Fixed tags (Takashi, Ivan)
- Updated information on efifb

The Linux kernel CVE team has assigned CVE-2025-38427 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 6.6.45 with commit a168da3182f8727b338509cb413147aa29012d6f and fixed in 6.6.95 with commit cc3cc41ed67054a03134bea42408c720eec0fa04
	Issue introduced in 6.9 with commit 78aa89d1dfba1e3cf4a2e053afa3b4c4ec622371 and fixed in 6.12.35 with commit 5c70e3ad85d2890d8af375333699429de26327f2
	Issue introduced in 6.9 with commit 78aa89d1dfba1e3cf4a2e053afa3b4c4ec622371 and fixed in 6.15.4 with commit aeda386d86d79269a08f470dbdc53d13a91e51fa
	Issue introduced in 6.9 with commit 78aa89d1dfba1e3cf4a2e053afa3b4c4ec622371 and fixed in 6.16-rc1 with commit 2f29b5c231011b94007d2c8a6d793992f2275db1

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-38427
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/video/screen_info_pci.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/cc3cc41ed67054a03134bea42408c720eec0fa04
	https://git.kernel.org/stable/c/5c70e3ad85d2890d8af375333699429de26327f2
	https://git.kernel.org/stable/c/aeda386d86d79269a08f470dbdc53d13a91e51fa
	https://git.kernel.org/stable/c/2f29b5c231011b94007d2c8a6d793992f2275db1
