From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-38689: x86/fpu: Fix NULL dereference in avx512_status()
Message-Id: <2025090448-CVE-2025-38689-ac95@gregkh>
Content-Length: 2813
Lines: 73
X-Developer-Signature: v=1; a=openpgp-sha256; l=2887;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=zgqt7VMIeKJXpqSSQcKxf6SVdF9Mk8H+uzi3gt2j44k=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBk7NyqKnO1wKn7mH33wGUvF/NPBDxWC70vGfuD0niy++
 kfnRaXpHbEsDIJMDLJiiixftvEc3V9xSNHL0PY0zBxWJpAhDFycAjCRbE6G+a7vp4a0S7YJB0R1
 p5wQu7TNq+ZXAMP8yuKlpze7uvo8eLMp3T+7X0zAWPk9AA==
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

x86/fpu: Fix NULL dereference in avx512_status()

Problem
-------
With CONFIG_X86_DEBUG_FPU enabled, reading /proc/[kthread]/arch_status
causes a warning and a NULL pointer dereference.

This is because the AVX-512 timestamp code uses x86_task_fpu() but
doesn't check it for NULL. CONFIG_X86_DEBUG_FPU addles that function
for kernel threads (PF_KTHREAD specifically), making it return NULL.

The point of the warning was to ensure that kernel threads only access
task->fpu after going through kernel_fpu_begin()/_end(). Note: all
kernel tasks exposed in /proc have a valid task->fpu.

Solution
--------
One option is to silence the warning and check for NULL from
x86_task_fpu(). However, that warning is fairly fresh and seems like a
defense against misuse of the FPU state in kernel threads.

Instead, stop outputting AVX-512_elapsed_ms for kernel threads
altogether. The data was garbage anyway because avx512_timestamp is
only updated for user threads, not kernel threads.

If anyone ever wants to track kernel thread AVX-512 use, they can come
back later and do it properly, separate from this bug fix.

[ dhansen: mostly rewrite changelog ]

The Linux kernel CVE team has assigned CVE-2025-38689 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 6.16 with commit 22aafe3bcb67472effdea1ccf0df20280192bbaf and fixed in 6.16.2 with commit 2ca887e81095b99d890a8878841f36f4920181e6
	Issue introduced in 6.16 with commit 22aafe3bcb67472effdea1ccf0df20280192bbaf and fixed in 6.17-rc2 with commit 31cd31c9e17ece125aad27259501a2af69ccb020

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-38689
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	arch/x86/kernel/fpu/xstate.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/2ca887e81095b99d890a8878841f36f4920181e6
	https://git.kernel.org/stable/c/31cd31c9e17ece125aad27259501a2af69ccb020
