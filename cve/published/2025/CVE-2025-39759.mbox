From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-39759: btrfs: qgroup: fix race between quota disable and quota rescan ioctl

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

btrfs: qgroup: fix race between quota disable and quota rescan ioctl

There's a race between a task disabling quotas and another running the
rescan ioctl that can result in a use-after-free of qgroup records from
the fs_info->qgroup_tree rbtree.

This happens as follows:

1) Task A enters btrfs_ioctl_quota_rescan() -> btrfs_qgroup_rescan();

2) Task B enters btrfs_quota_disable() and calls
   btrfs_qgroup_wait_for_completion(), which does nothing because at that
   point fs_info->qgroup_rescan_running is false (it wasn't set yet by
   task A);

3) Task B calls btrfs_free_qgroup_config() which starts freeing qgroups
   from fs_info->qgroup_tree without taking the lock fs_info->qgroup_lock;

4) Task A enters qgroup_rescan_zero_tracking() which starts iterating
   the fs_info->qgroup_tree tree while holding fs_info->qgroup_lock,
   but task B is freeing qgroup records from that tree without holding
   the lock, resulting in a use-after-free.

Fix this by taking fs_info->qgroup_lock at btrfs_free_qgroup_config().
Also at btrfs_qgroup_rescan() don't start the rescan worker if quotas
were already disabled.

The Linux kernel CVE team has assigned CVE-2025-39759 to this issue.


Affected and fixed versions
===========================

	Fixed in 6.1.149 with commit 7cda0fdde5d9890976861421d207870500f9aace
	Fixed in 6.6.103 with commit b172535ccba12f0cf7d23b3b840989de47fc104d
	Fixed in 6.12.44 with commit dd0b28d877b293b1d7f8727a7de08ae36b6b9ef0
	Fixed in 6.15.11 with commit c38028ce0d0045ca600b6a8345a0ff92bfb47b66
	Fixed in 6.16.2 with commit 2fd0f5ceb997f90f4332ccbab6c7e907e6b2d0eb
	Fixed in 6.17 with commit e1249667750399a48cafcf5945761d39fa584edf

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-39759
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	fs/btrfs/qgroup.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/7cda0fdde5d9890976861421d207870500f9aace
	https://git.kernel.org/stable/c/b172535ccba12f0cf7d23b3b840989de47fc104d
	https://git.kernel.org/stable/c/dd0b28d877b293b1d7f8727a7de08ae36b6b9ef0
	https://git.kernel.org/stable/c/c38028ce0d0045ca600b6a8345a0ff92bfb47b66
	https://git.kernel.org/stable/c/2fd0f5ceb997f90f4332ccbab6c7e907e6b2d0eb
	https://git.kernel.org/stable/c/e1249667750399a48cafcf5945761d39fa584edf
