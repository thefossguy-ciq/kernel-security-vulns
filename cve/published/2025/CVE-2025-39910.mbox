From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-39910: mm/vmalloc, mm/kasan: respect gfp mask in kasan_populate_vmalloc()
Message-Id: <2025100110-CVE-2025-39910-568a@gregkh>
Content-Length: 2721
Lines: 69
X-Developer-Signature: v=1; a=openpgp-sha256; l=2791;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=D6YWXFfxenEW/5JRGOdg0ytMvHUrIdmxJi7LWk94CzA=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBl37tT5pK/df+Rd5EbFh46WZTE8Sxj15EWfKCz6+G6No
 q7AZlmbjlgWBkEmBlkxRZYv23iO7q84pOhlaHsaZg4rE8gQBi5OAZiIojDDgknnWP4kq+xj5my9
 rrM89/8ijWPsTxjmp+wPWeL5uJDx9u5NHY8U27t09bQzAQ==
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

mm/vmalloc, mm/kasan: respect gfp mask in kasan_populate_vmalloc()

kasan_populate_vmalloc() and its helpers ignore the caller's gfp_mask and
always allocate memory using the hardcoded GFP_KERNEL flag.  This makes
them inconsistent with vmalloc(), which was recently extended to support
GFP_NOFS and GFP_NOIO allocations.

Page table allocations performed during shadow population also ignore the
external gfp_mask.  To preserve the intended semantics of GFP_NOFS and
GFP_NOIO, wrap the apply_to_page_range() calls into the appropriate
memalloc scope.

xfs calls vmalloc with GFP_NOFS, so this bug could lead to deadlock.

There was a report here
https://lkml.kernel.org/r/686ea951.050a0220.385921.0016.GAE@google.com

This patch:
 - Extends kasan_populate_vmalloc() and helpers to take gfp_mask;
 - Passes gfp_mask down to alloc_pages_bulk() and __get_free_page();
 - Enforces GFP_NOFS/NOIO semantics with memalloc_*_save()/restore()
   around apply_to_page_range();
 - Updates vmalloc.c and percpu allocator call sites accordingly.

The Linux kernel CVE team has assigned CVE-2025-39910 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.17 with commit 451769ebb7e792c3404db53b3c2a422990de654e and fixed in 6.16.8 with commit 33b95d90427cb4babf32059e323a6d0c027610fe
	Issue introduced in 5.17 with commit 451769ebb7e792c3404db53b3c2a422990de654e and fixed in 6.17 with commit 79357cd06d41d0f5a11b17d7c86176e395d10ef2

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-39910
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	include/linux/kasan.h
	mm/kasan/shadow.c
	mm/vmalloc.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/33b95d90427cb4babf32059e323a6d0c027610fe
	https://git.kernel.org/stable/c/79357cd06d41d0f5a11b17d7c86176e395d10ef2
