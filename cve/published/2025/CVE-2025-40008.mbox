From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-40008: kmsan: fix out-of-bounds access to shadow memory
Message-Id: <2025102002-CVE-2025-40008-0009@gregkh>
Content-Length: 4254
Lines: 90
X-Developer-Signature: v=1; a=openpgp-sha256; l=4345;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=1GbtKvgGSgd+YA6l3Fpc0QFcrriRc1lXI1/+hh/fBhM=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBnfQo6VPj78QuLule5mhk/RfEmspUWXs949uCGzkUFv4
 0V5lazdHbEsDIJMDLJiiixftvEc3V9xSNHL0PY0zBxWJpAhDFycAjCR93MZ5nDtXLHoRP2kORtV
 +W/GH0gREbG9uZBhwab7rnWLE56zHurbdEfETni5/+V9IgA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

kmsan: fix out-of-bounds access to shadow memory

Running sha224_kunit on a KMSAN-enabled kernel results in a crash in
kmsan_internal_set_shadow_origin():

    BUG: unable to handle page fault for address: ffffbc3840291000
    #PF: supervisor read access in kernel mode
    #PF: error_code(0x0000) - not-present page
    PGD 1810067 P4D 1810067 PUD 192d067 PMD 3c17067 PTE 0
    Oops: 0000 [#1] SMP NOPTI
    CPU: 0 UID: 0 PID: 81 Comm: kunit_try_catch Tainted: G                 N  6.17.0-rc3 #10 PREEMPT(voluntary)
    Tainted: [N]=TEST
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.17.0-0-gb52ca86e094d-prebuilt.qemu.org 04/01/2014
    RIP: 0010:kmsan_internal_set_shadow_origin+0x91/0x100
    [...]
    Call Trace:
    <TASK>
    __msan_memset+0xee/0x1a0
    sha224_final+0x9e/0x350
    test_hash_buffer_overruns+0x46f/0x5f0
    ? kmsan_get_shadow_origin_ptr+0x46/0xa0
    ? __pfx_test_hash_buffer_overruns+0x10/0x10
    kunit_try_run_case+0x198/0xa00

This occurs when memset() is called on a buffer that is not 4-byte aligned
and extends to the end of a guard page, i.e.  the next page is unmapped.

The bug is that the loop at the end of kmsan_internal_set_shadow_origin()
accesses the wrong shadow memory bytes when the address is not 4-byte
aligned.  Since each 4 bytes are associated with an origin, it rounds the
address and size so that it can access all the origins that contain the
buffer.  However, when it checks the corresponding shadow bytes for a
particular origin, it incorrectly uses the original unrounded shadow
address.  This results in reads from shadow memory beyond the end of the
buffer's shadow memory, which crashes when that memory is not mapped.

To fix this, correctly align the shadow address before accessing the 4
shadow bytes corresponding to each origin.

The Linux kernel CVE team has assigned CVE-2025-40008 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 6.1.94 with commit 9ff078f5bad8990091f1639347de5e02636e9536 and fixed in 6.1.155 with commit e6684ed39edc35401a3341f85b1ab50a6f89a45d
	Issue introduced in 6.6.34 with commit 19e85d939001946671643f4c16e1de8c633a6ce0 and fixed in 6.6.109 with commit df1fa034c0fc229a63d01ffb20bb919b839cb576
	Issue introduced in 6.10 with commit 2ef3cec44c60ae171b287db7fc2aa341586d65ba and fixed in 6.12.50 with commit f84e48707051812289b6c2684d4df2daa9d3bfbc
	Issue introduced in 6.10 with commit 2ef3cec44c60ae171b287db7fc2aa341586d65ba and fixed in 6.16.10 with commit 5855792c6bb9a825607845db3feaddaff0414ec3
	Issue introduced in 6.10 with commit 2ef3cec44c60ae171b287db7fc2aa341586d65ba and fixed in 6.17 with commit 85e1ff61060a765d91ee62dc5606d4d547d9d105
	Issue introduced in 6.9.5 with commit abeede7011da6c88e83ed260b909c140b8c9c250

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-40008
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	mm/kmsan/core.c
	mm/kmsan/kmsan_test.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/e6684ed39edc35401a3341f85b1ab50a6f89a45d
	https://git.kernel.org/stable/c/df1fa034c0fc229a63d01ffb20bb919b839cb576
	https://git.kernel.org/stable/c/f84e48707051812289b6c2684d4df2daa9d3bfbc
	https://git.kernel.org/stable/c/5855792c6bb9a825607845db3feaddaff0414ec3
	https://git.kernel.org/stable/c/85e1ff61060a765d91ee62dc5606d4d547d9d105
