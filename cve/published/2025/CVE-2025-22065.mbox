From bippy-7c5fe7eed585 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-22065: idpf: fix adapter NULL pointer dereference on reboot
Message-Id: <2025041608-CVE-2025-22065-ef5b@gregkh>
Content-Length: 3549
Lines: 85
X-Developer-Signature: v=1; a=openpgp-sha256; l=3635;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=uPWT9nWm/BXXPIrZd0n1hHFs6WiKFrAQriOSfs89o5s=;
 b=kA0DAAIRMUfUDdst+ykByyZiAGf/urijYZz7jinM+9CGdxQ3Clifvx3FXh4LRUlrTgUBtRHbk
 IhdBAARAgAdFiEE9LYMxb94wiFKMT3LMUfUDdst+ykFAmf/urgACgkQMUfUDdst+ykX1wCguSlM
 jZQjp3XwmAdpn5aUrE4U9EsAoMuuWNdnRnHRbGkNaB1tdWLYtFdj
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

idpf: fix adapter NULL pointer dereference on reboot

With SRIOV enabled, idpf ends up calling into idpf_remove() twice.
First via idpf_shutdown() and then again when idpf_remove() calls into
sriov_disable(), because the VF devices use the idpf driver, hence the
same remove routine. When that happens, it is possible for the adapter
to be NULL from the first call to idpf_remove(), leading to a NULL
pointer dereference.

echo 1 > /sys/class/net/<netif>/device/sriov_numvfs
reboot

BUG: kernel NULL pointer dereference, address: 0000000000000020
...
RIP: 0010:idpf_remove+0x22/0x1f0 [idpf]
...
? idpf_remove+0x22/0x1f0 [idpf]
? idpf_remove+0x1e4/0x1f0 [idpf]
pci_device_remove+0x3f/0xb0
device_release_driver_internal+0x19f/0x200
pci_stop_bus_device+0x6d/0x90
pci_stop_and_remove_bus_device+0x12/0x20
pci_iov_remove_virtfn+0xbe/0x120
sriov_disable+0x34/0xe0
idpf_sriov_configure+0x58/0x140 [idpf]
idpf_remove+0x1b9/0x1f0 [idpf]
idpf_shutdown+0x12/0x30 [idpf]
pci_device_shutdown+0x35/0x60
device_shutdown+0x156/0x200
...

Replace the direct idpf_remove() call in idpf_shutdown() with
idpf_vc_core_deinit() and idpf_deinit_dflt_mbx(), which perform
the bulk of the cleanup, such as stopping the init task, freeing IRQs,
destroying the vports and freeing the mailbox. This avoids the calls to
sriov_disable() in addition to a small netdev cleanup, and destroying
workqueues, which don't seem to be required on shutdown.

The Linux kernel CVE team has assigned CVE-2025-22065 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 6.7 with commit e850efed5e152e6bdd367d5b82019f21298c0653 and fixed in 6.12.23 with commit 79618e952ef4dfa1a17ee0631d5549603fab58d8
	Issue introduced in 6.7 with commit e850efed5e152e6bdd367d5b82019f21298c0653 and fixed in 6.13.11 with commit 88a6d562e92a295648f8636acf2a6aa714241771
	Issue introduced in 6.7 with commit e850efed5e152e6bdd367d5b82019f21298c0653 and fixed in 6.14.2 with commit 9fc9b3dc0d0c189ed205acf1e5fbd73e0becc4d6
	Issue introduced in 6.7 with commit e850efed5e152e6bdd367d5b82019f21298c0653 and fixed in 6.15-rc1 with commit 4c9106f4906a85f6b13542d862e423bcdc118cc3

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-22065
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/net/ethernet/intel/idpf/idpf_main.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/79618e952ef4dfa1a17ee0631d5549603fab58d8
	https://git.kernel.org/stable/c/88a6d562e92a295648f8636acf2a6aa714241771
	https://git.kernel.org/stable/c/9fc9b3dc0d0c189ed205acf1e5fbd73e0becc4d6
	https://git.kernel.org/stable/c/4c9106f4906a85f6b13542d862e423bcdc118cc3
