From bippy-7c5fe7eed585 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-22027: media: streamzap: fix race between device disconnection and urb callback
Message-Id: <2025041655-CVE-2025-22027-d850@gregkh>
Content-Length: 3487
Lines: 68
X-Developer-Signature: v=1; a=openpgp-sha256; l=3556;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=IxHP3E0UfSK078qHYaGLcWhSyJGMiy0GeSUviI/q2FU=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDOn/d61WWZtjWzVFP3G2nc6yWVejOa0KI+Nllm2SKb1ab
 GMR/SSpI5aFQZCJQVZMkeXLNp6j+ysOKXoZ2p6GmcPKBDKEgYtTACby9BrDgrOpiw02vH1/O39C
 lklQQGtMFMu0CQzzC1L/O144Zvx6AcPhO0VfUxeXRU+8BQA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

media: streamzap: fix race between device disconnection and urb callback

Syzkaller has reported a general protection fault at function
ir_raw_event_store_with_filter(). This crash is caused by a NULL pointer
dereference of dev->raw pointer, even though it is checked for NULL in
the same function, which means there is a race condition. It occurs due
to the incorrect order of actions in the streamzap_disconnect() function:
rc_unregister_device() is called before usb_kill_urb(). The dev->raw
pointer is freed and set to NULL in rc_unregister_device(), and only
after that usb_kill_urb() waits for in-progress requests to finish.

If rc_unregister_device() is called while streamzap_callback() handler is
not finished, this can lead to accessing freed resources. Thus
rc_unregister_device() should be called after usb_kill_urb().

Found by Linux Verification Center (linuxtesting.org) with Syzkaller.

The Linux kernel CVE team has assigned CVE-2025-22027 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 2.6.36 with commit 8e9e60640067858e8036d4d43bbf725c60613359 and fixed in 6.1.134 with commit 30ef7cfee752ca318d5902cb67b60d9797ccd378
	Issue introduced in 2.6.36 with commit 8e9e60640067858e8036d4d43bbf725c60613359 and fixed in 6.6.87 with commit 15483afb930fc2f883702dc96f80efbe4055235e
	Issue introduced in 2.6.36 with commit 8e9e60640067858e8036d4d43bbf725c60613359 and fixed in 6.12.23 with commit adf0ddb914c9e5b3e50da4c97959e82de2df75c3
	Issue introduced in 2.6.36 with commit 8e9e60640067858e8036d4d43bbf725c60613359 and fixed in 6.13.11 with commit 4db62b60af2ccdea6ac5452fd20e29587ed85f57
	Issue introduced in 2.6.36 with commit 8e9e60640067858e8036d4d43bbf725c60613359 and fixed in 6.14.2 with commit 8760da4b9d44c36b93b6e4cf401ec7fe520015bd
	Issue introduced in 2.6.36 with commit 8e9e60640067858e8036d4d43bbf725c60613359 and fixed in 6.15-rc1 with commit f656cfbc7a293a039d6a0c7100e1c846845148c1

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-22027
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/media/rc/streamzap.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/30ef7cfee752ca318d5902cb67b60d9797ccd378
	https://git.kernel.org/stable/c/15483afb930fc2f883702dc96f80efbe4055235e
	https://git.kernel.org/stable/c/adf0ddb914c9e5b3e50da4c97959e82de2df75c3
	https://git.kernel.org/stable/c/4db62b60af2ccdea6ac5452fd20e29587ed85f57
	https://git.kernel.org/stable/c/8760da4b9d44c36b93b6e4cf401ec7fe520015bd
	https://git.kernel.org/stable/c/f656cfbc7a293a039d6a0c7100e1c846845148c1
