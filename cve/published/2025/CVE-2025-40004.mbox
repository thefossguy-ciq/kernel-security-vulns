From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-40004: net/9p: Fix buffer overflow in USB transport layer
Message-Id: <2025102012-CVE-2025-40004-a709@gregkh>
Content-Length: 2592
Lines: 63
X-Developer-Signature: v=1; a=openpgp-sha256; l=2656;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=RAoFFZCm60K/UyfBi23qMWzucXiYY5JnftC8h2WmoY4=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBlfj3/JvCvvwfvgW8yU17sWZG1YmX5491vrmxN+nt9qd
 u3U8p0c2h2xLAyCTAyyYoosX7bxHN1fcUjRy9D2NMwcViaQIQxcnAIwEac1DAvW9KyZ2fry8/XI
 lLozz27axsVu4d7AMJt9aqie2/qq18/vVO17+CHoXo8eQwkA
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

net/9p: Fix buffer overflow in USB transport layer

A buffer overflow vulnerability exists in the USB 9pfs transport layer
where inconsistent size validation between packet header parsing and
actual data copying allows a malicious USB host to overflow heap buffers.

The issue occurs because:
- usb9pfs_rx_header() validates only the declared size in packet header
- usb9pfs_rx_complete() uses req->actual (actual received bytes) for
memcpy

This allows an attacker to craft packets with small declared size
(bypassing validation) but large actual payload (triggering overflow
in memcpy).

Add validation in usb9pfs_rx_complete() to ensure req->actual does not
exceed the buffer capacity before copying data.

The Linux kernel CVE team has assigned CVE-2025-40004 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 6.12 with commit a3be076dc174d9022a71a12554feb4c97b5c4d5c and fixed in 6.12.53 with commit 0da18d49f874d444ad83c8a546fa33bfcf2f582c
	Issue introduced in 6.12 with commit a3be076dc174d9022a71a12554feb4c97b5c4d5c and fixed in 6.17.3 with commit df8462f0fc045b4475dc494a5787a03c972ba2a2
	Issue introduced in 6.12 with commit a3be076dc174d9022a71a12554feb4c97b5c4d5c and fixed in 6.18-rc1 with commit c04db81cd0288dfc68b7a0f7d09bd49b40bba451

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-40004
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	net/9p/trans_usbg.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/0da18d49f874d444ad83c8a546fa33bfcf2f582c
	https://git.kernel.org/stable/c/df8462f0fc045b4475dc494a5787a03c972ba2a2
	https://git.kernel.org/stable/c/c04db81cd0288dfc68b7a0f7d09bd49b40bba451
