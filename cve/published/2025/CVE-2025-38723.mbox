From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-38723: LoongArch: BPF: Fix jump offset calculation in tailcall
Message-Id: <2025090401-CVE-2025-38723-18f0@gregkh>
Content-Length: 3430
Lines: 77
X-Developer-Signature: v=1; a=openpgp-sha256; l=3508;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=K2wEWT/Arq0gDpah7eQ0BPYGbEx9Ks45IOUKF9yblmo=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBk7N+p+cyky2Vk6ocPu7WcGhXO2i+ZMnDrXubi8M37jR
 e7u8omzOmJZGASZGGTFFFm+bOM5ur/ikKKXoe1pmDmsTCBDGLg4BWAi1qsZ5idvcZE4zezoeqJP
 vmDnHGeLJpcdxgzzg1Pl80JUb/cbar6KW7YrateXuhQOAA==
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

LoongArch: BPF: Fix jump offset calculation in tailcall

The extra pass of bpf_int_jit_compile() skips JIT context initialization
which essentially skips offset calculation leaving out_offset = -1, so
the jmp_offset in emit_bpf_tail_call is calculated by

"#define jmp_offset (out_offset - (cur_offset))"

is a negative number, which is wrong. The final generated assembly are
as follow.

54:	bgeu        	$a2, $t1, -8	    # 0x0000004c
58:	addi.d      	$a6, $s5, -1
5c:	bltz        	$a6, -16	    # 0x0000004c
60:	alsl.d      	$t2, $a2, $a1, 0x3
64:	ld.d        	$t2, $t2, 264
68:	beq         	$t2, $zero, -28	    # 0x0000004c

Before apply this patch, the follow test case will reveal soft lock issues.

cd tools/testing/selftests/bpf/
./test_progs --allow=tailcalls/tailcall_bpf2bpf_1

dmesg:
watchdog: BUG: soft lockup - CPU#2 stuck for 26s! [test_progs:25056]

The Linux kernel CVE team has assigned CVE-2025-38723 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 6.1 with commit 5dc615520c4dfb358245680f1904bad61116648e and fixed in 6.1.149 with commit 1a782fa32e644aa9fbae6c8488f3e61221ac96e1
	Issue introduced in 6.1 with commit 5dc615520c4dfb358245680f1904bad61116648e and fixed in 6.6.103 with commit 17c010fe45def335fe03a0718935416b04c7f349
	Issue introduced in 6.1 with commit 5dc615520c4dfb358245680f1904bad61116648e and fixed in 6.12.43 with commit f83d469e16bb1f75991ca67c56786fb2aaa42bea
	Issue introduced in 6.1 with commit 5dc615520c4dfb358245680f1904bad61116648e and fixed in 6.15.11 with commit f2b5e50cc04d7a049b385bc1c93b9cbf5f10c94f
	Issue introduced in 6.1 with commit 5dc615520c4dfb358245680f1904bad61116648e and fixed in 6.16.2 with commit 9262e3e04621558e875eb5afb5e726b648cd5949
	Issue introduced in 6.1 with commit 5dc615520c4dfb358245680f1904bad61116648e and fixed in 6.17-rc1 with commit cd39d9e6b7e4c58fa77783e7aedf7ada51d02ea3

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-38723
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	arch/loongarch/net/bpf_jit.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/1a782fa32e644aa9fbae6c8488f3e61221ac96e1
	https://git.kernel.org/stable/c/17c010fe45def335fe03a0718935416b04c7f349
	https://git.kernel.org/stable/c/f83d469e16bb1f75991ca67c56786fb2aaa42bea
	https://git.kernel.org/stable/c/f2b5e50cc04d7a049b385bc1c93b9cbf5f10c94f
	https://git.kernel.org/stable/c/9262e3e04621558e875eb5afb5e726b648cd5949
	https://git.kernel.org/stable/c/cd39d9e6b7e4c58fa77783e7aedf7ada51d02ea3
