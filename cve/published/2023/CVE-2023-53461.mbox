From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2023-53461: io_uring: wait interruptibly for request completions on exit

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

io_uring: wait interruptibly for request completions on exit

WHen the ring exits, cleanup is done and the final cancelation and
waiting on completions is done by io_ring_exit_work. That function is
invoked by kworker, which doesn't take any signals. Because of that, it
doesn't really matter if we wait for completions in TASK_INTERRUPTIBLE
or TASK_UNINTERRUPTIBLE state. However, it does matter to the hung task
detection checker!

Normally we expect cancelations and completions to happen rather
quickly. Some test cases, however, will exit the ring and park the
owning task stopped (eg via SIGSTOP). If the owning task needs to run
task_work to complete requests, then io_ring_exit_work won't make any
progress until the task is runnable again. Hence io_ring_exit_work can
trigger the hung task detection, which is particularly problematic if
panic-on-hung-task is enabled.

As the ring exit doesn't take signals to begin with, have it wait
interruptibly rather than uninterruptibly. io_uring has a separate
stuck-exit warning that triggers independently anyway, so we're not
really missing anything by making this switch.

The Linux kernel CVE team has assigned CVE-2023-53461 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.1 with commit 2b188cc1bb857a9d4701ae59aa7768b5124e262e and fixed in 5.10.188 with commit 28e649dc9947e6525c95e32aa9a8e147925e3f56
	Issue introduced in 5.1 with commit 2b188cc1bb857a9d4701ae59aa7768b5124e262e and fixed in 5.15.121 with commit 8e29835366138389bfad3b31ea06960d0a77bf77
	Issue introduced in 5.1 with commit 2b188cc1bb857a9d4701ae59aa7768b5124e262e and fixed in 6.1.39 with commit b50d6e06cca7b67a3d73ca660dda27662b76e6ea
	Issue introduced in 5.1 with commit 2b188cc1bb857a9d4701ae59aa7768b5124e262e and fixed in 6.4.4 with commit 58e80cb68b057e974768792c34708c6957810486
	Issue introduced in 5.1 with commit 2b188cc1bb857a9d4701ae59aa7768b5124e262e and fixed in 6.5 with commit 4826c59453b3b4677d6bf72814e7ababdea86949

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2023-53461
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	io_uring/io_uring.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/28e649dc9947e6525c95e32aa9a8e147925e3f56
	https://git.kernel.org/stable/c/8e29835366138389bfad3b31ea06960d0a77bf77
	https://git.kernel.org/stable/c/b50d6e06cca7b67a3d73ca660dda27662b76e6ea
	https://git.kernel.org/stable/c/58e80cb68b057e974768792c34708c6957810486
	https://git.kernel.org/stable/c/4826c59453b3b4677d6bf72814e7ababdea86949
