From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2023-53713: arm64: sme: Use STR P to clear FFR context field in streaming SVE mode

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

arm64: sme: Use STR P to clear FFR context field in streaming SVE mode

The FFR is a predicate register which can vary between 16 and 256 bits
in size depending upon the configured vector length. When saving the
SVE state in streaming SVE mode, the FFR register is inaccessible and
so commit 9f5848665788 ("arm64/sve: Make access to FFR optional") simply
clears the FFR field of the in-memory context structure. Unfortunately,
it achieves this using an unconditional 8-byte store and so if the SME
vector length is anything other than 64 bytes in size we will either
fail to clear the entire field or, worse, we will corrupt memory
immediately following the structure. This has led to intermittent kfence
splats in CI [1] and can trigger kmalloc Redzone corruption messages
when running the 'fp-stress' kselftest:

 | =============================================================================
 | BUG kmalloc-1k (Not tainted): kmalloc Redzone overwritten
 | -----------------------------------------------------------------------------
 |
 | 0xffff000809bf1e22-0xffff000809bf1e27 @offset=7714. First byte 0x0 instead of 0xcc
 | Allocated in do_sme_acc+0x9c/0x220 age=2613 cpu=1 pid=531
 |  __kmalloc+0x8c/0xcc
 |  do_sme_acc+0x9c/0x220
 |  ...

Replace the 8-byte store with a store of a predicate register which has
been zero-initialised with PFALSE, ensuring that the entire field is
cleared in memory.

[1] https://lore.kernel.org/r/CA+G9fYtU7HsV0R0dp4XEH5xXHSJFw8KyDf5VQrLLfMxWfxQkag@mail.gmail.com

The Linux kernel CVE team has assigned CVE-2023-53713 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.16 with commit 9f5848665788a0f07bc175cb2cdd06d367b7556e and fixed in 6.1.39 with commit 97669214944e80d3756657c21c4f286f3da6a423
	Issue introduced in 5.16 with commit 9f5848665788a0f07bc175cb2cdd06d367b7556e and fixed in 6.3.13 with commit 8769a62faacbbb6cac5e35d9047ce445183d4e9f
	Issue introduced in 5.16 with commit 9f5848665788a0f07bc175cb2cdd06d367b7556e and fixed in 6.4.4 with commit 1403a899153a12d93fd510e463fd6d0eafba4336
	Issue introduced in 5.16 with commit 9f5848665788a0f07bc175cb2cdd06d367b7556e and fixed in 6.5 with commit 893b24181b4c4bf1fa2841b1ed192e5413a97cb1

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2023-53713
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	arch/arm64/include/asm/fpsimdmacros.h


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/97669214944e80d3756657c21c4f286f3da6a423
	https://git.kernel.org/stable/c/8769a62faacbbb6cac5e35d9047ce445183d4e9f
	https://git.kernel.org/stable/c/1403a899153a12d93fd510e463fd6d0eafba4336
	https://git.kernel.org/stable/c/893b24181b4c4bf1fa2841b1ed192e5413a97cb1
