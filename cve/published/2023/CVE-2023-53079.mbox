From bippy-1.1.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2023-53079: net/mlx5: Fix steering rules cleanup
Message-Id: <2025050216-CVE-2023-53079-448b@gregkh>
Content-Length: 3562
Lines: 81
X-Developer-Signature: v=1; a=openpgp-sha256; l=3644;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=W6IW+ONMmbp86pQfb/w0jUtunz0xlXd0rm92f8Zkp9E=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBkir57k1aQl/FHdUj3zduLcgvJfBc9Z/xtlOefOSuR0f
 Zt8p/VKRywLgyATg6yYIsuXbTxH91ccUvQytD0NM4eVCWQIAxenAExE2Z1hwYq+7MgIzYdf5q36
 uu5Qo7Pf6a9Xohhms6rx+n85qRFw0papM99u0pvDh2zXAAA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

net/mlx5: Fix steering rules cleanup

vport's mc, uc and multicast rules are not deleted in teardown path when
EEH happens. Since the vport's promisc settings(uc, mc and all) in
firmware are reset after EEH, mlx5 driver will try to delete the above
rules in the initialization path. This cause kernel crash because these
software rules are no longer valid.

Fix by nullifying these rules right after delete to avoid accessing any dangling
pointers.

Call Trace:
__list_del_entry_valid+0xcc/0x100 (unreliable)
tree_put_node+0xf4/0x1b0 [mlx5_core]
tree_remove_node+0x30/0x70 [mlx5_core]
mlx5_del_flow_rules+0x14c/0x1f0 [mlx5_core]
esw_apply_vport_rx_mode+0x10c/0x200 [mlx5_core]
esw_update_vport_rx_mode+0xb4/0x180 [mlx5_core]
esw_vport_change_handle_locked+0x1ec/0x230 [mlx5_core]
esw_enable_vport+0x130/0x260 [mlx5_core]
mlx5_eswitch_enable_sriov+0x2a0/0x2f0 [mlx5_core]
mlx5_device_enable_sriov+0x74/0x440 [mlx5_core]
mlx5_load_one+0x114c/0x1550 [mlx5_core]
mlx5_pci_resume+0x68/0xf0 [mlx5_core]
eeh_report_resume+0x1a4/0x230
eeh_pe_dev_traverse+0x98/0x170
eeh_handle_normal_event+0x3e4/0x640
eeh_handle_event+0x4c/0x370
eeh_event_handler+0x14c/0x210
kthread+0x168/0x1b0
ret_from_kernel_thread+0x5c/0x84

The Linux kernel CVE team has assigned CVE-2023-53079 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 4.7 with commit a35f71f27a614aff106cc89b86168962bce2725f and fixed in 5.10.177 with commit 18cead61e437f4c7898acca0a5f3df12f801d97f
	Issue introduced in 4.7 with commit a35f71f27a614aff106cc89b86168962bce2725f and fixed in 5.15.105 with commit 4df1f2d36bdc9a368650bf14b9097c555e95f71d
	Issue introduced in 4.7 with commit a35f71f27a614aff106cc89b86168962bce2725f and fixed in 6.1.22 with commit 63546395a0e6ac264f78f65218086ce6014b4494
	Issue introduced in 4.7 with commit a35f71f27a614aff106cc89b86168962bce2725f and fixed in 6.2.9 with commit 6f5780536181d1d0d09a11a1bc92f22e143447e2
	Issue introduced in 4.7 with commit a35f71f27a614aff106cc89b86168962bce2725f and fixed in 6.3 with commit 922f56e9a795d6f3dd72d3428ebdd7ee040fa855

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2023-53079
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/net/ethernet/mellanox/mlx5/core/eswitch.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/18cead61e437f4c7898acca0a5f3df12f801d97f
	https://git.kernel.org/stable/c/4df1f2d36bdc9a368650bf14b9097c555e95f71d
	https://git.kernel.org/stable/c/63546395a0e6ac264f78f65218086ce6014b4494
	https://git.kernel.org/stable/c/6f5780536181d1d0d09a11a1bc92f22e143447e2
	https://git.kernel.org/stable/c/922f56e9a795d6f3dd72d3428ebdd7ee040fa855
