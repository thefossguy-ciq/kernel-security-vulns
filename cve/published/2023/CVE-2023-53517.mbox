From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2023-53517: tipc: do not update mtu if msg_max is too small in mtu negotiation
Message-Id: <2025100132-CVE-2023-53517-da77@gregkh>
Content-Length: 3862
Lines: 87
X-Developer-Signature: v=1; a=openpgp-sha256; l=3950;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=XTkKcEY+i2BQFeBbzdewnhfKKtitghonmqJftZN96cU=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBl3RWIqXXnb4ufVJNz6KpGkrH1+zRQfmUnSGq29R9cU3
 be/FSbYEcvCIMjEICumyPJlG8/R/RWHFL0MbU/DzGFlAhnCwMUpABM5LMwwz9woKvDH1XU75D/f
 U4r84TXlQr/YNYYFa18845hu3TJF6kS669m3ovIHI292AAA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

tipc: do not update mtu if msg_max is too small in mtu negotiation

When doing link mtu negotiation, a malicious peer may send Activate msg
with a very small mtu, e.g. 4 in Shuang's testing, without checking for
the minimum mtu, l->mtu will be set to 4 in tipc_link_proto_rcv(), then
n->links[bearer_id].mtu is set to 4294967228, which is a overflow of
'4 - INT_H_SIZE - EMSG_OVERHEAD' in tipc_link_mss().

With tipc_link.mtu = 4, tipc_link_xmit() kept printing the warning:

 tipc: Too large msg, purging xmit list 1 5 0 40 4!
 tipc: Too large msg, purging xmit list 1 15 0 60 4!

And with tipc_link_entry.mtu 4294967228, a huge skb was allocated in
named_distribute(), and when purging it in tipc_link_xmit(), a crash
was even caused:

  general protection fault, probably for non-canonical address 0x2100001011000dd: 0000 [#1] PREEMPT SMP PTI
  CPU: 0 PID: 0 Comm: swapper/0 Kdump: loaded Not tainted 6.3.0.neta #19
  RIP: 0010:kfree_skb_list_reason+0x7e/0x1f0
  Call Trace:
   <IRQ>
   skb_release_data+0xf9/0x1d0
   kfree_skb_reason+0x40/0x100
   tipc_link_xmit+0x57a/0x740 [tipc]
   tipc_node_xmit+0x16c/0x5c0 [tipc]
   tipc_named_node_up+0x27f/0x2c0 [tipc]
   tipc_node_write_unlock+0x149/0x170 [tipc]
   tipc_rcv+0x608/0x740 [tipc]
   tipc_udp_recv+0xdc/0x1f0 [tipc]
   udp_queue_rcv_one_skb+0x33e/0x620
   udp_unicast_rcv_skb.isra.72+0x75/0x90
   __udp4_lib_rcv+0x56d/0xc20
   ip_protocol_deliver_rcu+0x100/0x2d0

This patch fixes it by checking the new mtu against tipc_bearer_min_mtu(),
and not updating mtu if it is too small.

The Linux kernel CVE team has assigned CVE-2023-53517 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 4.1 with commit ed193ece2649c194a87a9d8470195760d367c075 and fixed in 5.10.181 with commit 2bd4ff4ffb92113f8acd04dbaed83269172c24b4
	Issue introduced in 4.1 with commit ed193ece2649c194a87a9d8470195760d367c075 and fixed in 5.15.113 with commit 575e84d90a74c0b091b3417ba763ebb237aa0a8c
	Issue introduced in 4.1 with commit ed193ece2649c194a87a9d8470195760d367c075 and fixed in 6.1.30 with commit 259683001d7e879fea4b42084fb6560dd9408a7e
	Issue introduced in 4.1 with commit ed193ece2649c194a87a9d8470195760d367c075 and fixed in 6.3.4 with commit 1dd7ae5e0cf5a56e513f7ab7ab9570b7496281d2
	Issue introduced in 4.1 with commit ed193ece2649c194a87a9d8470195760d367c075 and fixed in 6.4 with commit 56077b56cd3fb78e1c8619e29581ba25a5c55e86

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2023-53517
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	net/tipc/link.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/2bd4ff4ffb92113f8acd04dbaed83269172c24b4
	https://git.kernel.org/stable/c/575e84d90a74c0b091b3417ba763ebb237aa0a8c
	https://git.kernel.org/stable/c/259683001d7e879fea4b42084fb6560dd9408a7e
	https://git.kernel.org/stable/c/1dd7ae5e0cf5a56e513f7ab7ab9570b7496281d2
	https://git.kernel.org/stable/c/56077b56cd3fb78e1c8619e29581ba25a5c55e86
