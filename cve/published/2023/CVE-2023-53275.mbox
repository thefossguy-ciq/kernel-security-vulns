From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2023-53275: ALSA: hda: fix a possible null-pointer dereference due to data race in snd_hdac_regmap_sync()
Message-Id: <2025091623-CVE-2023-53275-3ac4@gregkh>
Content-Length: 3127
Lines: 75
X-Developer-Signature: v=1; a=openpgp-sha256; l=3203;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=m9qIWeRj09wqsJA2Dy+9v99+OINAINHX3g4fo8ypi9s=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBknpVf7229fMeuf2ApNkzdaKTnHMlX7udaWCWdIBbQ9F
 76cuVSzI5aFQZCJQVZMkeXLNp6j+ysOKXoZ2p6GmcPKBDKEgYtTACayt51hwfIYpVWuvxfd6vZr
 PikdMkFC78yEdoZ5+lsX31up6P3x9fr4C0pFbckv3ep6AQ==
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

ALSA: hda: fix a possible null-pointer dereference due to data race in snd_hdac_regmap_sync()

The variable codec->regmap is often protected by the lock
codec->regmap_lock when is accessed. However, it is accessed without
holding the lock when is accessed in snd_hdac_regmap_sync():

  if (codec->regmap)

In my opinion, this may be a harmful race, because if codec->regmap is
set to NULL right after the condition is checked, a null-pointer
dereference can occur in the called function regcache_sync():

  map->lock(map->lock_arg); --> Line 360 in drivers/base/regmap/regcache.c

To fix this possible null-pointer dereference caused by data race, the
mutex_lock coverage is extended to protect the if statement as well as the
function call to regcache_sync().

[ Note: the lack of the regmap_lock itself is harmless for the current
  codec driver implementations, as snd_hdac_regmap_sync() is only for
  PM runtime resume that is prohibited during the codec probe.
  But the change makes the whole code more consistent, so it's merged
  as is -- tiwai ]

The Linux kernel CVE team has assigned CVE-2023-53275 to this issue.


Affected and fixed versions
===========================

	Fixed in 5.4.255 with commit 109f0aaa0b8838a88af9125b79579023539300a7
	Fixed in 5.10.192 with commit 9f9eed451176ffcac6b5ba0f6dae1a6b4a1cb0eb
	Fixed in 5.15.128 with commit 8703b26387e1fa4f8749db98d24c67617b873acb
	Fixed in 6.1.47 with commit cdd412b528dee6e0851c4735d6676ec138da13a4
	Fixed in 6.4.12 with commit b32e40379e5b2814de0c4bc199edc2d82317dc07
	Fixed in 6.5 with commit 1f4a08fed450db87fbb5ff5105354158bdbe1a22

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2023-53275
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	sound/hda/hdac_regmap.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/109f0aaa0b8838a88af9125b79579023539300a7
	https://git.kernel.org/stable/c/9f9eed451176ffcac6b5ba0f6dae1a6b4a1cb0eb
	https://git.kernel.org/stable/c/8703b26387e1fa4f8749db98d24c67617b873acb
	https://git.kernel.org/stable/c/cdd412b528dee6e0851c4735d6676ec138da13a4
	https://git.kernel.org/stable/c/b32e40379e5b2814de0c4bc199edc2d82317dc07
	https://git.kernel.org/stable/c/1f4a08fed450db87fbb5ff5105354158bdbe1a22
