From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2023-53471: drm/amdgpu/gfx: disable gfx9 cp_ecc_error_irq only when enabling legacy gfx ras
Message-Id: <2025100110-CVE-2023-53471-09f6@gregkh>
Content-Length: 3855
Lines: 83
X-Developer-Signature: v=1; a=openpgp-sha256; l=3939;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=GUePA21C3J0tZbFUd/J0mA0THgSxiDb9Em3u7r/J+b4=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBl3hScdmG3Nt4WP/+fvv+KPGfYnsu6p7Lu9lEUn0LyAl
 TfJ+sjmjlgWBkEmBlkxRZYv23iO7q84pOhlaHsaZg4rE8gQBi5OAZhItzPDgsVf166o+PAz0FuB
 i8Xdw+/200jxrQxzpXoeF3Nd5Z5xznQWr0vG+et3+oSvAgA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu/gfx: disable gfx9 cp_ecc_error_irq only when enabling legacy gfx ras

gfx9 cp_ecc_error_irq is only enabled when legacy gfx ras is assert.
So in gfx_v9_0_hw_fini, interrupt disablement for cp_ecc_error_irq
should be executed under such condition, otherwise, an amdgpu_irq_put
calltrace will occur.

[ 7283.170322] RIP: 0010:amdgpu_irq_put+0x45/0x70 [amdgpu]
[ 7283.170964] RSP: 0018:ffff9a5fc3967d00 EFLAGS: 00010246
[ 7283.170967] RAX: ffff98d88afd3040 RBX: ffff98d89da20000 RCX: 0000000000000000
[ 7283.170969] RDX: 0000000000000000 RSI: ffff98d89da2bef8 RDI: ffff98d89da20000
[ 7283.170971] RBP: ffff98d89da20000 R08: ffff98d89da2ca18 R09: 0000000000000006
[ 7283.170973] R10: ffffd5764243c008 R11: 0000000000000000 R12: 0000000000001050
[ 7283.170975] R13: ffff98d89da38978 R14: ffffffff999ae15a R15: ffff98d880130105
[ 7283.170978] FS:  0000000000000000(0000) GS:ffff98d996f00000(0000) knlGS:0000000000000000
[ 7283.170981] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[ 7283.170983] CR2: 00000000f7a9d178 CR3: 00000001c42ea000 CR4: 00000000003506e0
[ 7283.170986] Call Trace:
[ 7283.170988]  <TASK>
[ 7283.170989]  gfx_v9_0_hw_fini+0x1c/0x6d0 [amdgpu]
[ 7283.171655]  amdgpu_device_ip_suspend_phase2+0x101/0x1a0 [amdgpu]
[ 7283.172245]  amdgpu_device_suspend+0x103/0x180 [amdgpu]
[ 7283.172823]  amdgpu_pmops_freeze+0x21/0x60 [amdgpu]
[ 7283.173412]  pci_pm_freeze+0x54/0xc0
[ 7283.173419]  ? __pfx_pci_pm_freeze+0x10/0x10
[ 7283.173425]  dpm_run_callback+0x98/0x200
[ 7283.173430]  __device_suspend+0x164/0x5f0

v2: drop gfx11 as it's fixed in a different solution by retiring cp_ecc_irq funcs(Hawking)

The Linux kernel CVE team has assigned CVE-2023-53471 to this issue.


Affected and fixed versions
===========================

	Fixed in 5.4.243 with commit 625d4112ea25dbad7ddf749fd5c1287ceffb2339
	Fixed in 5.10.180 with commit 20ca90ceda71ed90a4d6960acbe7d5e120b40c0d
	Fixed in 5.15.112 with commit cd3c0f7013c37cd24fc40b601319007f136c1201
	Fixed in 6.1.29 with commit f661ad53658a1ea35c004af1f5fbe25c4d1cdb08
	Fixed in 6.2.16 with commit 3d28af21a874c5123d1681c2d686627f7ff7e488
	Fixed in 6.3.3 with commit efce310db74fdc6d2acd959f3582972ae4a8d7d5
	Fixed in 6.4 with commit 4a76680311330aefe5074bed8f06afa354b85c48

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2023-53471
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/625d4112ea25dbad7ddf749fd5c1287ceffb2339
	https://git.kernel.org/stable/c/20ca90ceda71ed90a4d6960acbe7d5e120b40c0d
	https://git.kernel.org/stable/c/cd3c0f7013c37cd24fc40b601319007f136c1201
	https://git.kernel.org/stable/c/f661ad53658a1ea35c004af1f5fbe25c4d1cdb08
	https://git.kernel.org/stable/c/3d28af21a874c5123d1681c2d686627f7ff7e488
	https://git.kernel.org/stable/c/efce310db74fdc6d2acd959f3582972ae4a8d7d5
	https://git.kernel.org/stable/c/4a76680311330aefe5074bed8f06afa354b85c48
