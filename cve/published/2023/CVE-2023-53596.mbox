From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2023-53596: drivers: base: Free devm resources when unregistering a device
Message-Id: <2025100429-CVE-2023-53596-dbfb@gregkh>
Content-Length: 3160
Lines: 71
X-Developer-Signature: v=1; a=openpgp-sha256; l=3232;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=dUC4Z+UXkcSYZuSzSviV/nB+mhod2Qutdob/C3O4tAM=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBkPnRo3zp1dssDJz0NqskaSeob46yfJ3aeT/Ez0L/Knr
 7FRvfCkI5aFQZCJQVZMkeXLNp6j+ysOKXoZ2p6GmcPKBDKEgYtTACbiLM+w4NrhN48urDw6tT8n
 7fvpKaaXvzdM2cIwv8DRcifTwvUfhLq/MZ2ZrSeUcyTeDAA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

drivers: base: Free devm resources when unregistering a device

In the current code, devres_release_all() only gets called if the device
has a bus and has been probed.

This leads to issues when using bus-less or driver-less devices where
the device might never get freed if a managed resource holds a reference
to the device. This is happening in the DRM framework for example.

We should thus call devres_release_all() in the device_del() function to
make sure that the device-managed actions are properly executed when the
device is unregistered, even if it has neither a bus nor a driver.

This is effectively the same change than commit 2f8d16a996da ("devres:
release resources on device_del()") that got reverted by commit
a525a3ddeaca ("driver core: free devres in device_release") over
memory leaks concerns.

This patch effectively combines the two commits mentioned above to
release the resources both on device_del() and device_release() and get
the best of both worlds.

The Linux kernel CVE team has assigned CVE-2023-53596 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 3.7 with commit a525a3ddeaca69f405d98442ab3c0746e53168dc and fixed in 6.1.53 with commit 297992e5c63528e603666e36081836204fc36ec9
	Issue introduced in 3.7 with commit a525a3ddeaca69f405d98442ab3c0746e53168dc and fixed in 6.4.16 with commit 3bcc4c2a096e8342c8c719e595ce15de212694dd
	Issue introduced in 3.7 with commit a525a3ddeaca69f405d98442ab3c0746e53168dc and fixed in 6.5.3 with commit c8c426fae26086a0ca8ab6cc6da2de79810ec038
	Issue introduced in 3.7 with commit a525a3ddeaca69f405d98442ab3c0746e53168dc and fixed in 6.6 with commit 699fb50d99039a50e7494de644f96c889279aca3

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2023-53596
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/base/core.c
	drivers/base/test/platform-device-test.c
	drivers/base/test/root-device-test.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/297992e5c63528e603666e36081836204fc36ec9
	https://git.kernel.org/stable/c/3bcc4c2a096e8342c8c719e595ce15de212694dd
	https://git.kernel.org/stable/c/c8c426fae26086a0ca8ab6cc6da2de79810ec038
	https://git.kernel.org/stable/c/699fb50d99039a50e7494de644f96c889279aca3
