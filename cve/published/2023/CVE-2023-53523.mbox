From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2023-53523: can: gs_usb: fix time stamp counter initialization
Message-Id: <2025100134-CVE-2023-53523-f4d4@gregkh>
Content-Length: 3895
Lines: 90
X-Developer-Signature: v=1; a=openpgp-sha256; l=3986;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=3hmZrjLeG1HiN8pfTZd2SOMDOQgA3wQ+BdNW5Fm5BfI=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBl3ReJeL2k6b9GnHZU8Q6c7+Z1SsqHOZ2v1/sIvkxv/V
 vrM3/+zI5aFQZCJQVZMkeXLNp6j+ysOKXoZ2p6GmcPKBDKEgYtTACYifoVhwZLlWTefN166NMkt
 ctMeiajZ8xadsmNY0OG54fEWoaPVu6/XMd+cNHFrr/QHYQA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

can: gs_usb: fix time stamp counter initialization

If the gs_usb device driver is unloaded (or unbound) before the
interface is shut down, the USB stack first calls the struct
usb_driver::disconnect and then the struct net_device_ops::ndo_stop
callback.

In gs_usb_disconnect() all pending bulk URBs are killed, i.e. no more
RX'ed CAN frames are send from the USB device to the host. Later in
gs_can_close() a reset control message is send to each CAN channel to
remove the controller from the CAN bus. In this race window the USB
device can still receive CAN frames from the bus and internally queue
them to be send to the host.

At least in the current version of the candlelight firmware, the queue
of received CAN frames is not emptied during the reset command. After
loading (or binding) the gs_usb driver, new URBs are submitted during
the struct net_device_ops::ndo_open callback and the candlelight
firmware starts sending its already queued CAN frames to the host.

However, this scenario was not considered when implementing the
hardware timestamp function. The cycle counter/time counter
infrastructure is set up (gs_usb_timestamp_init()) after the USBs are
submitted, resulting in a NULL pointer dereference if
timecounter_cyc2time() (via the call chain:
gs_usb_receive_bulk_callback() -> gs_usb_set_timestamp() ->
gs_usb_skb_set_timestamp()) is called too early.

Move the gs_usb_timestamp_init() function before the URBs are
submitted to fix this problem.

For a comprehensive solution, we need to consider gs_usb devices with
more than 1 channel. The cycle counter/time counter infrastructure is
setup per channel, but the RX URBs are per device. Once gs_can_open()
of _a_ channel has been called, and URBs have been submitted, the
gs_usb_receive_bulk_callback() can be called for _all_ available
channels, even for channels that are not running, yet. As cycle
counter/time counter has not set up, this will again lead to a NULL
pointer dereference.

Convert the cycle counter/time counter from a "per channel" to a "per
device" functionality. Also set it up, before submitting any URBs to
the device.

Further in gs_usb_receive_bulk_callback(), don't process any URBs for
not started CAN channels, only resubmit the URB.

The Linux kernel CVE team has assigned CVE-2023-53523 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 6.1 with commit 45dfa45f52e66f8eee30a64b16550a9c47915044 and fixed in 6.4.7 with commit 210a8cffc9c1b044281c0a868485c870c9c11374
	Issue introduced in 6.1 with commit 45dfa45f52e66f8eee30a64b16550a9c47915044 and fixed in 6.5 with commit 5886e4d5ecec3e22844efed90b2dd383ef804b3a

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2023-53523
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/net/can/usb/gs_usb.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/210a8cffc9c1b044281c0a868485c870c9c11374
	https://git.kernel.org/stable/c/5886e4d5ecec3e22844efed90b2dd383ef804b3a
