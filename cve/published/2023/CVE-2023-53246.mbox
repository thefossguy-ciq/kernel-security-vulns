From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2023-53246: cifs: fix DFS traversal oops without CONFIG_CIFS_DFS_UPCALL

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

cifs: fix DFS traversal oops without CONFIG_CIFS_DFS_UPCALL

When compiled with CONFIG_CIFS_DFS_UPCALL disabled, cifs_dfs_d_automount
is NULL. cifs.ko logic for mapping CIFS_FATTR_DFS_REFERRAL attributes to
S_AUTOMOUNT and corresponding dentry flags is retained regardless of
CONFIG_CIFS_DFS_UPCALL, leading to a NULL pointer dereference in
VFS follow_automount() when traversing a DFS referral link:
  BUG: kernel NULL pointer dereference, address: 0000000000000000
  ...
  Call Trace:
   <TASK>
   __traverse_mounts+0xb5/0x220
   ? cifs_revalidate_mapping+0x65/0xc0 [cifs]
   step_into+0x195/0x610
   ? lookup_fast+0xe2/0xf0
   path_lookupat+0x64/0x140
   filename_lookup+0xc2/0x140
   ? __create_object+0x299/0x380
   ? kmem_cache_alloc+0x119/0x220
   ? user_path_at_empty+0x31/0x50
   user_path_at_empty+0x31/0x50
   __x64_sys_chdir+0x2a/0xd0
   ? exit_to_user_mode_prepare+0xca/0x100
   do_syscall_64+0x42/0x90
   entry_SYSCALL_64_after_hwframe+0x72/0xdc

This fix adds an inline cifs_dfs_d_automount() {return -EREMOTE} handler
when CONFIG_CIFS_DFS_UPCALL is disabled. An alternative would be to
avoid flagging S_AUTOMOUNT, etc. without CONFIG_CIFS_DFS_UPCALL. This
approach was chosen as it provides more control over the error path.

The Linux kernel CVE team has assigned CVE-2023-53246 to this issue.


Affected and fixed versions
===========================

	Fixed in 4.14.312 with commit 8cd7dbc9c46d51e00a0a8372e07cc1cbb8d24a77
	Fixed in 4.19.280 with commit 8afb1fabcec1929db46977e84baeee0cc0e79242
	Fixed in 5.4.240 with commit 657d7c215ca974d366ab1808213f716e1e3aa950
	Fixed in 5.10.177 with commit 26a32a212bc540f4773cd6af8cf73e967d72569c
	Fixed in 5.15.106 with commit b64305185b76f1d5145ce594ff48f3f0e70695bd
	Fixed in 6.1.23 with commit b7d854c33ab48e55fc233699bbefe39ec9bb5c05
	Fixed in 6.2.10 with commit 1e144b68208e98fd4602c842a7149ba5f41d87fb
	Fixed in 6.3 with commit 179a88a8558bbf42991d361595281f3e45d7edfc

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2023-53246
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	fs/cifs/cifsfs.h


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/8cd7dbc9c46d51e00a0a8372e07cc1cbb8d24a77
	https://git.kernel.org/stable/c/8afb1fabcec1929db46977e84baeee0cc0e79242
	https://git.kernel.org/stable/c/657d7c215ca974d366ab1808213f716e1e3aa950
	https://git.kernel.org/stable/c/26a32a212bc540f4773cd6af8cf73e967d72569c
	https://git.kernel.org/stable/c/b64305185b76f1d5145ce594ff48f3f0e70695bd
	https://git.kernel.org/stable/c/b7d854c33ab48e55fc233699bbefe39ec9bb5c05
	https://git.kernel.org/stable/c/1e144b68208e98fd4602c842a7149ba5f41d87fb
	https://git.kernel.org/stable/c/179a88a8558bbf42991d361595281f3e45d7edfc
