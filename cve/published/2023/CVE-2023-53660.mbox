From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2023-53660: bpf, cpumap: Handle skb as well when clean up ptr_ring
Message-Id: <2025100702-CVE-2023-53660-92d3@gregkh>
Content-Length: 3462
Lines: 86
X-Developer-Signature: v=1; a=openpgp-sha256; l=3549;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=90kHI+aHzXHwoFp6rY3KG5gy4BKVITKMoNAlDvSasyQ=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBlP9e8t9b5gFZjvfci5ZmfvtoKkW4qTGIQkA8UvXd4oX
 2l/dKFDRywLgyATg6yYIsuXbTxH91ccUvQytD0NM4eVCWQIAxenAEzk5gGGeSoCEf4bE/ws/l+K
 rPrbIcj/9O79AoYFl1rmNr6346hUWr/wgsSsXS+ar/kYAQA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

bpf, cpumap: Handle skb as well when clean up ptr_ring

The following warning was reported when running xdp_redirect_cpu with
both skb-mode and stress-mode enabled:

  ------------[ cut here ]------------
  Incorrect XDP memory type (-2128176192) usage
  WARNING: CPU: 7 PID: 1442 at net/core/xdp.c:405
  Modules linked in:
  CPU: 7 PID: 1442 Comm: kworker/7:0 Tainted: G  6.5.0-rc2+ #1
  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996)
  Workqueue: events __cpu_map_entry_free
  RIP: 0010:__xdp_return+0x1e4/0x4a0
  ......
  Call Trace:
   <TASK>
   ? show_regs+0x65/0x70
   ? __warn+0xa5/0x240
   ? __xdp_return+0x1e4/0x4a0
   ......
   xdp_return_frame+0x4d/0x150
   __cpu_map_entry_free+0xf9/0x230
   process_one_work+0x6b0/0xb80
   worker_thread+0x96/0x720
   kthread+0x1a5/0x1f0
   ret_from_fork+0x3a/0x70
   ret_from_fork_asm+0x1b/0x30
   </TASK>

The reason for the warning is twofold. One is due to the kthread
cpu_map_kthread_run() is stopped prematurely. Another one is
__cpu_map_ring_cleanup() doesn't handle skb mode and treats skbs in
ptr_ring as XDP frames.

Prematurely-stopped kthread will be fixed by the preceding patch and
ptr_ring will be empty when __cpu_map_ring_cleanup() is called. But
as the comments in __cpu_map_ring_cleanup() said, handling and freeing
skbs in ptr_ring as well to "catch any broken behaviour gracefully".

The Linux kernel CVE team has assigned CVE-2023-53660 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.15 with commit 11941f8a85362f612df61f4aaab0e41b64d2111d and fixed in 5.15.126 with commit b58d34068fd9f96bfc7d389988dfaf9a92a8fe00
	Issue introduced in 5.15 with commit 11941f8a85362f612df61f4aaab0e41b64d2111d and fixed in 6.1.45 with commit cbd000451885801e9bbfd9cf7a7946806a85cb5e
	Issue introduced in 5.15 with commit 11941f8a85362f612df61f4aaab0e41b64d2111d and fixed in 6.4.10 with commit 937345720d18f1ad006ba3d5dcb3fa121037b8a2
	Issue introduced in 5.15 with commit 11941f8a85362f612df61f4aaab0e41b64d2111d and fixed in 6.5 with commit 7c62b75cd1a792e14b037fa4f61f9b18914e7de1

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2023-53660
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	kernel/bpf/cpumap.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/b58d34068fd9f96bfc7d389988dfaf9a92a8fe00
	https://git.kernel.org/stable/c/cbd000451885801e9bbfd9cf7a7946806a85cb5e
	https://git.kernel.org/stable/c/937345720d18f1ad006ba3d5dcb3fa121037b8a2
	https://git.kernel.org/stable/c/7c62b75cd1a792e14b037fa4f61f9b18914e7de1
