From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2023-53333: netfilter: conntrack: dccp: copy entire header to stack buffer, not just basic one

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

netfilter: conntrack: dccp: copy entire header to stack buffer, not just basic one

Eric Dumazet says:
  nf_conntrack_dccp_packet() has an unique:

  dh = skb_header_pointer(skb, dataoff, sizeof(_dh), &_dh);

  And nothing more is 'pulled' from the packet, depending on the content.
  dh->dccph_doff, and/or dh->dccph_x ...)
  So dccp_ack_seq() is happily reading stuff past the _dh buffer.

BUG: KASAN: stack-out-of-bounds in nf_conntrack_dccp_packet+0x1134/0x11c0
Read of size 4 at addr ffff000128f66e0c by task syz-executor.2/29371
[..]

Fix this by increasing the stack buffer to also include room for
the extra sequence numbers and all the known dccp packet type headers,
then pull again after the initial validation of the basic header.

While at it, mark packets invalid that lack 48bit sequence bit but
where RFC says the type MUST use them.

Compile tested only.

v2: first skb_header_pointer() now needs to adjust the size to
    only pull the generic header. (Eric)

Heads-up: I intend to remove dccp conntrack support later this year.

The Linux kernel CVE team has assigned CVE-2023-53333 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 2.6.26 with commit 2bc780499aa33311ec0f3e42624dfaa7be0ade5e and fixed in 5.4.251 with commit 337fdce450637ea663bc816edc2ba81e5cdad02e
	Issue introduced in 2.6.26 with commit 2bc780499aa33311ec0f3e42624dfaa7be0ade5e and fixed in 5.10.188 with commit 9bdcda7abaf22f6453e5b5efb7eb4e524095d5d8
	Issue introduced in 2.6.26 with commit 2bc780499aa33311ec0f3e42624dfaa7be0ade5e and fixed in 5.15.121 with commit c052797ac36813419ad3bfa54cb8615db4b41f15
	Issue introduced in 2.6.26 with commit 2bc780499aa33311ec0f3e42624dfaa7be0ade5e and fixed in 6.1.39 with commit 5c618daa5038712c4a4ef8923905a2ea1b8836a1
	Issue introduced in 2.6.26 with commit 2bc780499aa33311ec0f3e42624dfaa7be0ade5e and fixed in 6.3.13 with commit 26bd1f210d3783a691052c51d76bb8a8bbd24c67
	Issue introduced in 2.6.26 with commit 2bc780499aa33311ec0f3e42624dfaa7be0ade5e and fixed in 6.4.4 with commit 8c0980493beed3a80d6329c44ab293dc8c032927
	Issue introduced in 2.6.26 with commit 2bc780499aa33311ec0f3e42624dfaa7be0ade5e and fixed in 6.5 with commit ff0a3a7d52ff7282dbd183e7fc29a1fe386b0c30

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2023-53333
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	net/netfilter/nf_conntrack_proto_dccp.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/337fdce450637ea663bc816edc2ba81e5cdad02e
	https://git.kernel.org/stable/c/9bdcda7abaf22f6453e5b5efb7eb4e524095d5d8
	https://git.kernel.org/stable/c/c052797ac36813419ad3bfa54cb8615db4b41f15
	https://git.kernel.org/stable/c/5c618daa5038712c4a4ef8923905a2ea1b8836a1
	https://git.kernel.org/stable/c/26bd1f210d3783a691052c51d76bb8a8bbd24c67
	https://git.kernel.org/stable/c/8c0980493beed3a80d6329c44ab293dc8c032927
	https://git.kernel.org/stable/c/ff0a3a7d52ff7282dbd183e7fc29a1fe386b0c30
