From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2023-52989: firewire: fix memory leak for payload of request subaction to IEC 61883-1 FCP region
Message-Id: <2025032708-CVE-2023-52989-1b68@gregkh>
Content-Length: 3985
Lines: 79
X-Developer-Signature: v=1; a=openpgp-sha256; l=4065;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=uFHJ9iRlbXv1U7ZPGbJOc7F7CO0iISABGjScA4Wd21A=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDOlPG2TMEwxEVNg89/4xOn9va/eOhD2zGyQXfqkL267sL
 fc3c/G3jlgWBkEmBlkxRZYv23iO7q84pOhlaHsaZg4rE8gQBi5OAZhIkhPDbJZ4D+7X6zp/yrft
 8lTYfT04duYBe4a5or+2XJ2y8fbr3qeSVaGar2/63NFbDQA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

firewire: fix memory leak for payload of request subaction to IEC 61883-1 FCP region

This patch is fix for Linux kernel v2.6.33 or later.

For request subaction to IEC 61883-1 FCP region, Linux FireWire subsystem
have had an issue of use-after-free. The subsystem allows multiple
user space listeners to the region, while data of the payload was likely
released before the listeners execute read(2) to access to it for copying
to user space.

The issue was fixed by a commit 281e20323ab7 ("firewire: core: fix
use-after-free regression in FCP handler"). The object of payload is
duplicated in kernel space for each listener. When the listener executes
ioctl(2) with FW_CDEV_IOC_SEND_RESPONSE request, the object is going to
be released.

However, it causes memory leak since the commit relies on call of
release_request() in drivers/firewire/core-cdev.c. Against the
expectation, the function is never called due to the design of
release_client_resource(). The function delegates release task
to caller when called with non-NULL fourth argument. The implementation
of ioctl_send_response() is the case. It should release the object
explicitly.

This commit fixes the bug.

The Linux kernel CVE team has assigned CVE-2023-52989 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 2.6.33 with commit 281e20323ab72180137824a298ee9e21e6f9acf6 and fixed in 4.14.306 with commit b2cd3947d116bb9ba7ff097b5fc747a8956764db
	Issue introduced in 2.6.33 with commit 281e20323ab72180137824a298ee9e21e6f9acf6 and fixed in 4.19.273 with commit 356ff89acdbe6a66019154bc7eb2d300f5b15103
	Issue introduced in 2.6.33 with commit 281e20323ab72180137824a298ee9e21e6f9acf6 and fixed in 5.4.232 with commit 53785fd9b315583cf029e39f72b73d23704a2253
	Issue introduced in 2.6.33 with commit 281e20323ab72180137824a298ee9e21e6f9acf6 and fixed in 5.10.168 with commit d5a2dcee53fa6e6e2822f93cb3f1b0cd23163bee
	Issue introduced in 2.6.33 with commit 281e20323ab72180137824a298ee9e21e6f9acf6 and fixed in 5.15.93 with commit 5f4543c9382ae2d5062f6aa4fecae0c9258d0b0e
	Issue introduced in 2.6.33 with commit 281e20323ab72180137824a298ee9e21e6f9acf6 and fixed in 6.1.11 with commit c8bdc88216f09cb7387fedbdf613524367328616
	Issue introduced in 2.6.33 with commit 281e20323ab72180137824a298ee9e21e6f9acf6 and fixed in 6.2 with commit 531390a243ef47448f8bad01c186c2787666bf4d

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2023-52989
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/firewire/core-cdev.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/b2cd3947d116bb9ba7ff097b5fc747a8956764db
	https://git.kernel.org/stable/c/356ff89acdbe6a66019154bc7eb2d300f5b15103
	https://git.kernel.org/stable/c/53785fd9b315583cf029e39f72b73d23704a2253
	https://git.kernel.org/stable/c/d5a2dcee53fa6e6e2822f93cb3f1b0cd23163bee
	https://git.kernel.org/stable/c/5f4543c9382ae2d5062f6aa4fecae0c9258d0b0e
	https://git.kernel.org/stable/c/c8bdc88216f09cb7387fedbdf613524367328616
	https://git.kernel.org/stable/c/531390a243ef47448f8bad01c186c2787666bf4d
