From bippy-4986f5686161 Mon Sep 17 00:00:00 2001
From: Lee Jones <lee@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2023-52488: serial: sc16is7xx: convert from _raw_ to _noinc_ regmap functions for FIFO
X-Developer-Signature: v=1; a=openpgp-sha256; l=3032; i=lee@kernel.org;
 h=from:subject; bh=yU3Ky//xlNQZigWybM1/O3e6szI4tSMGhq3o7WLa3eg=;
 b=owEBbQKS/ZANAwAKAVGvii+H/HdhAcsmYgBl4KhNMIoUq3MfPdxgufhl+q0KgzrFeKL3K0uGe
 QDnSc44BSaJAjMEAAEKAB0WIQR2tsk1o74gmpTwh0hRr4ovh/x3YQUCZeCoTQAKCRBRr4ovh/x3
 YXwpD/0bC4gkLsAERSR/no/ZF8UVqNjpmW8/k4SCVxZkP+zfSWXC3OZ/jL17DgLuC3mixo3DN6X
 Jm9nhK8nLglJz8t1+4dpEu6cL/+irb6BMnDsWUuy3UpjClwo/z6IOX761BIFyfmF7dEAZaCJMUB
 k8nj54tBHkGo+YENdvyn3WFiSRccwwwmmSXu5KEW4bT6J0/8rXnRen99Pe8ZeZ6MHg/wkmKiZh0
 XaI39bqtAusHVZzDu5xKefxoVWAmz55uK3Z1Xv2zH+Ef9lPhSZA454jvcMSklNRrnXP2S88IXG7
 TxKFQqXHEmM4UuN/zAAeoYNWbVRM8OGn/yvJYrybJ3VFKW5AVxV6DD5ls5ZE17qg55ldZsmw0I1
 mhSWKj5jP2KXofgYLE/LI2k1fMBXy3HF/hUAD3lrts1iQh3Ep/lFWtk7EWLYMUrsSHdqRLExF42
 oDjF55dbPXQNyXvlk26i8r7REBf+LI/iULjzj4N8EO0K9Ks5DBUJ14xtVG//mFSYcAHRJF8zenV
 GfUT4IiIcFB67bbOszDNi/C/Hb8PPAG7hxNA75OXl/xN/XUjFDfN+sRTvpDKawYjU8DejKOthnf
 /DIAbytRTp80J6MP3K2YOGCyDJSQ4vrfPsHBEd7KlYkexRkil2J3ADr0K6XO6tnrlCoV9h+bFQR
 hvFt5p6zMXTfPoA==
X-Developer-Key: i=lee@kernel.org; a=openpgp;
 fpr=76B6C935A3BE209A94F0874851AF8A2F87FC7761

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

serial: sc16is7xx: convert from _raw_ to _noinc_ regmap functions for FIFO

The SC16IS7XX IC supports a burst mode to access the FIFOs where the
initial register address is sent ($00), followed by all the FIFO data
without having to resend the register address each time. In this mode, the
IC doesn't increment the register address for each R/W byte.

The regmap_raw_read() and regmap_raw_write() are functions which can
perform IO over multiple registers. They are currently used to read/write
from/to the FIFO, and although they operate correctly in this burst mode on
the SPI bus, they would corrupt the regmap cache if it was not disabled
manually. The reason is that when the R/W size is more than 1 byte, these
functions assume that the register address is incremented and handle the
cache accordingly.

Convert FIFO R/W functions to use the regmap _noinc_ versions in order to
remove the manual cache control which was a workaround when using the
_raw_ versions. FIFO registers are properly declared as volatile so
cache will not be used/updated for FIFO accesses.

The Linux kernel CVE team has assigned CVE-2023-52488 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 3.16 with commit dfeae619d781 and fixed in 6.1.76 with commit 416b10d2817c
	Issue introduced in 3.16 with commit dfeae619d781 and fixed in 6.6.15 with commit 084c24e788d9
	Issue introduced in 3.16 with commit dfeae619d781 and fixed in 6.7.3 with commit aa7cb4787698
	Issue introduced in 3.16 with commit dfeae619d781 and fixed in 6.8-rc1 with commit dbf4ab821804

Please see https://www.kernel.org or a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2023-52488
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/tty/serial/sc16is7xx.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/416b10d2817c94db86829fb92ad43ce7d002c573
	https://git.kernel.org/stable/c/084c24e788d9cf29c55564de368bf5284f2bb5db
	https://git.kernel.org/stable/c/aa7cb4787698add9367b19f7afc667662c9bdb23
	https://git.kernel.org/stable/c/dbf4ab821804df071c8b566d9813083125e6d97b
