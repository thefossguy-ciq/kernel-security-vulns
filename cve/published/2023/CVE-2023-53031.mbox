From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2023-53031: powerpc/imc-pmu: Fix use of mutex in IRQs disabled section
Message-Id: <2025032721-CVE-2023-53031-39cd@gregkh>
Content-Length: 5515
Lines: 117
X-Developer-Signature: v=1; a=openpgp-sha256; l=5633;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=f/PPz3rXZgrsIT7Ke4SUlYjeZEXfvoRR5pMNL0nj7F8=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDOlPGzSLSjXEDP5/mFjO2Dmds/5Hj83OoH+c/rkhinx69
 UKr/tR3xLIwCDIxyIopsnzZxnN0f8UhRS9D29Mwc1iZQIYwcHEKwERKaxnm8LPJXJx0Y030/Mzz
 MjFPLANmtk3fzjBXwiD56b/t7+byFc141LoyjZtJm8kRAA==
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

powerpc/imc-pmu: Fix use of mutex in IRQs disabled section

Current imc-pmu code triggers a WARNING with CONFIG_DEBUG_ATOMIC_SLEEP
and CONFIG_PROVE_LOCKING enabled, while running a thread_imc event.

Command to trigger the warning:
  # perf stat -e thread_imc/CPM_CS_FROM_L4_MEM_X_DPTEG/ sleep 5

   Performance counter stats for 'sleep 5':

                   0      thread_imc/CPM_CS_FROM_L4_MEM_X_DPTEG/

         5.002117947 seconds time elapsed

         0.000131000 seconds user
         0.001063000 seconds sys

Below is snippet of the warning in dmesg:

  BUG: sleeping function called from invalid context at kernel/locking/mutex.c:580
  in_atomic(): 1, irqs_disabled(): 1, non_block: 0, pid: 2869, name: perf-exec
  preempt_count: 2, expected: 0
  4 locks held by perf-exec/2869:
   #0: c00000004325c540 (&sig->cred_guard_mutex){+.+.}-{3:3}, at: bprm_execve+0x64/0xa90
   #1: c00000004325c5d8 (&sig->exec_update_lock){++++}-{3:3}, at: begin_new_exec+0x460/0xef0
   #2: c0000003fa99d4e0 (&cpuctx_lock){-...}-{2:2}, at: perf_event_exec+0x290/0x510
   #3: c000000017ab8418 (&ctx->lock){....}-{2:2}, at: perf_event_exec+0x29c/0x510
  irq event stamp: 4806
  hardirqs last  enabled at (4805): [<c000000000f65b94>] _raw_spin_unlock_irqrestore+0x94/0xd0
  hardirqs last disabled at (4806): [<c0000000003fae44>] perf_event_exec+0x394/0x510
  softirqs last  enabled at (0): [<c00000000013c404>] copy_process+0xc34/0x1ff0
  softirqs last disabled at (0): [<0000000000000000>] 0x0
  CPU: 36 PID: 2869 Comm: perf-exec Not tainted 6.2.0-rc2-00011-g1247637727f2 #61
  Hardware name: 8375-42A POWER9 0x4e1202 opal:v7.0-16-g9b85f7d961 PowerNV
  Call Trace:
    dump_stack_lvl+0x98/0xe0 (unreliable)
    __might_resched+0x2f8/0x310
    __mutex_lock+0x6c/0x13f0
    thread_imc_event_add+0xf4/0x1b0
    event_sched_in+0xe0/0x210
    merge_sched_in+0x1f0/0x600
    visit_groups_merge.isra.92.constprop.166+0x2bc/0x6c0
    ctx_flexible_sched_in+0xcc/0x140
    ctx_sched_in+0x20c/0x2a0
    ctx_resched+0x104/0x1c0
    perf_event_exec+0x340/0x510
    begin_new_exec+0x730/0xef0
    load_elf_binary+0x3f8/0x1e10
  ...
  do not call blocking ops when !TASK_RUNNING; state=2001 set at [<00000000fd63e7cf>] do_nanosleep+0x60/0x1a0
  WARNING: CPU: 36 PID: 2869 at kernel/sched/core.c:9912 __might_sleep+0x9c/0xb0
  CPU: 36 PID: 2869 Comm: sleep Tainted: G        W          6.2.0-rc2-00011-g1247637727f2 #61
  Hardware name: 8375-42A POWER9 0x4e1202 opal:v7.0-16-g9b85f7d961 PowerNV
  NIP:  c000000000194a1c LR: c000000000194a18 CTR: c000000000a78670
  REGS: c00000004d2134e0 TRAP: 0700   Tainted: G        W           (6.2.0-rc2-00011-g1247637727f2)
  MSR:  9000000000021033 <SF,HV,ME,IR,DR,RI,LE>  CR: 48002824  XER: 00000000
  CFAR: c00000000013fb64 IRQMASK: 1

The above warning triggered because the current imc-pmu code uses mutex
lock in interrupt disabled sections. The function mutex_lock()
internally calls __might_resched(), which will check if IRQs are
disabled and in case IRQs are disabled, it will trigger the warning.

Fix the issue by changing the mutex lock to spinlock.

[mpe: Fix comments, trim oops in change log, add reported-by tags]

The Linux kernel CVE team has assigned CVE-2023-53031 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 4.14 with commit 8f95faaac56c18b32d0e23ace55417a440abdb7e and fixed in 5.4.229 with commit d0c6d2a31026102d4738b47a610bed4401b9834f
	Issue introduced in 4.14 with commit 8f95faaac56c18b32d0e23ace55417a440abdb7e and fixed in 5.10.164 with commit 8cbeb60320ac45a8240b561c8ef466b86c34dedc
	Issue introduced in 4.14 with commit 8f95faaac56c18b32d0e23ace55417a440abdb7e and fixed in 5.15.89 with commit a90d339f1f66be4a946769b565668e2bd0686dfa
	Issue introduced in 4.14 with commit 8f95faaac56c18b32d0e23ace55417a440abdb7e and fixed in 6.1.7 with commit 424bcb570cb320d1d15238cd4c933522b90f78fa
	Issue introduced in 4.14 with commit 8f95faaac56c18b32d0e23ace55417a440abdb7e and fixed in 6.2 with commit 76d588dddc459fefa1da96e0a081a397c5c8e216

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2023-53031
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	arch/powerpc/include/asm/imc-pmu.h
	arch/powerpc/perf/imc-pmu.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/d0c6d2a31026102d4738b47a610bed4401b9834f
	https://git.kernel.org/stable/c/8cbeb60320ac45a8240b561c8ef466b86c34dedc
	https://git.kernel.org/stable/c/a90d339f1f66be4a946769b565668e2bd0686dfa
	https://git.kernel.org/stable/c/424bcb570cb320d1d15238cd4c933522b90f78fa
	https://git.kernel.org/stable/c/76d588dddc459fefa1da96e0a081a397c5c8e216
