From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2023-53536: blk-crypto: make blk_crypto_evict_key() more robust
Message-Id: <2025100442-CVE-2023-53536-0e4f@gregkh>
Content-Length: 3472
Lines: 73
X-Developer-Signature: v=1; a=openpgp-sha256; l=3546;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=+wJ3Kwg3/8eSY12juFbTeEGeyWq/WndOOf3sglMbUcI=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBkPraKzu+prdk3u71h/NfhG37YP27xtA+5cW/TzboXts
 682R5erdsSyMAgyMciKKbJ82cZzdH/FIUUvQ9vTMHNYmUCGMHBxCsBErDgZFpxNk5EydjxY7sMY
 8GtF2CfW0o2aVQzzHduNqnUmzTQ61B4bN+/NP/GlO6efBAA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

blk-crypto: make blk_crypto_evict_key() more robust

If blk_crypto_evict_key() sees that the key is still in-use (due to a
bug) or that ->keyslot_evict failed, it currently just returns while
leaving the key linked into the keyslot management structures.

However, blk_crypto_evict_key() is only called in contexts such as inode
eviction where failure is not an option.  So actually the caller
proceeds with freeing the blk_crypto_key regardless of the return value
of blk_crypto_evict_key().

These two assumptions don't match, and the result is that there can be a
use-after-free in blk_crypto_reprogram_all_keys() after one of these
errors occurs.  (Note, these errors *shouldn't* happen; we're just
talking about what happens if they do anyway.)

Fix this by making blk_crypto_evict_key() unlink the key from the
keyslot management structures even on failure.

Also improve some comments.

The Linux kernel CVE team has assigned CVE-2023-53536 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.8 with commit 1b2628397058ebce7277480960b29c788138de90 and fixed in 5.10.180 with commit 701a8220762ff90615dc91d3543f789391b63298
	Issue introduced in 5.8 with commit 1b2628397058ebce7277480960b29c788138de90 and fixed in 5.15.111 with commit 5bb4005fb667c6e2188fa87950f8d5faf2994410
	Issue introduced in 5.8 with commit 1b2628397058ebce7277480960b29c788138de90 and fixed in 6.1.28 with commit 64ef787bb1588475163069c2e62fdd8f6c27b1f6
	Issue introduced in 5.8 with commit 1b2628397058ebce7277480960b29c788138de90 and fixed in 6.2.15 with commit 809a5be62e92a444a3c3d7b9f438019d0b322f55
	Issue introduced in 5.8 with commit 1b2628397058ebce7277480960b29c788138de90 and fixed in 6.3.2 with commit 5c62852942667c613de0458fc797c5b8c36112b5
	Issue introduced in 5.8 with commit 1b2628397058ebce7277480960b29c788138de90 and fixed in 6.4 with commit 5c7cb94452901a93e90c2230632e2c12a681bc92

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2023-53536
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	block/blk-crypto-profile.c
	block/blk-crypto.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/701a8220762ff90615dc91d3543f789391b63298
	https://git.kernel.org/stable/c/5bb4005fb667c6e2188fa87950f8d5faf2994410
	https://git.kernel.org/stable/c/64ef787bb1588475163069c2e62fdd8f6c27b1f6
	https://git.kernel.org/stable/c/809a5be62e92a444a3c3d7b9f438019d0b322f55
	https://git.kernel.org/stable/c/5c62852942667c613de0458fc797c5b8c36112b5
	https://git.kernel.org/stable/c/5c7cb94452901a93e90c2230632e2c12a681bc92
