From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2023-53641: wifi: ath9k: hif_usb: fix memory leak of remain_skbs
Message-Id: <2025100716-CVE-2023-53641-ed0e@gregkh>
Content-Length: 4357
Lines: 81
X-Developer-Signature: v=1; a=openpgp-sha256; l=4439;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=jXcAMYD6NEq6mMBSGqHuTDyGVZasfNG1xB4VvLyu4dM=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBlP9UtiGb6FtuxsL9lh5Xek+ni8uJfPgaLf/7YZ/X/t3
 KNXEBbVEcvCIMjEICumyPJlG8/R/RWHFL0MbU/DzGFlAhnCwMUpABO5EsmwoPXphF/tIlVxD/7+
 WGZd7lJbEVfzi2HByYuV1lcqW7bx3J2wvEzplu7ViJSDAA==
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

wifi: ath9k: hif_usb: fix memory leak of remain_skbs

hif_dev->remain_skb is allocated and used exclusively in
ath9k_hif_usb_rx_stream(). It is implied that an allocated remain_skb is
processed and subsequently freed (in error paths) only during the next
call of ath9k_hif_usb_rx_stream().

So, if the urbs are deallocated between those two calls due to the device
deinitialization or suspend, it is possible that ath9k_hif_usb_rx_stream()
is not called next time and the allocated remain_skb is leaked. Our local
Syzkaller instance was able to trigger that.

remain_skb makes sense when receiving two consecutive urbs which are
logically linked together, i.e. a specific data field from the first skb
indicates a cached skb to be allocated, memcpy'd with some data and
subsequently processed in the next call to ath9k_hif_usb_rx_stream(). Urbs
deallocation supposedly makes that link irrelevant so we need to free the
cached skb in those cases.

Fix the leak by introducing a function to explicitly free remain_skb (if
it is not NULL) when the rx urbs have been deallocated. remain_skb is NULL
when it has not been allocated at all (hif_dev struct is kzalloced) or
when it has been processed in next call to ath9k_hif_usb_rx_stream().

Found by Linux Verification Center (linuxtesting.org) with Syzkaller.

The Linux kernel CVE team has assigned CVE-2023-53641 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 2.6.35 with commit fb9987d0f748c983bb795a86f47522313f701a08 and fixed in 4.19.283 with commit 6719e3797ec52cd144c8a5ba8aaab36674800585
	Issue introduced in 2.6.35 with commit fb9987d0f748c983bb795a86f47522313f701a08 and fixed in 5.4.243 with commit d9899318660791141ea6002fda5577b2c5d7386e
	Issue introduced in 2.6.35 with commit fb9987d0f748c983bb795a86f47522313f701a08 and fixed in 5.10.180 with commit 320d760a35273aa815d58b57e4fd9ba5279a3489
	Issue introduced in 2.6.35 with commit fb9987d0f748c983bb795a86f47522313f701a08 and fixed in 5.15.111 with commit 59073060fe0950c6ecbe12bdc06469dcac62128d
	Issue introduced in 2.6.35 with commit fb9987d0f748c983bb795a86f47522313f701a08 and fixed in 6.1.28 with commit 9b9356a3014123f0ce4b50d9278c1265173150ab
	Issue introduced in 2.6.35 with commit fb9987d0f748c983bb795a86f47522313f701a08 and fixed in 6.2.15 with commit f0931fc8f4b6847c72e170d2326861c0a081d680
	Issue introduced in 2.6.35 with commit fb9987d0f748c983bb795a86f47522313f701a08 and fixed in 6.3.2 with commit 8f02d538878c9b1501f624595eb22ee4e5e0ff84
	Issue introduced in 2.6.35 with commit fb9987d0f748c983bb795a86f47522313f701a08 and fixed in 6.4 with commit 7654cc03eb699297130b693ec34e25f77b17c947

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2023-53641
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/net/wireless/ath/ath9k/hif_usb.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/6719e3797ec52cd144c8a5ba8aaab36674800585
	https://git.kernel.org/stable/c/d9899318660791141ea6002fda5577b2c5d7386e
	https://git.kernel.org/stable/c/320d760a35273aa815d58b57e4fd9ba5279a3489
	https://git.kernel.org/stable/c/59073060fe0950c6ecbe12bdc06469dcac62128d
	https://git.kernel.org/stable/c/9b9356a3014123f0ce4b50d9278c1265173150ab
	https://git.kernel.org/stable/c/f0931fc8f4b6847c72e170d2326861c0a081d680
	https://git.kernel.org/stable/c/8f02d538878c9b1501f624595eb22ee4e5e0ff84
	https://git.kernel.org/stable/c/7654cc03eb699297130b693ec34e25f77b17c947
