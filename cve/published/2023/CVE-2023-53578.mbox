From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2023-53578: net: qrtr: Fix an uninit variable access bug in qrtr_tx_resume()
Message-Id: <2025100455-CVE-2023-53578-7dbf@gregkh>
Content-Length: 4522
Lines: 98
X-Developer-Signature: v=1; a=openpgp-sha256; l=4621;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=3E2u7/G38eCOleZHc1CvNPdV34Q/5EXRRTj2YxablHY=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBkPrdI3aW9au2vX1ImFuUWqxwPSZG45/OuXkEi9tLlLy
 XfXJtHbHbEsDIJMDLJiiixftvEc3V9xSNHL0PY0zBxWJpAhDFycAjCRJVcZ5gpf6C+5lX/XexIH
 uzrjLW3O/vWzjBjmB33UP9vTyuPyullWTI05cMGppRtdAA==
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

net: qrtr: Fix an uninit variable access bug in qrtr_tx_resume()

Syzbot reported a bug as following:

=====================================================
BUG: KMSAN: uninit-value in qrtr_tx_resume+0x185/0x1f0 net/qrtr/af_qrtr.c:230
 qrtr_tx_resume+0x185/0x1f0 net/qrtr/af_qrtr.c:230
 qrtr_endpoint_post+0xf85/0x11b0 net/qrtr/af_qrtr.c:519
 qrtr_tun_write_iter+0x270/0x400 net/qrtr/tun.c:108
 call_write_iter include/linux/fs.h:2189 [inline]
 aio_write+0x63a/0x950 fs/aio.c:1600
 io_submit_one+0x1d1c/0x3bf0 fs/aio.c:2019
 __do_sys_io_submit fs/aio.c:2078 [inline]
 __se_sys_io_submit+0x293/0x770 fs/aio.c:2048
 __x64_sys_io_submit+0x92/0xd0 fs/aio.c:2048
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x63/0xcd

Uninit was created at:
 slab_post_alloc_hook mm/slab.h:766 [inline]
 slab_alloc_node mm/slub.c:3452 [inline]
 __kmem_cache_alloc_node+0x71f/0xce0 mm/slub.c:3491
 __do_kmalloc_node mm/slab_common.c:967 [inline]
 __kmalloc_node_track_caller+0x114/0x3b0 mm/slab_common.c:988
 kmalloc_reserve net/core/skbuff.c:492 [inline]
 __alloc_skb+0x3af/0x8f0 net/core/skbuff.c:565
 __netdev_alloc_skb+0x120/0x7d0 net/core/skbuff.c:630
 qrtr_endpoint_post+0xbd/0x11b0 net/qrtr/af_qrtr.c:446
 qrtr_tun_write_iter+0x270/0x400 net/qrtr/tun.c:108
 call_write_iter include/linux/fs.h:2189 [inline]
 aio_write+0x63a/0x950 fs/aio.c:1600
 io_submit_one+0x1d1c/0x3bf0 fs/aio.c:2019
 __do_sys_io_submit fs/aio.c:2078 [inline]
 __se_sys_io_submit+0x293/0x770 fs/aio.c:2048
 __x64_sys_io_submit+0x92/0xd0 fs/aio.c:2048
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x63/0xcd

It is because that skb->len requires at least sizeof(struct qrtr_ctrl_pkt)
in qrtr_tx_resume(). And skb->len equals to size in qrtr_endpoint_post().
But size is less than sizeof(struct qrtr_ctrl_pkt) when qrtr_cb->type
equals to QRTR_TYPE_RESUME_TX in qrtr_endpoint_post() under the syzbot
scenario. This triggers the uninit variable access bug.

Add size check when qrtr_cb->type equals to QRTR_TYPE_RESUME_TX in
qrtr_endpoint_post() to fix the bug.

The Linux kernel CVE team has assigned CVE-2023-53578 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.6 with commit 5fdeb0d372ab33b4175043a2a4a1730239a217f1 and fixed in 5.10.178 with commit 3814d211ff13ee35f2d9437439a6c7df58524137
	Issue introduced in 5.6 with commit 5fdeb0d372ab33b4175043a2a4a1730239a217f1 and fixed in 5.15.108 with commit c6a796ee5a639ffb83c6e5469408cc2ec16cac6a
	Issue introduced in 5.6 with commit 5fdeb0d372ab33b4175043a2a4a1730239a217f1 and fixed in 6.1.25 with commit bef57c227b52c2bde00fad33556175d36d12cfa0
	Issue introduced in 5.6 with commit 5fdeb0d372ab33b4175043a2a4a1730239a217f1 and fixed in 6.2.12 with commit 8c9ce34a6ff2c544f96ce0b088e8fd3c1b9698c4
	Issue introduced in 5.6 with commit 5fdeb0d372ab33b4175043a2a4a1730239a217f1 and fixed in 6.3 with commit 6417070918de3bcdbe0646e7256dae58fd8083ba

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2023-53578
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	net/qrtr/af_qrtr.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/3814d211ff13ee35f2d9437439a6c7df58524137
	https://git.kernel.org/stable/c/c6a796ee5a639ffb83c6e5469408cc2ec16cac6a
	https://git.kernel.org/stable/c/bef57c227b52c2bde00fad33556175d36d12cfa0
	https://git.kernel.org/stable/c/8c9ce34a6ff2c544f96ce0b088e8fd3c1b9698c4
	https://git.kernel.org/stable/c/6417070918de3bcdbe0646e7256dae58fd8083ba
