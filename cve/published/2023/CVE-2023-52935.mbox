From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2023-52935: mm/khugepaged: fix ->anon_vma race
Message-Id: <2025032720-CVE-2023-52935-1c3c@gregkh>
Content-Length: 2774
Lines: 68
X-Developer-Signature: v=1; a=openpgp-sha256; l=2843;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=3x2BcItHU3zSZ826UdHpLh12Hzzn6IPqEqq9lIAKWDc=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDOlP6w565Nk8573rdeOp22fD39ltHivWq3zs0CmcLOupx
 hA+Y7VRRywLgyATg6yYIsuXbTxH91ccUvQytD0NM4eVCWQIAxenAExkyhGGBefNE66t+dHY1vRu
 h6nJ0jvtFk1lZgwLZk9W07myMtPCtOd6w5K6Gx2yqfN2AAA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

mm/khugepaged: fix ->anon_vma race

If an ->anon_vma is attached to the VMA, collapse_and_free_pmd() requires
it to be locked.

Page table traversal is allowed under any one of the mmap lock, the
anon_vma lock (if the VMA is associated with an anon_vma), and the
mapping lock (if the VMA is associated with a mapping); and so to be
able to remove page tables, we must hold all three of them. 
retract_page_tables() bails out if an ->anon_vma is attached, but does
this check before holding the mmap lock (as the comment above the check
explains).

If we racily merged an existing ->anon_vma (shared with a child
process) from a neighboring VMA, subsequent rmap traversals on pages
belonging to the child will be able to see the page tables that we are
concurrently removing while assuming that nothing else can access them.

Repeat the ->anon_vma check once we hold the mmap lock to ensure that
there really is no concurrent page table access.

Hitting this bug causes a lockdep warning in collapse_and_free_pmd(),
in the line "lockdep_assert_held_write(&vma->anon_vma->root->rwsem)". 
It can also lead to use-after-free access.

The Linux kernel CVE team has assigned CVE-2023-52935 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 4.8 with commit f3f0e1d2150b2b99da2cbdfaad000089efe9bf30 and fixed in 6.1.11 with commit acb08187b5a83cdb9ac4112fae9e18cf983b0128
	Issue introduced in 4.8 with commit f3f0e1d2150b2b99da2cbdfaad000089efe9bf30 and fixed in 6.2 with commit 023f47a8250c6bdb4aebe744db4bf7f73414028b

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2023-52935
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	mm/khugepaged.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/acb08187b5a83cdb9ac4112fae9e18cf983b0128
	https://git.kernel.org/stable/c/023f47a8250c6bdb4aebe744db4bf7f73414028b
