From bippy-4986f5686161 Mon Sep 17 00:00:00 2001
From: Lee Jones <lee@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2023-52492: dmaengine: fix NULL pointer in channel unregistration function
X-Developer-Signature: v=1; a=openpgp-sha256; l=3268; i=lee@kernel.org;
 h=from:subject; bh=+5hFDFLdNcm+pw3c7Gm8sIfb+jKzB0OKc3stmYFxO0w=;
 b=owEBbQKS/ZANAwAKAVGvii+H/HdhAcsmYgBl4KhO3hw2qzpE6Js/L0vqSQHo0ElMXkpTpLMgd
 zB9MDE1/VCJAjMEAAEKAB0WIQR2tsk1o74gmpTwh0hRr4ovh/x3YQUCZeCoTgAKCRBRr4ovh/x3
 YRPUEACPniaqqODc+m7jWHUWy0ibpw1aDEq7fQNGNq7z/Es34YoJnvhRxc7gLPt8A4a+Hm8tSfQ
 M+vWsqp6m1qCDt9dwEST7SAnaLGqbX+WazIOSBbQDX4w3FqH/dI0hosnUV4T54AWe5YQoe6lvzZ
 Y37za5LNuShV5kgbTwDe7MRE67VbPJqIEVllV5A5wAtbKqaXiaqybBOZIXZtknOC7PgHZsLgboh
 P/DKnVcKcWwDtk1l5/wsaujF6dJsFyUXKFi8MZ+sedUAc7N8y5B/Q/cPpRc6+H9P7HwrGVeyl+P
 Di/SGNq6tHf90lOUaUDuEhtg3GbClYvDo9zH1p1cStu5ojCBfjJolmQfLyALVf7MXxgB7C7iRDm
 2m39UW2aMXmML4Lw8oV/q3ELkd/oykOULId1kokVZ8Um0MhfgK94xLlI4MI/xQVuTCXTCFEBRhu
 0AYlM8KPOrqoYrhrO0AuMzWos8Su8ZmUk3zb5kHRSguVbAtTDH1oVZg6qrUg5GF2rLGZpOCi0mR
 spJQynjEwjM0yi8FI7w7S3w1aPg/A6MtFzWb1juD2/McSgYaSG+sgbBJhIRzv/mz+gOPvfg7K7/
 wYp4/eB7Vd6OffaBIaas2acDeZKZ8PxYj1eD/lB5UoPUmQy1C7zNqF0Vptq04XyeNWpNoB/7KV5
 8dB2lD2/67E15LQ==
X-Developer-Key: i=lee@kernel.org; a=openpgp;
 fpr=76B6C935A3BE209A94F0874851AF8A2F87FC7761

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

dmaengine: fix NULL pointer in channel unregistration function

__dma_async_device_channel_register() can fail. In case of failure,
chan->local is freed (with free_percpu()), and chan->local is nullified.
When dma_async_device_unregister() is called (because of managed API or
intentionally by DMA controller driver), channels are unconditionally
unregistered, leading to this NULL pointer:
[    1.318693] Unable to handle kernel NULL pointer dereference at virtual address 00000000000000d0
[...]
[    1.484499] Call trace:
[    1.486930]  device_del+0x40/0x394
[    1.490314]  device_unregister+0x20/0x7c
[    1.494220]  __dma_async_device_channel_unregister+0x68/0xc0

Look at dma_async_device_register() function error path, channel device
unregistration is done only if chan->local is not NULL.

Then add the same condition at the beginning of
__dma_async_device_channel_unregister() function, to avoid NULL pointer
issue whatever the API used to reach this function.

The Linux kernel CVE team has assigned CVE-2023-52492 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.6 with commit d2fb0a043838 and fixed in 5.10.210 with commit 9de69732dde4
	Issue introduced in 5.6 with commit d2fb0a043838 and fixed in 5.15.149 with commit 047fce470412
	Issue introduced in 5.6 with commit d2fb0a043838 and fixed in 6.1.76 with commit 2ab32986a0b9
	Issue introduced in 5.6 with commit d2fb0a043838 and fixed in 6.6.15 with commit 7f0ccfad2031
	Issue introduced in 5.6 with commit d2fb0a043838 and fixed in 6.7.3 with commit 9263fd2a6348
	Issue introduced in 5.6 with commit d2fb0a043838 and fixed in 6.8-rc1 with commit f5c24d94512f

Please see https://www.kernel.org or a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2023-52492
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/dma/dmaengine.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/9de69732dde4e443c1c7f89acbbed2c45a6a8e17
	https://git.kernel.org/stable/c/047fce470412ab64cb7345f9ff5d06919078ad79
	https://git.kernel.org/stable/c/2ab32986a0b9e329eb7f8f04dd57cc127f797c08
	https://git.kernel.org/stable/c/7f0ccfad2031eddcc510caf4e57f2d4aa2d8a50b
	https://git.kernel.org/stable/c/9263fd2a63487c6d04cbb7b74a48fb12e1e352d0
	https://git.kernel.org/stable/c/f5c24d94512f1b288262beda4d3dcb9629222fc7
