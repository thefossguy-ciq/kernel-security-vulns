From bippy-b4257b672505 Mon Sep 17 00:00:00 2001
From: Lee Jones <lee@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2023-52625: drm/amd/display: Refactor DMCUB enter/exit idle interface
X-Developer-Signature: v=1; a=openpgp-sha256; l=2908; i=lee@kernel.org;
 h=from:subject; bh=dYQuEgf/y2ZX5GMC2xyK/I+FRLR6a3Rzv1UaPtbrZCM=;
 b=owEBbQKS/ZANAwAKAVGvii+H/HdhAcsmYgBmAwrQ7Ra9/z7IBROjG02wb/G/kuYqsFpwbmJL8
 GyPx7PmyMiJAjMEAAEKAB0WIQR2tsk1o74gmpTwh0hRr4ovh/x3YQUCZgMK0AAKCRBRr4ovh/x3
 YZSdD/9uwipBJFi+vIdSrsgc6ITGqChyQPSgnhFHEQeFiHTDaK92B1YuJvJ1sr3TQDePBxqJ7E8
 Wqjrso+Z4Hnt6baYqUnnlKYmok5cgbLBpUU305c06GYcPbtyF6sZSMxMHn73uRMVlJvanTlwI+Y
 dp+3PC4/6+XQQIj3epWrZ0gCxHszo9RaO7wj54j3kcqd9f/Wt+VS6nAsyQyRbwgq9r4hS4O54C7
 2I2H0yi7/RSezTyUr+AkpoS4vP5oFAvfuv06TTFEAavw/R52QsIbGuYOmpXHphkwyFOI5Qxf7OL
 /mV/AbaIoQ++7LPLLI2xrBbf6LS0F1oO9BwJaAZXBvyncutKNBnN4FpB0oLtGJ4tGTQc/ygI07S
 nhjIRZl+P34n5SVWPoMtrHdUt093xAM51aSqMHCmSTCg/d7NnlqFs1dWtoJ78Gj1aPm+b3eYUMM
 yzTq3EfJfyeniHvZgIGeKjVf+QvhyHIxL8rO8CibEZgkehMuOmCI1FTn/UYsXPjFbNq8EYJKQmf
 UCpzxV+PjbKIQsWRGvxjJWI36Qr2DfbTP7fTSAg6kBMUZ0ymVXRPdKLgpDQFm8jITda4YhglsDD
 K+hVd7WD5jtAcBw0434jmrXQ4oz2FnpInxgcEVR7oSJR1XDqSg+kmh/9H/MlaeTeiQXUay5H7GQ
 LzaTQ2Wlg5Tqgnw==
X-Developer-Key: i=lee@kernel.org; a=openpgp;
 fpr=76B6C935A3BE209A94F0874851AF8A2F87FC7761

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Refactor DMCUB enter/exit idle interface

[Why]
We can hang in place trying to send commands when the DMCUB isn't
powered on.

[How]
We need to exit out of the idle state prior to sending a command,
but the process that performs the exit also invokes a command itself.

Fixing this issue involves the following:

1. Using a software state to track whether or not we need to start
   the process to exit idle or notify idle.

It's possible for the hardware to have exited an idle state without
driver knowledge, but entering one is always restricted to a driver
allow - which makes the SW state vs HW state mismatch issue purely one
of optimization, which should seldomly be hit, if at all.

2. Refactor any instances of exit/notify idle to use a single wrapper
   that maintains this SW state.

This works simialr to dc_allow_idle_optimizations, but works at the
DMCUB level and makes sure the state is marked prior to any notify/exit
idle so we don't enter an infinite loop.

3. Make sure we exit out of idle prior to sending any commands or
   waiting for DMCUB idle.

This patch takes care of 1/2. A future patch will take care of wrapping
DMCUB command submission with calls to this new interface.

The Linux kernel CVE team has assigned CVE-2023-52625 to this issue.


Affected and fixed versions
===========================

	Fixed in 6.7.3 with commit 820c3870c491
	Fixed in 6.8 with commit 8e57c06bf4b0

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2023-52625
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c
	drivers/gpu/drm/amd/display/dc/dc_dmub_srv.c
	drivers/gpu/drm/amd/display/dc/dc_dmub_srv.h
	drivers/gpu/drm/amd/display/dc/hwss/dcn35/dcn35_hwseq.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/820c3870c491946a78950cdf961bf40e28c1025f
	https://git.kernel.org/stable/c/8e57c06bf4b0f51a4d6958e15e1a99c9520d00fa
