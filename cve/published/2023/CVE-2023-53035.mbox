From bippy-1.1.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2023-53035: nilfs2: fix kernel-infoleak in nilfs_ioctl_wrap_copy()
Message-Id: <2025050200-CVE-2023-53035-badd@gregkh>
Content-Length: 4930
Lines: 111
X-Developer-Signature: v=1; a=openpgp-sha256; l=5042;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=EkRXnkw78J8VzlSB8PTtw2/6s9pWHJARS/vbo7EfcNA=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBkir66orvr3es5M73epLx/vOvmsaZpN5VKRE3VrZ77+Y
 tLNnX9aoiOWhUGQiUFWTJHlyzaeo/srDil6GdqehpnDygQyhIGLUwAmso+LYX4ut/CZ/Aqf20zX
 /ghrcz84GiZ3NpthwbYlf2r4oyV/GK+IbfjILSK0asULGQA=
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

nilfs2: fix kernel-infoleak in nilfs_ioctl_wrap_copy()

The ioctl helper function nilfs_ioctl_wrap_copy(), which exchanges a
metadata array to/from user space, may copy uninitialized buffer regions
to user space memory for read-only ioctl commands NILFS_IOCTL_GET_SUINFO
and NILFS_IOCTL_GET_CPINFO.

This can occur when the element size of the user space metadata given by
the v_size member of the argument nilfs_argv structure is larger than the
size of the metadata element (nilfs_suinfo structure or nilfs_cpinfo
structure) on the file system side.

KMSAN-enabled kernels detect this issue as follows:

 BUG: KMSAN: kernel-infoleak in instrument_copy_to_user
 include/linux/instrumented.h:121 [inline]
 BUG: KMSAN: kernel-infoleak in _copy_to_user+0xc0/0x100 lib/usercopy.c:33
  instrument_copy_to_user include/linux/instrumented.h:121 [inline]
  _copy_to_user+0xc0/0x100 lib/usercopy.c:33
  copy_to_user include/linux/uaccess.h:169 [inline]
  nilfs_ioctl_wrap_copy+0x6fa/0xc10 fs/nilfs2/ioctl.c:99
  nilfs_ioctl_get_info fs/nilfs2/ioctl.c:1173 [inline]
  nilfs_ioctl+0x2402/0x4450 fs/nilfs2/ioctl.c:1290
  nilfs_compat_ioctl+0x1b8/0x200 fs/nilfs2/ioctl.c:1343
  __do_compat_sys_ioctl fs/ioctl.c:968 [inline]
  __se_compat_sys_ioctl+0x7dd/0x1000 fs/ioctl.c:910
  __ia32_compat_sys_ioctl+0x93/0xd0 fs/ioctl.c:910
  do_syscall_32_irqs_on arch/x86/entry/common.c:112 [inline]
  __do_fast_syscall_32+0xa2/0x100 arch/x86/entry/common.c:178
  do_fast_syscall_32+0x37/0x80 arch/x86/entry/common.c:203
  do_SYSENTER_32+0x1f/0x30 arch/x86/entry/common.c:246
  entry_SYSENTER_compat_after_hwframe+0x70/0x82

 Uninit was created at:
  __alloc_pages+0x9f6/0xe90 mm/page_alloc.c:5572
  alloc_pages+0xab0/0xd80 mm/mempolicy.c:2287
  __get_free_pages+0x34/0xc0 mm/page_alloc.c:5599
  nilfs_ioctl_wrap_copy+0x223/0xc10 fs/nilfs2/ioctl.c:74
  nilfs_ioctl_get_info fs/nilfs2/ioctl.c:1173 [inline]
  nilfs_ioctl+0x2402/0x4450 fs/nilfs2/ioctl.c:1290
  nilfs_compat_ioctl+0x1b8/0x200 fs/nilfs2/ioctl.c:1343
  __do_compat_sys_ioctl fs/ioctl.c:968 [inline]
  __se_compat_sys_ioctl+0x7dd/0x1000 fs/ioctl.c:910
  __ia32_compat_sys_ioctl+0x93/0xd0 fs/ioctl.c:910
  do_syscall_32_irqs_on arch/x86/entry/common.c:112 [inline]
  __do_fast_syscall_32+0xa2/0x100 arch/x86/entry/common.c:178
  do_fast_syscall_32+0x37/0x80 arch/x86/entry/common.c:203
  do_SYSENTER_32+0x1f/0x30 arch/x86/entry/common.c:246
  entry_SYSENTER_compat_after_hwframe+0x70/0x82

 Bytes 16-127 of 3968 are uninitialized
 ...

This eliminates the leak issue by initializing the page allocated as
buffer using get_zeroed_page().

The Linux kernel CVE team has assigned CVE-2023-53035 to this issue.


Affected and fixed versions
===========================

	Fixed in 4.14.312 with commit a94932381e8dae4117e9129b3c1282e18aa97b05
	Fixed in 4.19.280 with commit 9c5034e9a0e03db8d5e9eabb176340259b5b97e4
	Fixed in 5.4.240 with commit 8f5cbf6a8c0e19b062b829c5b7aca01468bb57f6
	Fixed in 5.10.177 with commit d18db946cc6a394291539e030df32324285648f7
	Fixed in 5.15.105 with commit 5bb105cc72beb9d51bf12f5c657336d2d35bdc5d
	Fixed in 6.1.22 with commit 5f33b042f74fc9662eba17f4cd19b07d84bbc6c5
	Fixed in 6.2.9 with commit 8a6550b365c0ce2e65905de57dcbfe1f7d629726
	Fixed in 6.3 with commit 003587000276f81d0114b5ce773d80c119d8cb30

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2023-53035
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	fs/nilfs2/ioctl.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/a94932381e8dae4117e9129b3c1282e18aa97b05
	https://git.kernel.org/stable/c/9c5034e9a0e03db8d5e9eabb176340259b5b97e4
	https://git.kernel.org/stable/c/8f5cbf6a8c0e19b062b829c5b7aca01468bb57f6
	https://git.kernel.org/stable/c/d18db946cc6a394291539e030df32324285648f7
	https://git.kernel.org/stable/c/5bb105cc72beb9d51bf12f5c657336d2d35bdc5d
	https://git.kernel.org/stable/c/5f33b042f74fc9662eba17f4cd19b07d84bbc6c5
	https://git.kernel.org/stable/c/8a6550b365c0ce2e65905de57dcbfe1f7d629726
	https://git.kernel.org/stable/c/003587000276f81d0114b5ce773d80c119d8cb30
