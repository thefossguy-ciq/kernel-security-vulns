From bippy-1.2.0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@kernel.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2023-53339: btrfs: fix BUG_ON condition in btrfs_cancel_balance
Message-Id: <2025091718-CVE-2023-53339-437d@gregkh>
Content-Length: 3420
Lines: 89
X-Developer-Signature: v=1; a=openpgp-sha256; l=3510;
 i=gregkh@linuxfoundation.org; h=from:subject:message-id;
 bh=0VmspE5J5QI4ZmxJc6DKBRS88Wi+wAuB054px4pg6vw=;
 b=owGbwMvMwCRo6H6F97bub03G02pJDBmnzgh1fjvtdlPzyFF1juhKPhlW8c+7p2ZcURXXmlswe
 WunctqDjlgWBkEmBlkxRZYv23iO7q84pOhlaHsaZg4rE8gQBi5OAZjIYwuG+S7V3OLtjmwKVyvv
 h+1JT1qXNGOjKsOCOSsMZkxLNxYvX1e/9UdA/7EipjUfAA==
X-Developer-Key: i=gregkh@linuxfoundation.org; a=openpgp;
 fpr=F4B60CC5BF78C2214A313DCB3147D40DDB2DFB29

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

btrfs: fix BUG_ON condition in btrfs_cancel_balance

Pausing and canceling balance can race to interrupt balance lead to BUG_ON
panic in btrfs_cancel_balance. The BUG_ON condition in btrfs_cancel_balance
does not take this race scenario into account.

However, the race condition has no other side effects. We can fix that.

Reproducing it with panic trace like this:

  kernel BUG at fs/btrfs/volumes.c:4618!
  RIP: 0010:btrfs_cancel_balance+0x5cf/0x6a0
  Call Trace:
   <TASK>
   ? do_nanosleep+0x60/0x120
   ? hrtimer_nanosleep+0xb7/0x1a0
   ? sched_core_clone_cookie+0x70/0x70
   btrfs_ioctl_balance_ctl+0x55/0x70
   btrfs_ioctl+0xa46/0xd20
   __x64_sys_ioctl+0x7d/0xa0
   do_syscall_64+0x38/0x80
   entry_SYSCALL_64_after_hwframe+0x63/0xcd

  Race scenario as follows:
  > mutex_unlock(&fs_info->balance_mutex);
  > --------------------
  > .......issue pause and cancel req in another thread
  > --------------------
  > ret = __btrfs_balance(fs_info);
  >
  > mutex_lock(&fs_info->balance_mutex);
  > if (ret == -ECANCELED && atomic_read(&fs_info->balance_pause_req)) {
  >         btrfs_info(fs_info, "balance: paused");
  >         btrfs_exclop_balance(fs_info, BTRFS_EXCLOP_BALANCE_PAUSED);
  > }

The Linux kernel CVE team has assigned CVE-2023-53339 to this issue.


Affected and fixed versions
===========================

	Fixed in 4.19.293 with commit 7c93b89cd46636b5e74c12fa21dd86167bc6ea8d
	Fixed in 5.4.255 with commit a0a462a0f20926918d6009f0b4b25673e883fc98
	Fixed in 5.10.192 with commit bd7bef82ce0e929ef4cf63a34990545aaca28077
	Fixed in 5.15.128 with commit b966e9e1e250dfdb41a7f41775faea4a37af923c
	Fixed in 6.1.47 with commit ceb9ba8e30833a4823e2dc73f80ebcdf2498d01a
	Fixed in 6.4.12 with commit ae81329f7de3aa6f34ecdfa5412e72161a30e9ce
	Fixed in 6.5 with commit 29eefa6d0d07e185f7bfe9576f91e6dba98189c2

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2023-53339
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	fs/btrfs/volumes.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/7c93b89cd46636b5e74c12fa21dd86167bc6ea8d
	https://git.kernel.org/stable/c/a0a462a0f20926918d6009f0b4b25673e883fc98
	https://git.kernel.org/stable/c/bd7bef82ce0e929ef4cf63a34990545aaca28077
	https://git.kernel.org/stable/c/b966e9e1e250dfdb41a7f41775faea4a37af923c
	https://git.kernel.org/stable/c/ceb9ba8e30833a4823e2dc73f80ebcdf2498d01a
	https://git.kernel.org/stable/c/ae81329f7de3aa6f34ecdfa5412e72161a30e9ce
	https://git.kernel.org/stable/c/29eefa6d0d07e185f7bfe9576f91e6dba98189c2
